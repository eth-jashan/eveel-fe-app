{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport NewsModel from \"../../../model/newsModel\";\nimport api_utils from \"../../../assets/api\";\nexport var ADD_LIKEDNEWS = \"ADD_LIKEDNEWS\";\nexport var FETCH_LIKEDNEWS = \"FETCH_LIKEDNEWS\";\nexport var add_likedNews = function add_likedNews(id) {\n  return function _callee(dispatch, getState) {\n    var uid, response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uid = getState().auth.uid;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/liked_news.json?\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                newsId: id\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resData = _context.sent;\n            dispatch({\n              type: ADD_LIKEDNEWS,\n              news: news\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetch_likedNews = function fetch_likedNews() {\n  return function _callee2(dispatch, getState) {\n    var uid, response, resData, newsIdList, key;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uid = getState().auth.uid;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/liked_news.json?\"));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resData = _context2.sent;\n            newsIdList = [];\n\n            for (key in resData) {\n              newsIdList.push(resData[key].newsId);\n            }\n\n            dispatch({\n              type: FETCH_LIKEDNEWS,\n              list: newsIdList\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Store/action/likedNews.js"],"names":["NewsModel","api_utils","ADD_LIKEDNEWS","FETCH_LIKEDNEWS","add_likedNews","id","dispatch","getState","uid","auth","fetch","baseURL_Demo","method","headers","body","JSON","stringify","newsId","response","json","resData","type","news","fetch_likedNews","newsIdList","key","push","list"],"mappings":";AAAA,OAAOA,SAAP;AACA,OAAOC,SAAP;AACA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAQ;AACnC,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,GADD,GACOD,QAAQ,GAAGE,IAAX,CAAgBD,GADvB;AAAA;AAAA,6CAEkBE,KAAK,CACvBT,SAAS,CAACU,YADa,eACSH,GADT,wBAE1B;AACEI,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFX;AAKEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,MAAM,EAAEZ;AADW,eAAf;AALR,aAF0B,CAFvB;;AAAA;AAECa,YAAAA,QAFD;AAAA;AAAA,6CAciBA,QAAQ,CAACC,IAAT,EAdjB;;AAAA;AAcCC,YAAAA,OAdD;AAeLd,YAAAA,QAAQ,CAAC;AAAEe,cAAAA,IAAI,EAAEnB,aAAR;AAAuBoB,cAAAA,IAAI,EAAEA;AAA7B,aAAD,CAAR;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAiBD,CAlBM;AAoBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAO,kBAAOjB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,GADD,GACOD,QAAQ,GAAGE,IAAX,CAAgBD,GADvB;AAAA;AAAA,6CAEkBE,KAAK,CACvBT,SAAS,CAACU,YADa,eACSH,GADT,uBAFvB;;AAAA;AAECU,YAAAA,QAFD;AAAA;AAAA,6CAKiBA,QAAQ,CAACC,IAAT,EALjB;;AAAA;AAKCC,YAAAA,OALD;AAMCI,YAAAA,UAND,GAMc,EANd;;AAOL,iBAAWC,GAAX,IAAkBL,OAAlB,EAA2B;AACzBI,cAAAA,UAAU,CAACE,IAAX,CAAgBN,OAAO,CAACK,GAAD,CAAP,CAAaR,MAA7B;AACD;;AACDX,YAAAA,QAAQ,CAAC;AAAEe,cAAAA,IAAI,EAAElB,eAAR;AAAyBwB,cAAAA,IAAI,EAAEH;AAA/B,aAAD,CAAR;;AAVK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAYD,CAbM","sourcesContent":["import NewsModel from \"../../../model/newsModel\";\nimport api_utils from \"../../../assets/api\";\nexport const ADD_LIKEDNEWS = \"ADD_LIKEDNEWS\";\nexport const FETCH_LIKEDNEWS = \"FETCH_LIKEDNEWS\";\nexport const add_likedNews = (id) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/liked_news.json?`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          newsId: id,\n        }),\n      }\n    );\n    const resData = await response.json();\n    dispatch({ type: ADD_LIKEDNEWS, news: news });\n  };\n};\n\nexport const fetch_likedNews = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/liked_news.json?`\n    );\n    const resData = await response.json();\n    const newsIdList = [];\n    for (const key in resData) {\n      newsIdList.push(resData[key].newsId);\n    }\n    dispatch({ type: FETCH_LIKEDNEWS, list: newsIdList });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}