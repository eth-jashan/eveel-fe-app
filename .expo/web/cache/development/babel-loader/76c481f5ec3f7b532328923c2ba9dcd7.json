{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport LottieView from \"lottie-react-native\";\nimport React, { useEffect } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Color from \"../../../assets/Color\";\nimport { useDispatch } from \"react-redux\";\nimport { googleLogin } from \"../../Component/Common/GoogleLogin\";\nimport { login } from \"../../Store/action/auth\";\nimport { getContacts } from \"../../Store/action/contact\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var GoogleSignIn = function GoogleSignIn() {\n    var result, name;\n    return _regeneratorRuntime.async(function GoogleSignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(googleLogin());\n\n          case 3:\n            result = _context.sent;\n            name = result.user.providerData[0].displayName.split(\" \");\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(dispatch(login(name[0], name[1], result.user.providerData[0].email, result.user.uid, result.credential.oauthIdToken)));\n\n          case 7:\n            dispatch(getContacts(result.user.uid));\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var NumberLogin = function NumberLogin() {\n    return _regeneratorRuntime.async(function NumberLogin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            navigation.navigate(\"Phone\");\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.screen,\n    children: [_jsx(AnimatedLottieView, {\n      style: styles.image,\n      autoPlay: true,\n      source: require(\"../../../assets/lottie-files/50124-user-profile.json\")\n    }), _jsxs(View, {\n      style: styles.FeatureSection,\n      children: [_jsxs(Text, {\n        style: styles.features,\n        children: [\"Explore\", _jsx(Text, {\n          style: styles.FeatureSeparation,\n          children: \".\"\n        }), \"Buy\", _jsx(Text, {\n          style: styles.FeatureSeparation,\n          children: \".\"\n        }), \"Recharge\", _jsx(Text, {\n          style: styles.FeatureSeparation,\n          children: \".\"\n        })]\n      }), _jsx(View, {\n        style: {\n          width: 250,\n          height: 75\n        },\n        children: _jsx(Image, {\n          resizeMode: \"contain\",\n          source: require(\"../../../assets/Images/header-logo.png\"),\n          style: styles.imageSize\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.loginSection,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          NumberLogin();\n        },\n        style: styles.loginButtonFaceBook,\n        children: _jsxs(View, {\n          style: styles.LoginArea,\n          children: [_jsx(Feather, {\n            name: \"phone\",\n            size: 24,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.LoginText,\n            children: \"Continue with number\"\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButtonGoogle,\n        onPress: function onPress() {\n          GoogleSignIn();\n        },\n        children: _jsxs(View, {\n          style: styles.LoginArea,\n          children: [_jsx(AntDesign, {\n            name: \"google\",\n            size: 24,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.LoginText,\n            children: \"Continue with google\"\n          })]\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    height: height,\n    width: width,\n    backgroundColor: \"black\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 10,\n    paddingVertical: 50\n  },\n  image: {\n    alignSelf: \"center\",\n    maxWidth: 300,\n    height: 300\n  },\n  features: {\n    fontFamily: \"black\",\n    fontSize: 18,\n    color: \"white\",\n    alignSelf: \"center\"\n  },\n  FeatureSection: {\n    alignSelf: \"center\"\n  },\n  FeatureSeparation: {\n    fontFamily: \"black\",\n    fontSize: 25,\n    color: \"#1ec0af\"\n  },\n  imageSize: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  loginSection: {\n    width: \"100%\",\n    alignSelf: \"center\"\n  },\n  loginButtonFaceBook: {\n    alignItems: \"center\",\n    width: \"94%\",\n    backgroundColor: Color.darkgreen,\n    borderRadius: 12,\n    padding: 12,\n    alignSelf: \"center\"\n  },\n  loginButtonGoogle: {\n    marginVertical: 16,\n    alignItems: \"center\",\n    width: \"94%\",\n    borderRadius: 12,\n    padding: 12,\n    backgroundColor: \"#d24736\",\n    alignSelf: \"center\"\n  },\n  LoginArea: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"100%\"\n  },\n  LoginText: {\n    color: \"white\",\n    fontFamily: \"bold\",\n    fontSize: 16,\n    alignSelf: \"center\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Screen/Login/LoginScreen.js"],"names":["AnimatedLottieView","LottieView","React","useEffect","TouchableOpacity","SafeAreaView","AntDesign","Feather","Color","useDispatch","googleLogin","login","getContacts","Dimensions","get","width","height","LoginScreen","navigation","dispatch","GoogleSignIn","result","name","user","providerData","displayName","split","email","uid","credential","oauthIdToken","console","log","NumberLogin","navigate","styles","screen","image","require","FeatureSection","features","FeatureSeparation","imageSize","loginSection","loginButtonFaceBook","LoginArea","LoginText","loginButtonGoogle","StyleSheet","create","backgroundColor","justifyContent","paddingHorizontal","paddingVertical","alignSelf","maxWidth","fontFamily","fontSize","color","alignItems","darkgreen","borderRadius","padding","marginVertical","flexDirection"],"mappings":"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","sourcesContent":["import AnimatedLottieView from \"lottie-react-native\";\nimport LottieView from \"lottie-react-native\";\nimport React, { useEffect } from \"react\";\nimport { Dimensions, Image, Text, View, StyleSheet } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport Color from \"../../../assets/Color\";\nimport { useDispatch } from \"react-redux\";\nimport { googleLogin } from \"../../Component/Common/GoogleLogin\";\nimport { login } from \"../../Store/action/auth\";\nimport { getContacts } from \"../../Store/action/contact\";\nconst { width, height } = Dimensions.get(\"screen\");\n\nconst LoginScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const GoogleSignIn = async () => {\n    try {\n      const result = await googleLogin();\n      //console.log(\"Result===>\", result);\n      const name = result.user.providerData[0].displayName.split(\" \");\n      //console.log(name);\n      await dispatch(\n        login(\n          name[0],\n          name[1],\n          result.user.providerData[0].email,\n          result.user.uid,\n          result.credential.oauthIdToken\n        )\n      );\n      dispatch(getContacts(result.user.uid));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const NumberLogin = async () => {\n    navigation.navigate(\"Phone\");\n  };\n  return (\n    <SafeAreaView style={styles.screen}>\n      <AnimatedLottieView\n        style={styles.image}\n        autoPlay={true}\n        source={require(\"../../../assets/lottie-files/50124-user-profile.json\")}\n        // OR find more Lottie files @ https://lottiefiles.com/featured\n        // Just click the one you like, place that file in the 'assets' folder to the left, and replace the above 'require' statement\n      />\n      <View style={styles.FeatureSection}>\n        {/* <Text style={{fontFamily:'black', fontSize:22, color:'#1ec0af', alignSelf:'center'}}>One stop to</Text> */}\n        <Text style={styles.features}>\n          Explore\n          <Text style={styles.FeatureSeparation}>.</Text>\n          Buy\n          <Text style={styles.FeatureSeparation}>.</Text>\n          Recharge\n          <Text style={styles.FeatureSeparation}>.</Text>\n        </Text>\n        {/* <Text style={{fontFamily:'black', fontSize:22, color:'#1ec0af', alignSelf:'center'}}>For your EV</Text> */}\n        <View style={{ width: 250, height: 75 }}>\n          <Image\n            resizeMode=\"contain\"\n            source={require(\"../../../assets/Images/header-logo.png\")}\n            style={styles.imageSize}\n          />\n        </View>\n      </View>\n\n      <View style={styles.loginSection}>\n        <TouchableOpacity\n          onPress={() => {\n            NumberLogin();\n          }}\n          style={styles.loginButtonFaceBook}\n        >\n          <View style={styles.LoginArea}>\n            <Feather name=\"phone\" size={24} color=\"white\" />\n            <Text style={styles.LoginText}>Continue with number</Text>\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.loginButtonGoogle}\n          onPress={() => {\n            GoogleSignIn();\n          }}\n        >\n          <View style={styles.LoginArea}>\n            <AntDesign name=\"google\" size={24} color=\"white\" />\n            <Text style={styles.LoginText}>Continue with google</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    height: height,\n    width: width,\n    backgroundColor: \"black\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 10,\n    paddingVertical: 50,\n  },\n  image: {\n    alignSelf: \"center\",\n    maxWidth: 300,\n    height: 300,\n  },\n  features: {\n    fontFamily: \"black\",\n    fontSize: 18,\n    color: \"white\",\n    alignSelf: \"center\",\n  },\n  FeatureSection: { alignSelf: \"center\" },\n  FeatureSeparation: { fontFamily: \"black\", fontSize: 25, color: \"#1ec0af\" },\n  imageSize: { width: \"100%\", height: \"100%\" },\n  loginSection: { width: \"100%\", alignSelf: \"center\" },\n  loginButtonFaceBook: {\n    alignItems: \"center\",\n    width: \"94%\",\n    backgroundColor: Color.darkgreen,\n    borderRadius: 12,\n    padding: 12,\n    alignSelf: \"center\",\n  },\n  loginButtonGoogle: {\n    marginVertical: 16,\n    alignItems: \"center\",\n    width: \"94%\",\n    borderRadius: 12,\n    padding: 12,\n    backgroundColor: \"#d24736\",\n    alignSelf: \"center\",\n  },\n  LoginArea: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n  },\n  LoginText: {\n    color: \"white\",\n    fontFamily: \"bold\",\n    fontSize: 16,\n    alignSelf: \"center\",\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}