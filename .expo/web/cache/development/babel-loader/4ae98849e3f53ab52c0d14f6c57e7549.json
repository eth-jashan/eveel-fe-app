{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useFocusEffect } from \"@react-navigation/core\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./PumpStyles/PumpTabScreenStyles\";\nimport * as Location from \"expo-location\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PumpTabScreen = function PumpTabScreen(props) {\n  var GOOGLE_MAPS_APIKEY = \"AIzaSyDsDKH-37DS6ZnGY_oIi7t5YE0oAAZ-V88\";\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      go = _useState2[0],\n      setGo = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMsg = _useState6[0],\n      setErrorMsg = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg(\"Permission to access location was denied\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              console.log(location);\n              setLocation(location);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    if (location != null) {\n      props.navigation.navigate(\"PumpScreen\", {\n        location: location\n      });\n    }\n  }, [location]);\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [!errorMsg && _jsx(Text, {\n      style: styles.title,\n      children: \"Loading...\"\n    }), errorMsg && _jsx(Text, {\n      style: styles.title,\n      children: errorMsg\n    })]\n  });\n};\n\nexport default PumpTabScreen;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Screen/Pump/PumpTabScreen.js"],"names":["useFocusEffect","React","useState","useEffect","styles","Location","PumpTabScreen","props","GOOGLE_MAPS_APIKEY","go","setGo","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","console","log","navigation","navigate","screen","title"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,wBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,OAAOC,MAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,kBAAkB,GAAG,yCAA3B;;AACA,kBAAoBN,QAAQ,CAAC,KAAD,CAA5B;AAAA;AAAA,MAAOO,EAAP;AAAA,MAAWC,KAAX;;AACA,mBAAgCR,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCV,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBE,QAAQ,CAACU,iCAAT,EADxB;;AAAA;AAAA;AACOC,cAAAA,MADP,yBACOA,MADP;;AAAA,oBAEKA,MAAM,KAAK,SAFhB;AAAA;AAAA;AAAA;;AAGGF,cAAAA,WAAW,CAAC,0CAAD,CAAX;AAHH;;AAAA;AAAA;AAAA,+CAMsBT,QAAQ,CAACY,uBAAT,CAAiC,EAAjC,CANtB;;AAAA;AAMKN,cAAAA,QANL;AAOCO,cAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAC,cAAAA,WAAW,CAACD,QAAD,CAAX;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAUD,GAXQ,EAWN,EAXM,CAAT;AA4BAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,QAAQ,IAAI,IAAhB,EAAsB;AACpBJ,MAAAA,KAAK,CAACa,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,EAAwC;AACtCV,QAAAA,QAAQ,EAAEA;AAD4B,OAAxC;AAGD;AACF,GANQ,EAMN,CAACA,QAAD,CANM,CAAT;AAOA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACkB,MAApB;AAAA,eACG,CAACT,QAAD,IAAa,KAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACmB,KAApB;AAAA;AAAA,MADhB,EAEGV,QAAQ,IAAI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACmB,KAApB;AAAA,gBAA4BV;AAA5B,MAFf;AAAA,IADF;AAMD,CA9CD;;AAgDA,eAAeP,aAAf","sourcesContent":["import { useFocusEffect } from \"@react-navigation/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport styles from \"./PumpStyles/PumpTabScreenStyles\";\nimport * as Location from \"expo-location\";\nconst PumpTabScreen = (props) => {\n  const GOOGLE_MAPS_APIKEY = \"AIzaSyDsDKH-37DS6ZnGY_oIi7t5YE0oAAZ-V88\";\n  const [go, setGo] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n      let location = await Location.getCurrentPositionAsync({});\n      console.log(location);\n      setLocation(location);\n    })();\n  }, []);\n  // useEffect(() => {\n  //   return async () => {\n  //     if (location != null) {\n  //       const response = await fetch(\n  //         `https://maps.googleapis.com/maps/api/geocode/json?latlng=${location.coords.latitude},${location.coords.longitude}&amp;key=${GOOGLE_MAPS_APIKEY}`\n  //       );\n  //       const resData = await response.json();\n  //       console.log(resData);\n  //     }\n  //   };\n  // }, [location]);\n  // const GotoMap = () => {\n  //   props.navigation.navigate(\"PumpScreen\", {\n  //     location: location,\n  //   });\n  // };\n  useEffect(() => {\n    if (location != null) {\n      props.navigation.navigate(\"PumpScreen\", {\n        location: location,\n      });\n    }\n  }, [location]);\n  return (\n    <View style={styles.screen}>\n      {!errorMsg && <Text style={styles.title}>Loading...</Text>}\n      {errorMsg && <Text style={styles.title}>{errorMsg}</Text>}\n    </View>\n  );\n};\n\nexport default PumpTabScreen;\n"]},"metadata":{},"sourceType":"module"}