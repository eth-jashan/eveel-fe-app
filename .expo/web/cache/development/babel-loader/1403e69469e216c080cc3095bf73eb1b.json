{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CategorySelection from \"../../Component/Utils/HomeScreenUtils/categorySelectionUtil\";\nimport HomeBanner from \"../../Component/Utils/HomeScreenUtils/HomebannerUtil\";\nimport BrandScroll from \"../../Component/Utils/HomeScreenUtils/BrandScrollUtil\";\nimport CarScroll from \"../../Component/Utils/HomeScreenUtils/CarScrollUtil\";\nimport Color from \"../../../assets/Color\";\nimport styles from \"./HomeStyles/HomescreenStyles\";\nimport { useNavigationState } from \"@react-navigation/core\";\nimport { fetchCompany } from \"../../Store/action/company\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCarModel } from \"../../Store/action/car\";\nimport HomeScreenLoadingUtil from \"../../Component/Utils/HomeScreenUtils/HomeScreenLoadingUtil\";\nimport { LoggedInUser } from \"../../Store/action/auth\";\nimport { fetchfeature } from \"../../Store/action/feature\";\nimport { fetch_station } from \"../../Store/action/station\";\nimport { fetchLikedCar } from \"../../Store/action/likedCars\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Homescreen = function Homescreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.auth;\n  });\n  var CList = useSelector(function (state) {\n    return state.company.companyList;\n  });\n  var VList = useSelector(function (state) {\n    return state.car.vehicleList;\n  });\n  var carList = useSelector(function (state) {\n    return state.car.carList;\n  });\n  var scootyList = useSelector(function (state) {\n    return state.car.scootyList;\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      companyList = _useState2[0],\n      setCompanyList = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vehicleList = _useState4[0],\n      setVehicleList = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      empty = _useState6[0],\n      setEmpty = _useState6[1];\n\n  useEffect(function () {\n    setCompanyList(CList);\n    setVehicleList(VList);\n  }, [CList, VList]);\n\n  var SelectedCategory = function SelectedCategory(type) {\n    switch (type) {\n      case \"All\":\n        setEmpty(false);\n        setCompanyList(CList);\n        setVehicleList(VList);\n        return;\n\n      case \"Cars\":\n        setEmpty(false);\n        setCompanyList(CList.filter(function (item) {\n          return item.type === \"car\";\n        }));\n        setVehicleList(carList);\n        console.log(\"CCCCCCC\", companyList);\n        return;\n\n      case \"Scooty\":\n        setEmpty(false);\n        setCompanyList(CList.filter(function (item) {\n          return item.type === \"twoWheeler\";\n        }));\n        setVehicleList(scootyList);\n        return;\n\n      case \"Cycle\":\n        setEmpty(true);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var homeScreenData = function homeScreenData() {\n    dispatch(fetchCompany());\n    dispatch(fetchCarModel());\n    dispatch(fetchfeature());\n    dispatch(fetch_station());\n    dispatch(fetchLikedCar());\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    homeScreenData();\n    setLoading(false);\n  }, [dispatch]);\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsxs(View, {\n      style: styles.LoadedScreen,\n      children: [_jsxs(View, {\n        style: styles.heading,\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Image, {\n            source: require(\"../../../assets/Images/eveels-logo.png\"),\n            style: styles.logo\n          }), _jsx(Image, {\n            source: require(\"../../../assets/Images/eveels-words.png\"),\n            style: styles.logo2\n          })]\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          children: _jsx(Image, {\n            source: require(\"../../../assets/Images/Ellipse.png\"),\n            style: styles.profile\n          })\n        })]\n      }), _jsxs(ScrollView, {\n        contentContainerStyle: styles.screenscroll,\n        showsVerticalScrollIndicator: false,\n        children: [_jsxs(View, {\n          style: styles.TitleView,\n          children: [_jsxs(Text, {\n            style: styles.welcome,\n            children: [\"Good afternoon, \", user.first_name]\n          }), _jsx(Text, {\n            style: styles.slogan,\n            children: \"Let's find the perfect\"\n          }), _jsx(Text, {\n            style: styles.title,\n            children: \"Electric Vehicle \\u26A1 \"\n          })]\n        }), _jsx(HomeBanner, {}), _jsx(CategorySelection, {\n          selected: SelectedCategory\n        }), !empty && _jsx(BrandScroll, {\n          companyList: companyList\n        }), !empty && _jsx(CarScroll, {\n          vehicleList: vehicleList\n        })]\n      })]\n    })\n  });\n};\n\nexport default Homescreen;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Screen/Home/Homescreen.js"],"names":["React","useEffect","useState","CategorySelection","HomeBanner","BrandScroll","CarScroll","Color","styles","useNavigationState","fetchCompany","useDispatch","useSelector","fetchCarModel","HomeScreenLoadingUtil","LoggedInUser","fetchfeature","fetch_station","fetchLikedCar","Homescreen","navigation","dispatch","user","state","auth","CList","company","companyList","VList","car","vehicleList","carList","scootyList","setCompanyList","setVehicleList","empty","setEmpty","SelectedCategory","type","filter","item","console","log","loading","setLoading","homeScreenData","screen","LoadedScreen","heading","flexDirection","require","logo","logo2","openDrawer","profile","screenscroll","TitleView","welcome","first_name","slogan","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  ScrollView,\n  BackHandler,\n  Alert,\n  Platform,\n  TouchableOpacity,\n} from \"react-native\";\nimport CategorySelection from \"../../Component/Utils/HomeScreenUtils/categorySelectionUtil\";\nimport HomeBanner from \"../../Component/Utils/HomeScreenUtils/HomebannerUtil\";\nimport BrandScroll from \"../../Component/Utils/HomeScreenUtils/BrandScrollUtil\";\nimport CarScroll from \"../../Component/Utils/HomeScreenUtils/CarScrollUtil\";\nimport Color from \"../../../assets/Color\";\nimport styles from \"./HomeStyles/HomescreenStyles\";\nimport { useNavigationState } from \"@react-navigation/core\";\nimport { fetchCompany } from \"../../Store/action/company\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCarModel } from \"../../Store/action/car\";\nimport HomeScreenLoadingUtil from \"../../Component/Utils/HomeScreenUtils/HomeScreenLoadingUtil\";\nimport { LoggedInUser } from \"../../Store/action/auth\";\nimport { fetchfeature } from \"../../Store/action/feature\";\nimport { fetch_station } from \"../../Store/action/station\";\nimport { fetchLikedCar } from \"../../Store/action/likedCars\";\nconst Homescreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth);\n  const CList = useSelector((state) => state.company.companyList);\n  const VList = useSelector((state) => state.car.vehicleList);\n  const carList = useSelector((state) => state.car.carList);\n  const scootyList = useSelector((state) => state.car.scootyList);\n  const [companyList, setCompanyList] = useState();\n  const [vehicleList, setVehicleList] = useState();\n  const [empty, setEmpty] = useState(false);\n\n  useEffect(() => {\n    setCompanyList(CList);\n    setVehicleList(VList);\n  }, [CList, VList]);\n\n  const SelectedCategory = (type) => {\n    switch (type) {\n      case \"All\":\n        setEmpty(false);\n        setCompanyList(CList);\n        setVehicleList(VList);\n        return;\n      case \"Cars\":\n        setEmpty(false);\n        setCompanyList(CList.filter((item) => item.type === \"car\"));\n        setVehicleList(carList);\n        console.log(\"CCCCCCC\", companyList);\n        return;\n      case \"Scooty\":\n        setEmpty(false);\n        setCompanyList(CList.filter((item) => item.type === \"twoWheeler\"));\n        setVehicleList(scootyList);\n        return;\n      case \"Cycle\":\n        setEmpty(true);\n        return;\n      default:\n        return;\n    }\n  };\n  const [loading, setLoading] = useState(true);\n\n  const homeScreenData = () => {\n    dispatch(fetchCompany());\n    dispatch(fetchCarModel());\n    dispatch(fetchfeature());\n    dispatch(fetch_station());\n    dispatch(fetchLikedCar());\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    homeScreenData();\n    setLoading(false);\n  }, [dispatch]);\n  // useEffect(() => {\n  //   const backAction = () => {\n  //     Alert.alert(\"Hold on!\", \"Are you sure you want to go leave?\", [\n  //       {\n  //         text: \"Cancel\",\n  //         onPress: () => null,\n  //         style: \"cancel\",\n  //       },\n  //       { text: \"YES\", onPress: () => BackHandler.exitApp() },\n  //     ]);\n  //     return true;\n  //   };\n  //   if (Platform.OS==='android') {\n  //     const backHandler = BackHandler.addEventListener(\n  //       \"hardwareBackPress\",\n  //       backAction\n  //     );\n  //     return () => backHandler.remove();\n  //   } else {\n  //     props.navigation.addListener(\"beforeRemove\", (e) => {\n  //       e.preventDefault();\n  //     });\n  //   }\n  // }, [props.navigation]);\n  return (\n    <View style={styles.screen}>\n      {/* {loading ? (\n        <HomeScreenLoadingUtil />\n      ) : ( */}\n      <View style={styles.LoadedScreen}>\n        <View style={styles.heading}>\n          <View style={{ flexDirection: \"row\" }}>\n            <Image\n              source={require(\"../../../assets/Images/eveels-logo.png\")}\n              style={styles.logo}\n            />\n            <Image\n              source={require(\"../../../assets/Images/eveels-words.png\")}\n              style={styles.logo2}\n            />\n          </View>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.openDrawer();\n            }}\n          >\n            <Image\n              source={require(\"../../../assets/Images/Ellipse.png\")}\n              style={styles.profile}\n            />\n          </TouchableOpacity>\n        </View>\n        <ScrollView\n          contentContainerStyle={styles.screenscroll}\n          showsVerticalScrollIndicator={false}\n        >\n          <View style={styles.TitleView}>\n            <Text style={styles.welcome}>\n              Good afternoon, {user.first_name}\n            </Text>\n            <Text style={styles.slogan}>Let's find the perfect</Text>\n            <Text style={styles.title}>Electric Vehicle ⚡ </Text>\n          </View>\n          <HomeBanner />\n          <CategorySelection selected={SelectedCategory} />\n          {!empty && <BrandScroll companyList={companyList} />}\n          {!empty && <CarScroll vehicleList={vehicleList} />}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Homescreen;\n"]},"metadata":{},"sourceType":"module"}