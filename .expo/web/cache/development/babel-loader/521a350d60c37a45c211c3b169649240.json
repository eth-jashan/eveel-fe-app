{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Color from \"../../../assets/Color\";\nimport styles from \"./HomeStyles/CategoryListScreenStyles\";\nimport { category } from \"../../../model/Data/dummyData\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CategoryScreen = function CategoryScreen(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var url1 = \"https://cdni.autocarindia.com/Utils/ImageResizer.ashx?n=https%3A%2F%2Fcdni.autocarindia.com%2FExtraImages%2F20200904110617_EQC-front-track.jpg&h=795&w=1200&c=1\";\n  var url2 = \"https://ev-database.org/img/auto/Mercedes_EQC/Mercedes_EQC-01.jpg\";\n\n  var _useState = useState([{\n    index: \"1\",\n    uri: url1\n  }, {\n    index: \"2\",\n    uri: url2\n  }, {\n    index: \"3\",\n    uri: url1\n  }, {\n    index: \"4\",\n    uri: url2\n  }, {\n    index: \"5\",\n    uri: url1\n  }, {\n    index: \"6\",\n    uri: url2\n  }, {\n    index: \"7\",\n    uri: url1\n  }, {\n    index: \"7\",\n    uri: url2\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainImage = _useState2[0],\n      setMainImage = _useState2[1];\n\n  var category = (_route$params = route.params) == null ? void 0 : _route$params.list;\n  var data = category;\n  var scrollX = React.useRef(new Animated.Value(0)).current;\n  var ITEM_SIZE = width * 0.72;\n  var SPACER_SIZE = (width - ITEM_SIZE) / 2;\n\n  var getCatLogo = function getCatLogo(data) {\n    switch (data) {\n      case \"tata\":\n        return require(\"../../../assets/Images/Tata.png\");\n\n      case \"hyundai\":\n        return require(\"../../../assets/Images/Hyundai.png\");\n\n      case \"morris and garage\":\n        return require(\"../../../assets/Images/MG.png\");\n\n      case \"audi\":\n        return require(\"../../../assets/Images/Audi.png\");\n\n      case \"mercedes\":\n        return require(\"../../../assets/Images/Mercedes.png\");\n\n      default:\n        null;\n    }\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.Screen,\n    children: [data.map(function (item, index) {\n      return _jsx(Animated.Image, {\n        blurRadius: 2,\n        style: {\n          width: \"100%\",\n          height: 400,\n          zIndex: 0,\n          left: 0,\n          right: 0,\n          position: \"absolute\",\n          opacity: scrollX.interpolate({\n            inputRange: [(index - 1) * (ITEM_SIZE + 40), index * (ITEM_SIZE + 40), (index + 1) * (ITEM_SIZE + 40)],\n            outputRange: [0, 1, 0]\n          })\n        },\n        source: {\n          uri: item.backgroundImg\n        }\n      }, index);\n    }), _jsx(LinearGradient, {\n      colors: [\"rgba(0, 0, 0, 0.3)\", Color.black],\n      style: styles.gradient\n    }), _jsx(View, {\n      style: styles.Scrolling,\n      children: _jsx(Animated.FlatList, {\n        showsHorizontalScrollIndicator: false,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: scrollX\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        data: data,\n        horizontal: true,\n        snapToInterval: ITEM_SIZE + 40,\n        decelerationRate: \"fast\",\n        snapToAlignment: \"start\",\n        contentContainerStyle: styles.container,\n        keyExtractor: function keyExtractor(_, i) {\n          return i.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return _jsxs(View, {\n            style: [{\n              width: ITEM_SIZE\n            }, styles.BrandView],\n            children: [item.type === \"car\" ? _jsx(Image, {\n              resizeMode: \"contain\",\n              style: styles.img,\n              source: getCatLogo(item.name)\n            }) : _jsx(Image, {\n              resizeMode: \"contain\",\n              style: styles.img,\n              source: {\n                uri: item.logoImg\n              }\n            }), _jsx(Text, {\n              style: styles.Title,\n              children: item.name !== \"morris and garage\" ? item.name.toUpperCase() : \"MG\"\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                navigation.navigate(\"carlist\", {\n                  id: item.companyid\n                });\n              },\n              style: styles.button,\n              children: _jsx(Text, {\n                style: styles.ButtonText,\n                children: \"Take A Tour\"\n              })\n            })]\n          });\n        }\n      })\n    })]\n  });\n};\n\nexport default CategoryScreen;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Screen/Home/CategoryListScreen.js"],"names":["LinearGradient","React","useEffect","useState","SafeAreaView","Color","styles","category","useSelector","Dimensions","get","width","height","CategoryScreen","navigation","route","url1","url2","index","uri","mainImage","setMainImage","params","list","data","scrollX","useRef","Animated","Value","current","ITEM_SIZE","SPACER_SIZE","getCatLogo","require","Screen","map","item","zIndex","left","right","position","opacity","interpolate","inputRange","outputRange","backgroundImg","black","gradient","Scrolling","event","nativeEvent","contentOffset","x","useNativeDriver","container","_","i","toString","BrandView","type","img","name","logoImg","Title","toUpperCase","navigate","id","companyid","button","ButtonText"],"mappings":"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","sourcesContent":["import { LinearGradient } from \"expo-linear-gradient\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Dimensions,\n  Image,\n  Animated,\n  Pressable,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Color from \"../../../assets/Color\";\nimport styles from \"./HomeStyles/CategoryListScreenStyles\";\nimport { category } from \"../../../model/Data/dummyData\";\nimport { useSelector } from \"react-redux\";\n\nconst { width, height } = Dimensions.get(\"screen\");\n\nconst CategoryScreen = ({ navigation, route }) => {\n  const url1 =\n    \"https://cdni.autocarindia.com/Utils/ImageResizer.ashx?n=https%3A%2F%2Fcdni.autocarindia.com%2FExtraImages%2F20200904110617_EQC-front-track.jpg&h=795&w=1200&c=1\";\n  const url2 =\n    \"https://ev-database.org/img/auto/Mercedes_EQC/Mercedes_EQC-01.jpg\";\n\n  const [mainImage, setMainImage] = useState([\n    { index: \"1\", uri: url1 },\n    { index: \"2\", uri: url2 },\n    { index: \"3\", uri: url1 },\n    { index: \"4\", uri: url2 },\n    { index: \"5\", uri: url1 },\n    { index: \"6\", uri: url2 },\n    { index: \"7\", uri: url1 },\n    { index: \"7\", uri: url2 },\n  ]);\n  const category = route.params?.list;\n  const data = category;\n\n  const scrollX = React.useRef(new Animated.Value(0)).current;\n  const ITEM_SIZE = width * 0.72;\n  const SPACER_SIZE = (width - ITEM_SIZE) / 2;\n  const getCatLogo = (data) => {\n    switch (data) {\n      case \"tata\":\n        return require(\"../../../assets/Images/Tata.png\");\n\n      case \"hyundai\":\n        return require(\"../../../assets/Images/Hyundai.png\");\n\n      case \"morris and garage\":\n        return require(\"../../../assets/Images/MG.png\");\n\n      case \"audi\":\n        return require(\"../../../assets/Images/Audi.png\");\n\n      case \"mercedes\":\n        return require(\"../../../assets/Images/Mercedes.png\");\n\n      default:\n        null;\n    }\n  };\n  // const getCatName = (data) => {\n  //   switch (data) {\n  //     case \"tata\":\n  //       return \"Tata\";\n\n  //     case \"hyundai\":\n  //       return \"Hyundai\";\n\n  //     case \"morris and garage\":\n  //       return \"Morris & Garage\";\n\n  //     case \"audi\":\n  //       return \"Audi\";\n\n  //     case \"mercedes\":\n  //       return \"Mercedes\";\n\n  //     default:\n  //       null;\n  //   }\n  // };\n  return (\n    <SafeAreaView style={styles.Screen}>\n      {data.map((item, index) => {\n        //console.log(\"ITEM+++++>\",item.backgroundImg);\n        return (\n          <Animated.Image\n            key={index}\n            blurRadius={2}\n            style={{\n              width: \"100%\",\n              height: 400,\n              zIndex: 0,\n              left: 0,\n              right: 0,\n              position: \"absolute\",\n              opacity: scrollX.interpolate({\n                inputRange: [\n                  (index - 1) * (ITEM_SIZE + 40),\n                  index * (ITEM_SIZE + 40),\n                  (index + 1) * (ITEM_SIZE + 40),\n                ],\n                outputRange: [0, 1, 0],\n              }),\n            }}\n            source={{ uri: item.backgroundImg }}\n          />\n        );\n      })}\n      <LinearGradient\n        colors={[\"rgba(0, 0, 0, 0.3)\", Color.black]}\n        style={styles.gradient}\n      />\n      <View style={styles.Scrolling}>\n        <Animated.FlatList\n          showsHorizontalScrollIndicator={false}\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { x: scrollX } } }],\n            { useNativeDriver: true }\n          )}\n          data={data}\n          horizontal\n          snapToInterval={ITEM_SIZE + 40}\n          decelerationRate=\"fast\"\n          snapToAlignment=\"start\"\n          contentContainerStyle={styles.container}\n          keyExtractor={(_, i) => i.toString()}\n          renderItem={({ item, index }) => {\n            return (\n              <View\n                style={[\n                  {\n                    width: ITEM_SIZE,\n                  },\n                  styles.BrandView,\n                ]}\n              >\n                {item.type === \"car\" ? (\n                  <Image\n                    resizeMode=\"contain\"\n                    style={styles.img}\n                    source={getCatLogo(item.name)}\n                  />\n                ) : (\n                  <Image\n                    resizeMode=\"contain\"\n                    style={styles.img}\n                    source={{ uri: item.logoImg }}\n                  />\n                )}\n                <Text style={styles.Title}>\n                  {item.name !== \"morris and garage\"\n                    ? item.name.toUpperCase()\n                    : \"MG\"}\n                </Text>\n                <Pressable\n                  onPress={() => {\n                    //console.log(item);\n                    navigation.navigate(\"carlist\", { id: item.companyid });\n                  }}\n                  style={styles.button}\n                >\n                  <Text style={styles.ButtonText}>Take A Tour</Text>\n                </Pressable>\n              </View>\n            );\n          }}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default CategoryScreen;\n"]},"metadata":{},"sourceType":"module"}