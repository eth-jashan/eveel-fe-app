{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Color from \"../../../../assets/Color\";\nimport OTPInputView from \"@twotalltotems/react-native-otp-input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar OTP = function OTP(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  useEffect(function () {\n    console.log(code);\n  }, [code]);\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: {\n        margin: 15,\n        paddingTop: 30\n      },\n      children: _jsx(Text, {\n        style: {\n          color: Color.white,\n          fontFamily: \"bold\",\n          fontSize: 28\n        },\n        children: \"We have you an OTP through SMS\"\n      })\n    }), _jsx(View, {\n      style: {\n        backgroundColor: Color.darkgrey,\n        margin: 15,\n        marginHorizontal: 30,\n        borderRadius: 10,\n        alignContent: \"center\"\n      },\n      children: _jsx(TextInput, {\n        placeholder: \"OTP\",\n        placeholderTextColor: \"grey\",\n        keyboardType: \"numeric\",\n        value: code,\n        onChangeText: setCode,\n        style: {\n          fontSize: 24,\n          color: Color.white,\n          padding: 15,\n          textAlign: \"center\"\n        }\n      })\n    }), _jsxs(View, {\n      style: {\n        marginHorizontal: 15,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 18,\n          fontFamily: \"light\"\n        },\n        children: \"Haven't recieved the code\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.resend();\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: 18,\n            fontFamily: \"bold\"\n          },\n          children: \"Resend code?\"\n        })\n      })]\n    }), _jsx(View, {\n      style: {\n        alignSelf: \"center\",\n        paddingTop: 100\n      },\n      children: _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: Color.darkgreen,\n          padding: 15,\n          borderRadius: 20\n        },\n        onPress: function onPress() {\n          props.sendCode(code);\n        },\n        children: _jsx(Text, {\n          style: {\n            color: Color.white,\n            fontFamily: \"bold\",\n            fontSize: 20,\n            paddingHorizontal: 10\n          },\n          children: \"Submit\"\n        })\n      })\n    })]\n  });\n};\n\nexport default OTP;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Component/Utils/NumberVerificationScreenUtil/OTP.js"],"names":["React","useEffect","useState","TextInput","Color","OTPInputView","OTP","props","code","setCode","console","log","margin","paddingTop","color","white","fontFamily","fontSize","backgroundColor","darkgrey","marginHorizontal","borderRadius","alignContent","padding","textAlign","flexDirection","justifyContent","resend","alignSelf","darkgreen","sendCode","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Dimensions, TouchableOpacity } from \"react-native\";\nimport { StyleSheet, View, Text, SafeAreaView } from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Color from \"../../../../assets/Color\";\nimport OTPInputView from \"@twotalltotems/react-native-otp-input\";\nconst OTP = (props) => {\n  const [code, setCode] = useState(null);\n  useEffect(() => {\n    console.log(code);\n  }, [code]);\n  return (\n    <View>\n      <View style={{ margin: 15, paddingTop: 30 }}>\n        <Text style={{ color: Color.white, fontFamily: \"bold\", fontSize: 28 }}>\n          We have you an OTP through SMS\n        </Text>\n      </View>\n      <View\n        style={{\n          backgroundColor: Color.darkgrey,\n          margin: 15,\n          marginHorizontal: 30,\n          borderRadius: 10,\n          alignContent: \"center\",\n        }}\n      >\n        <TextInput\n          placeholder=\"OTP\"\n          placeholderTextColor=\"grey\"\n          keyboardType=\"numeric\"\n          value={code}\n          onChangeText={setCode}\n          style={{\n            fontSize: 24,\n            color: Color.white,\n            padding: 15,\n            textAlign: \"center\",\n          }}\n        />\n        {/* <OTPInputView\n          style={{ width: \"90%\", height: 100, alignSelf: \"center\" }}\n          pinCount={6}\n          // code={this.state.code} //You can supply this prop or not. The component will be used as a controlled / uncontrolled component respectively.\n          onCodeChanged={(code) => {\n            setCode(code);\n          }}\n          autoFocusOnLoad\n          codeInputFieldStyle={{\n            borderWidth: 0,\n            borderBottomWidth: 1,\n            color: \"white\",\n            fontSize: 24,\n          }}\n          codeInputHighlightStyle={{ borderColor: \"#03DAC6\" }}\n          // onCodeFilled={(code) => {\n          //   console.log(`Code is ${code}, you are good to go!`);\n          // }}\n        /> */}\n      </View>\n      <View\n        style={{\n          marginHorizontal: 15,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Text style={{ color: \"white\", fontSize: 18, fontFamily: \"light\" }}>\n          Haven't recieved the code\n        </Text>\n        <TouchableOpacity\n          onPress={() => {\n            props.resend();\n          }}\n        >\n          <Text style={{ color: \"white\", fontSize: 18, fontFamily: \"bold\" }}>\n            Resend code?\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View\n        style={{\n          alignSelf: \"center\",\n          paddingTop: 100,\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            backgroundColor: Color.darkgreen,\n            padding: 15,\n            borderRadius: 20,\n          }}\n          onPress={() => {\n            props.sendCode(code);\n          }}\n        >\n          <Text\n            style={{\n              color: Color.white,\n              fontFamily: \"bold\",\n              fontSize: 20,\n              paddingHorizontal: 10,\n            }}\n          >\n            Submit\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default OTP;\n"]},"metadata":{},"sourceType":"module"}