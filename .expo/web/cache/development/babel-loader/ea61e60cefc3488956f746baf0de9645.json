{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api_utils from \"../../../assets/api\";\nimport LikedCarModel from \"../../../model/likedCarModel\";\nexport var ADD_LIKED_CAR = \"ADD_LIKED_CAR\";\nexport var addLikedCar = function addLikedCar(carId) {\n  return function _callee(dispatch, getState) {\n    var uid, response, resData, likedCar;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uid = getState().auth.uid;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/likedCar.json?\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                carId: carId\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resData = _context.sent;\n            likedCar = new LikedCarModel(resData.name, carId);\n            dispatch({\n              type: ADD_LIKED_CAR,\n              car: likedCar\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var FETCH_LIKED_CAR = \"FETCH_LIKED_CAR\";\nexport var fetchLikedCar = function fetchLikedCar() {\n  return function _callee2(dispatch, getState) {\n    var uid, response, resData, likeCarList, key;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uid = getState().auth.uid;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/likedCar.json?\"));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resData = _context2.sent;\n            likeCarList = [];\n\n            for (key in resData) {\n              likeCarList.push(new LikedCarModel(key, resData[key].carId));\n            }\n\n            dispatch({\n              type: FETCH_LIKED_CAR,\n              list: likeCarList\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var DISLIKED_CAR = \"DISLIKED_CAR\";\nexport var dislikedCar = function dislikedCar(carId) {\n  return function _callee3(dispatch, getState) {\n    var uid, likedCarList, arrayCar, car, response;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            uid = getState().auth.uid;\n            likedCarList = getState().likedCars.likedCarList;\n            arrayCar = likedCarList.filter(function (item) {\n              return item.carId == carId;\n            });\n            car = arrayCar[0];\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/likedCar/\" + car.key + \".json?\", {\n              method: \"DELETE\"\n            }));\n\n          case 6:\n            response = _context3.sent;\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Store/action/likedCars.js"],"names":["api_utils","LikedCarModel","ADD_LIKED_CAR","addLikedCar","carId","dispatch","getState","uid","auth","fetch","baseURL_Demo","method","headers","body","JSON","stringify","response","json","resData","likedCar","name","type","car","FETCH_LIKED_CAR","fetchLikedCar","likeCarList","key","push","list","DISLIKED_CAR","dislikedCar","likedCarList","likedCars","arrayCar","filter","item"],"mappings":"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","sourcesContent":["import api_utils from \"../../../assets/api\";\nimport LikedCarModel from \"../../../model/likedCarModel\";\n\nexport const ADD_LIKED_CAR = \"ADD_LIKED_CAR\";\n\nexport const addLikedCar = (carId) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/likedCar.json?`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          carId: carId,\n        }),\n      }\n    );\n    const resData = await response.json();\n    const likedCar = new LikedCarModel(resData.name, carId);\n    dispatch({ type: ADD_LIKED_CAR, car: likedCar });\n  };\n};\n\nexport const FETCH_LIKED_CAR = \"FETCH_LIKED_CAR\";\n\nexport const fetchLikedCar = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/likedCar.json?`\n    );\n    const resData = await response.json();\n    const likeCarList = [];\n    for (const key in resData) {\n      likeCarList.push(new LikedCarModel(key, resData[key].carId));\n    }\n    dispatch({ type: FETCH_LIKED_CAR, list: likeCarList });\n  };\n};\n\nexport const DISLIKED_CAR = \"DISLIKED_CAR\";\n\nexport const dislikedCar = (carId) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const likedCarList = getState().likedCars.likedCarList;\n    const arrayCar = likedCarList.filter((item) => item.carId == carId);\n    const car = arrayCar[0];\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/likedCar/${car.key}.json?`,\n      {\n        method: \"DELETE\",\n      }\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}