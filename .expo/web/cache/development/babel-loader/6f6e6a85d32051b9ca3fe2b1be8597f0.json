{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Contacts from \"expo-contacts\";\nimport api_utils from \"../../../assets/api\";\nexport var getContacts = function getContacts(uid) {\n  return function _callee(dispatch, getState) {\n    var _await$Contacts$reque, status, _await$Contacts$getCo, contacts, contactList, contact, name, phoneNumbers, birthday, emails, response;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Contacts.requestPermissionsAsync());\n\n          case 2:\n            _await$Contacts$reque = _context.sent;\n            status = _await$Contacts$reque.status;\n\n            if (!(status === \"granted\")) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(Contacts.getContactsAsync());\n\n          case 7:\n            _await$Contacts$getCo = _context.sent;\n            contacts = _await$Contacts$getCo.data;\n            contactList = [];\n\n            for (contact in contacts) {\n              name = contacts[contact].name ? contacts[contact].name : \"\";\n              phoneNumbers = contacts[contact].phoneNumbers ? contacts[contact].phoneNumbers : \"\";\n              birthday = contacts[contact].birthday ? contacts[contact].birthday : \"\";\n              emails = contacts[contact].emails ? contacts[contact].emails : \"\";\n              contactList.push({\n                name: name,\n                phoneNumbers: phoneNumbers,\n                birthday: birthday,\n                emails: emails\n              });\n            }\n\n            console.log(contactList);\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/contact.json?\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(contactList)\n            }));\n\n          case 14:\n            response = _context.sent;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Store/action/contact.js"],"names":["Contacts","api_utils","getContacts","uid","dispatch","getState","requestPermissionsAsync","status","getContactsAsync","contacts","data","contactList","contact","name","phoneNumbers","birthday","emails","push","console","log","fetch","baseURL_Demo","method","headers","body","JSON","stringify","response"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,eAA1B;AACA,OAAOC,SAAP;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AAClC,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBL,QAAQ,CAACM,uBAAT,EAFpB;;AAAA;AAAA;AAEGC,YAAAA,MAFH,yBAEGA,MAFH;;AAAA,kBAIDA,MAAM,KAAK,SAJV;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAK8BP,QAAQ,CAACQ,gBAAT,EAL9B;;AAAA;AAAA;AAKWC,YAAAA,QALX,yBAKKC,IALL;AAMGC,YAAAA,WANH,GAMiB,EANjB;;AAOH,iBAAWC,OAAX,IAAsBH,QAAtB,EAAgC;AACxBI,cAAAA,IADwB,GACjBJ,QAAQ,CAACG,OAAD,CAAR,CAAkBC,IAAlB,GAAyBJ,QAAQ,CAACG,OAAD,CAAR,CAAkBC,IAA3C,GAAkD,EADjC;AAExBC,cAAAA,YAFwB,GAETL,QAAQ,CAACG,OAAD,CAAR,CAAkBE,YAAlB,GACjBL,QAAQ,CAACG,OAAD,CAAR,CAAkBE,YADD,GAEjB,EAJ0B;AAKxBC,cAAAA,QALwB,GAKbN,QAAQ,CAACG,OAAD,CAAR,CAAkBG,QAAlB,GACbN,QAAQ,CAACG,OAAD,CAAR,CAAkBG,QADL,GAEb,EAP0B;AAQxBC,cAAAA,MARwB,GAQfP,QAAQ,CAACG,OAAD,CAAR,CAAkBI,MAAlB,GAA2BP,QAAQ,CAACG,OAAD,CAAR,CAAkBI,MAA7C,GAAsD,EARvC;AAS9BL,cAAAA,WAAW,CAACM,IAAZ,CAAiB;AAAEJ,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,YAAY,EAAZA,YAAR;AAAsBC,gBAAAA,QAAQ,EAARA,QAAtB;AAAgCC,gBAAAA,MAAM,EAANA;AAAhC,eAAjB;AACD;;AACDE,YAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AAlBG;AAAA,6CAmBoBS,KAAK,CACvBnB,SAAS,CAACoB,YADa,eACSlB,GADT,qBAE1B;AACEmB,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFX;AAKEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,WAAf;AALR,aAF0B,CAnBzB;;AAAA;AAmBGgB,YAAAA,QAnBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAgCD,CAjCM","sourcesContent":["import * as Contacts from \"expo-contacts\";\nimport api_utils from \"../../../assets/api\";\nexport const getContacts = (uid) => {\n  return async (dispatch, getState) => {\n    //console.log(uid);\n    const { status } = await Contacts.requestPermissionsAsync();\n\n    if (status === \"granted\") {\n      const { data: contacts } = await Contacts.getContactsAsync();\n      const contactList = [];\n      for (const contact in contacts) {\n        const name = contacts[contact].name ? contacts[contact].name : \"\";\n        const phoneNumbers = contacts[contact].phoneNumbers\n          ? contacts[contact].phoneNumbers\n          : \"\";\n        const birthday = contacts[contact].birthday\n          ? contacts[contact].birthday\n          : \"\";\n        const emails = contacts[contact].emails ? contacts[contact].emails : \"\";\n        contactList.push({ name, phoneNumbers, birthday, emails });\n      }\n      console.log(contactList);\n      const response = await fetch(\n        `${api_utils.baseURL_Demo}/users/${uid}/contact.json?`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(contactList),\n        }\n      );\n      //console.log(\"Retrieved contacts!\", contacts[0].name);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}