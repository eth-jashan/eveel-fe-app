{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport color from \"../../../../assets/Color\";\nimport styles from \"./UtilStyles/categorySelectionUtilStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CategorySelection = function CategorySelection(props) {\n  var typeOfSelection = [\"All\", \"Cars\", \"Scooty\", \"Cycle\"];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  return _jsx(View, {\n    style: styles.screen,\n    children: _jsx(FlatList, {\n      data: typeOfSelection,\n      keyExtractor: function keyExtractor(x) {\n        return x;\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            props.selected(item);\n            setSelected(index);\n          },\n          style: [{\n            marginLeft: index === 0 ? 16 : 0,\n            backgroundColor: index === selected ? color.lightgreen : null\n          }, styles.button],\n          children: _jsx(Text, {\n            style: [{\n              color: index === selected ? color.darkgreen : color.lightgreen\n            }, styles.buttonText],\n            children: item\n          })\n        });\n      }\n    })\n  });\n};\n\nexport default CategorySelection;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Component/Utils/HomeScreenUtils/categorySelectionUtil.js"],"names":["React","useState","FlatList","color","styles","CategorySelection","props","typeOfSelection","selected","setSelected","screen","x","item","index","marginLeft","backgroundColor","lightgreen","button","darkgreen","buttonText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,MAAMC,eAAe,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,CAAxB;;AACA,kBAAgCN,QAAQ,CAAC,CAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,MAApB;AAAA,cACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEH,eADR;AAEE,MAAA,YAAY,EAAE,sBAACI,CAAD;AAAA,eAAOA,CAAP;AAAA,OAFhB;AAGE,MAAA,UAAU,MAHZ;AAIE,MAAA,8BAA8B,EAAE,KAJlC;AAKE,MAAA,UAAU,EAAE,0BAAqB;AAAA,YAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,YAAZC,KAAY,QAAZA,KAAY;AAC/B,eACE,KAAC,SAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACbP,YAAAA,KAAK,CAACE,QAAN,CAAeI,IAAf;AACAH,YAAAA,WAAW,CAACI,KAAD,CAAX;AACD,WAJH;AAKE,UAAA,KAAK,EAAE,CACL;AACEC,YAAAA,UAAU,EAAED,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,CADjC;AAEEE,YAAAA,eAAe,EAAEF,KAAK,KAAKL,QAAV,GAAqBL,KAAK,CAACa,UAA3B,GAAwC;AAF3D,WADK,EAKLZ,MAAM,CAACa,MALF,CALT;AAAA,oBAaE,KAAC,IAAD;AACE,YAAA,KAAK,EAAE,CACL;AACEd,cAAAA,KAAK,EACHU,KAAK,KAAKL,QAAV,GAAqBL,KAAK,CAACe,SAA3B,GAAuCf,KAAK,CAACa;AAFjD,aADK,EAKLZ,MAAM,CAACe,UALF,CADT;AAAA,sBASGP;AATH;AAbF,UADF;AA2BD;AAjCH;AADF,IADF;AAuCD,CA3CD;;AA6CA,eAAeP,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Pressable, View, Text } from \"react-native\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport color from \"../../../../assets/Color\";\nimport styles from \"./UtilStyles/categorySelectionUtilStyles\";\nconst CategorySelection = (props) => {\n  const typeOfSelection = [\"All\", \"Cars\", \"Scooty\", \"Cycle\"];\n  const [selected, setSelected] = useState(0);\n\n  return (\n    <View style={styles.screen}>\n      <FlatList\n        data={typeOfSelection}\n        keyExtractor={(x) => x}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        renderItem={({ item, index }) => {\n          return (\n            <Pressable\n              onPress={() => {\n                props.selected(item);\n                setSelected(index);\n              }}\n              style={[\n                {\n                  marginLeft: index === 0 ? 16 : 0,\n                  backgroundColor: index === selected ? color.lightgreen : null,\n                },\n                styles.button,\n              ]}\n            >\n              <Text\n                style={[\n                  {\n                    color:\n                      index === selected ? color.darkgreen : color.lightgreen,\n                  },\n                  styles.buttonText,\n                ]}\n              >\n                {item}\n              </Text>\n            </Pressable>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CategorySelection;\n"]},"metadata":{},"sourceType":"module"}