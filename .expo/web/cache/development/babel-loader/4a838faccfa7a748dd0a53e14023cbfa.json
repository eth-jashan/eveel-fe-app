{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport * as Google from \"expo-google-app-auth\";\nexport var SecongGoogleSign = function SecongGoogleSign(googleUser) {\n  var credential = firebase.auth.GoogleAuthProvider.credential(googleUser.idToken, googleUser.accessToken);\n  return firebase.auth().signInWithCredential(credential);\n};\nexport var googleLogin = function googleLogin() {\n  var result, user;\n  return _regeneratorRuntime.async(function googleLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Google.logInAsync({\n            androidClientId: \"402100750779-7nvno1plv3q97t94rlqlmppq7p4iem0p.apps.googleusercontent.com\",\n            behavior: \"web\",\n            iosClientId: \"402100750779-e9vd0ca9j7b7pavj3slsor3lg54u3idp.apps.googleusercontent.com\",\n            scopes: [\"profile\", \"email\"]\n          }));\n\n        case 3:\n          result = _context.sent;\n\n          if (!(result.type === \"success\")) {\n            _context.next = 9;\n            break;\n          }\n\n          user = SecongGoogleSign(result);\n          return _context.abrupt(\"return\", user);\n\n        case 9:\n          return _context.abrupt(\"return\", {\n            cancelled: true\n          });\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", {\n            error: true\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Component/Common/GoogleLogin.js"],"names":["firebase","Google","SecongGoogleSign","googleUser","credential","auth","GoogleAuthProvider","idToken","accessToken","signInWithCredential","googleLogin","logInAsync","androidClientId","behavior","iosClientId","scopes","result","type","user","cancelled","console","log","error"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAgB;AAC9C,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,kBAAd,CAAiCF,UAAjC,CACjBD,UAAU,CAACI,OADM,EAEjBJ,UAAU,CAACK,WAFM,CAAnB;AAIA,SAAOR,QAAQ,CAACK,IAAT,GAAgBI,oBAAhB,CAAqCL,UAArC,CAAP;AACD,CANM;AAQP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFT,MAAM,CAACU,UAAP,CAAkB;AACrCC,YAAAA,eAAe,EACb,0EAFmC;AAGrCC,YAAAA,QAAQ,EAAE,KAH2B;AAIrCC,YAAAA,WAAW,EACT,0EALmC;AAMrCC,YAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAN6B,WAAlB,CAFE;;AAAA;AAEjBC,UAAAA,MAFiB;;AAAA,gBAUnBA,MAAM,CAACC,IAAP,KAAgB,SAVG;AAAA;AAAA;AAAA;;AAWfC,UAAAA,IAXe,GAWRhB,gBAAgB,CAACc,MAAD,CAXR;AAAA,2CAYdE,IAZc;;AAAA;AAAA,2CAcd;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAdc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBvBC,UAAAA,OAAO,CAACC,GAAR;AAjBuB,2CAkBhB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAlBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import firebase from \"firebase\";\nimport * as Google from \"expo-google-app-auth\";\n\nexport const SecongGoogleSign = (googleUser) => {\n  const credential = firebase.auth.GoogleAuthProvider.credential(\n    googleUser.idToken,\n    googleUser.accessToken\n  );\n  return firebase.auth().signInWithCredential(credential);\n};\n\nexport const googleLogin = async () => {\n  try {\n    const result = await Google.logInAsync({\n      androidClientId:\n        \"402100750779-7nvno1plv3q97t94rlqlmppq7p4iem0p.apps.googleusercontent.com\",\n      behavior: \"web\",\n      iosClientId:\n        \"402100750779-e9vd0ca9j7b7pavj3slsor3lg54u3idp.apps.googleusercontent.com\",\n      scopes: [\"profile\", \"email\"],\n    });\n    if (result.type === \"success\") {\n      const user = SecongGoogleSign(result);\n      return user;\n    } else {\n      return { cancelled: true };\n    }\n  } catch (e) {\n    console.log(e);\n    return { error: true };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}