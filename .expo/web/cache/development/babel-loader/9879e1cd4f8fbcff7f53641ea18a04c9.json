{"ast":null,"code":"import React, { useRef, useState } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\nimport Color from \"../../../../assets/Color\";\nimport styles from \"./UtilStyles/ParallaxGalleryUtilStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ParallaxGallery = function ParallaxGallery(_ref) {\n  var imageList = _ref.imageList;\n  var scrollX = useRef(new Animated.Value(0)).current;\n  return _jsx(Animated.FlatList, {\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: scrollX\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    data: imageList,\n    keyExtractor: function keyExtractor(_, i) {\n      return i.toString();\n    },\n    snapToAlignment: \"center\",\n    snapToInterval: width * 0.8 + 40,\n    decelerationRate: \"fast\",\n    contentContainerStyle: {\n      alignSelf: \"center\",\n      justifyContent: \"center\"\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _jsxs(View, {\n        style: styles.component,\n        children: [_jsx(Animated.Image, {\n          style: styles.Img,\n          source: {\n            uri: item.image\n          },\n          resizeMode: \"cover\"\n        }), _jsxs(_Fragment, {\n          children: [_jsxs(Text, {\n            style: styles.Index,\n            children: [index + 1, \".\"]\n          }), _jsx(Text, {\n            style: styles.Title,\n            children: item.feature\n          })]\n        })]\n      });\n    }\n  });\n};\n\nexport default ParallaxGallery;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Component/Utils/CarProfileScreenUtils/ParallaxGalleryUtil.js"],"names":["React","useRef","useState","FlatList","TextInput","Color","styles","Dimensions","get","width","height","ParallaxGallery","imageList","scrollX","Animated","Value","current","event","nativeEvent","contentOffset","x","useNativeDriver","_","i","toString","alignSelf","justifyContent","item","index","component","Img","uri","image","Index","Title","feature"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;;;;;;AAUA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,8BAApC;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;;;;;AACA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACzC,MAAMC,OAAO,GAAGZ,MAAM,CAAC,IAAIa,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;AAGA,SACE,KAAC,QAAD,CAAU,QAAV;AACE,IAAA,QAAQ,EAAEF,QAAQ,CAACG,KAAT,CACR,CAAC;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAEC,UAAAA,CAAC,EAAEP;AAAL;AAAjB;AAAf,KAAD,CADQ,EAER;AAAEQ,MAAAA,eAAe,EAAE;AAAnB,KAFQ,CADZ;AAKE,IAAA,IAAI,EAAET,SALR;AAME,IAAA,YAAY,EAAE,sBAACU,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,CAACC,QAAF,EAAV;AAAA,KANhB;AAOE,IAAA,eAAe,EAAE,QAPnB;AAQE,IAAA,cAAc,EAAEf,KAAK,GAAG,GAAR,GAAc,EARhC;AASE,IAAA,gBAAgB,EAAC,MATnB;AAUE,IAAA,qBAAqB,EAAE;AAAEgB,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,cAAc,EAAE;AAAvC,KAVzB;AAWE,IAAA,UAAU,MAXZ;AAYE,IAAA,8BAA8B,EAAE,KAZlC;AAaE,IAAA,UAAU,EAAE,2BAAqB;AAAA,UAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,UAAZC,KAAY,SAAZA,KAAY;AAC/B,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACuB,SAApB;AAAA,mBACE,KAAC,QAAD,CAAU,KAAV;AACE,UAAA,KAAK,EAAEvB,MAAM,CAACwB,GADhB;AAEE,UAAA,MAAM,EAAE;AAAEC,YAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAZ,WAFV;AAGE,UAAA,UAAU,EAAC;AAHb,UADF,EAME;AAAA,qBACE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE1B,MAAM,CAAC2B,KAApB;AAAA,uBAA4BL,KAAK,GAAG,CAApC;AAAA,YADF,EAEE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEtB,MAAM,CAAC4B,KAApB;AAAA,sBAA4BP,IAAI,CAACQ;AAAjC,YAFF;AAAA,UANF;AAAA,QADF;AAaD;AA3BH,IADF;AA+BD,CAnCD;;AAqCA,eAAexB,eAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  Animated,\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  Button,\n  Image,\n} from \"react-native\";\nimport { FlatList, TextInput } from \"react-native-gesture-handler\";\nimport Color from \"../../../../assets/Color\";\nimport styles from \"./UtilStyles/ParallaxGalleryUtilStyles\";\nconst { width, height } = Dimensions.get(\"window\");\nconst ParallaxGallery = ({ imageList }) => {\n  const scrollX = useRef(new Animated.Value(0)).current;\n  //console.log(\"Image :\", imageList);\n\n  return (\n    <Animated.FlatList\n      onScroll={Animated.event(\n        [{ nativeEvent: { contentOffset: { x: scrollX } } }],\n        { useNativeDriver: true }\n      )}\n      data={imageList}\n      keyExtractor={(_, i) => i.toString()}\n      snapToAlignment={\"center\"}\n      snapToInterval={width * 0.8 + 40}\n      decelerationRate=\"fast\"\n      contentContainerStyle={{ alignSelf: \"center\", justifyContent: \"center\" }}\n      horizontal\n      showsHorizontalScrollIndicator={false}\n      renderItem={({ item, index }) => {\n        return (\n          <View style={styles.component}>\n            <Animated.Image\n              style={styles.Img}\n              source={{ uri: item.image }}\n              resizeMode=\"cover\"\n            />\n            <>\n              <Text style={styles.Index}>{index + 1}.</Text>\n              <Text style={styles.Title}>{item.feature}</Text>\n            </>\n          </View>\n        );\n      }}\n    />\n  );\n};\n\nexport default ParallaxGallery;\n"]},"metadata":{},"sourceType":"module"}