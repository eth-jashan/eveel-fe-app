{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var isStyleRow = function isStyleRow(style) {\n  var flatStyle = StyleSheet.flatten(style || {});\n  return flatStyle.flexDirection !== 'column';\n};\n\nvar getDashStyleId = function getDashStyleId(_ref, isRow) {\n  var dashGap = _ref.dashGap,\n      dashLength = _ref.dashLength,\n      dashThickness = _ref.dashThickness,\n      dashColor = _ref.dashColor;\n  return dashGap + \"-\" + dashLength + \"-\" + dashThickness + \"-\" + dashColor + \"-\" + (isRow ? 'row' : 'column');\n};\n\nvar createDashStyleSheet = function createDashStyleSheet(_ref2, isRow) {\n  var dashGap = _ref2.dashGap,\n      dashLength = _ref2.dashLength,\n      dashThickness = _ref2.dashThickness,\n      dashColor = _ref2.dashColor;\n  var idStyle = StyleSheet.create({\n    style: {\n      width: isRow ? dashLength : dashThickness,\n      height: isRow ? dashThickness : dashLength,\n      marginRight: isRow ? dashGap : 0,\n      marginBottom: isRow ? 0 : dashGap,\n      backgroundColor: dashColor\n    }\n  });\n  return idStyle.style;\n};\n\nvar stylesStore = {};\nexport var getDashStyle = function getDashStyle(props) {\n  var isRow = isStyleRow(props.style);\n  var id = getDashStyleId(props, isRow);\n\n  if (!stylesStore[id]) {\n    stylesStore = _objectSpread(_objectSpread({}, stylesStore), {}, _defineProperty({}, id, createDashStyleSheet(props, isRow)));\n  }\n\n  return stylesStore[id];\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/node_modules/react-native-dash/util.js"],"names":["isStyleRow","style","flatStyle","StyleSheet","flatten","flexDirection","getDashStyleId","isRow","dashGap","dashLength","dashThickness","dashColor","createDashStyleSheet","idStyle","create","width","height","marginRight","marginBottom","backgroundColor","stylesStore","getDashStyle","props","id"],"mappings":";;;;;;;AAEA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACjC,MAAMC,SAAS,GAAGC,UAAU,CAACC,OAAX,CAAmBH,KAAK,IAAI,EAA5B,CAAlB;AACA,SAAOC,SAAS,CAACG,aAAV,KAA4B,QAAnC;AACD,CAHM;;AAKP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAErBC,KAFqB;AAAA,MACnBC,OADmB,QACnBA,OADmB;AAAA,MACVC,UADU,QACVA,UADU;AAAA,MACEC,aADF,QACEA,aADF;AAAA,MACiBC,SADjB,QACiBA,SADjB;AAAA,SAIlBH,OAJkB,SAIPC,UAJO,SAIOC,aAJP,SAIwBC,SAJxB,UAKnBJ,KAAK,GAAG,KAAH,GAAW,QALG;AAAA,CAAvB;;AAQA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,QAE3BL,KAF2B,EAGxB;AAAA,MAFDC,OAEC,SAFDA,OAEC;AAAA,MAFQC,UAER,SAFQA,UAER;AAAA,MAFoBC,aAEpB,SAFoBA,aAEpB;AAAA,MAFmCC,SAEnC,SAFmCA,SAEnC;AACH,MAAME,OAAO,GAAGV,UAAU,CAACW,MAAX,CAAkB;AAChCb,IAAAA,KAAK,EAAE;AACLc,MAAAA,KAAK,EAAER,KAAK,GAAGE,UAAH,GAAgBC,aADvB;AAELM,MAAAA,MAAM,EAAET,KAAK,GAAGG,aAAH,GAAmBD,UAF3B;AAGLQ,MAAAA,WAAW,EAAEV,KAAK,GAAGC,OAAH,GAAa,CAH1B;AAILU,MAAAA,YAAY,EAAEX,KAAK,GAAG,CAAH,GAAOC,OAJrB;AAKLW,MAAAA,eAAe,EAAER;AALZ;AADyB,GAAlB,CAAhB;AASA,SAAOE,OAAO,CAACZ,KAAf;AACD,CAdD;;AAgBA,IAAImB,WAAW,GAAG,EAAlB;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAMf,KAAK,GAAGP,UAAU,CAACsB,KAAK,CAACrB,KAAP,CAAxB;AACA,MAAMsB,EAAE,GAAGjB,cAAc,CAACgB,KAAD,EAAQf,KAAR,CAAzB;;AACA,MAAI,CAACa,WAAW,CAACG,EAAD,CAAhB,EAAsB;AACpBH,IAAAA,WAAW,mCACNA,WADM,2BAERG,EAFQ,EAEHX,oBAAoB,CAACU,KAAD,EAAQf,KAAR,CAFjB,EAAX;AAID;;AACD,SAAOa,WAAW,CAACG,EAAD,CAAlB;AACD,CAVM","sourcesContent":["import { StyleSheet } from 'react-native'\n\nexport const isStyleRow = style => {\n  const flatStyle = StyleSheet.flatten(style || {})\n  return flatStyle.flexDirection !== 'column'\n}\n\nconst getDashStyleId = (\n  { dashGap, dashLength, dashThickness, dashColor },\n  isRow,\n) =>\n  `${dashGap}-${dashLength}-${dashThickness}-${dashColor}-${\n    isRow ? 'row' : 'column'\n  }`\n\nconst createDashStyleSheet = (\n  { dashGap, dashLength, dashThickness, dashColor },\n  isRow,\n) => {\n  const idStyle = StyleSheet.create({\n    style: {\n      width: isRow ? dashLength : dashThickness,\n      height: isRow ? dashThickness : dashLength,\n      marginRight: isRow ? dashGap : 0,\n      marginBottom: isRow ? 0 : dashGap,\n      backgroundColor: dashColor,\n    },\n  })\n  return idStyle.style\n}\n\nlet stylesStore = {}\nexport const getDashStyle = props => {\n  const isRow = isStyleRow(props.style)\n  const id = getDashStyleId(props, isRow)\n  if (!stylesStore[id]) {\n    stylesStore = {\n      ...stylesStore,\n      [id]: createDashStyleSheet(props, isRow),\n    }\n  }\n  return stylesStore[id]\n}\n"]},"metadata":{},"sourceType":"module"}