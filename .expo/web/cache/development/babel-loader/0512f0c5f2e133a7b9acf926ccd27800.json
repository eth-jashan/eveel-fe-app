{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api_utils from \"../../../assets/api\";\nexport var ADD_OWNED_CAR = \"ADD_OWNED_CAR\";\nexport var addOwnedCar = function addOwnedCar(type, name, mileage) {\n  return function _callee(dispatch, getState) {\n    var uid, response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uid = getState().auth.uid;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/ownedCar.json?\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                carType: type,\n                carName: name,\n                carMileage: mileage\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resData = _context.sent;\n            dispatch({\n              type: ADD_OWNED_CAR,\n              carType: type,\n              name: name,\n              mileage: mileage\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetchOwnedCar = function fetchOwnedCar() {\n  return function _callee2(dispatch, getState) {\n    var uid, response, resData, key;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uid = getState().auth.uid;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(api_utils.baseURL_Demo + \"/users/\" + uid + \"/ownedCar.json?\"));\n\n          case 3:\n            response = _context2.sent;\n            _context2.prev = 4;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            resData = _context2.sent;\n\n            for (key in resData) {\n              ;\n            }\n\n            console.log(resData[key]);\n            dispatch({\n              type: ADD_OWNED_CAR,\n              carType: resData[key].carType,\n              name: resData[key].carName,\n              mileage: resData[key].carMileage\n            });\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](4);\n            console.log(\"Add Car\");\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[4, 13]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Store/action/ownedCar.js"],"names":["api_utils","ADD_OWNED_CAR","addOwnedCar","type","name","mileage","dispatch","getState","uid","auth","fetch","baseURL_Demo","method","headers","body","JSON","stringify","carType","carName","carMileage","response","json","resData","fetchOwnedCar","key","console","log"],"mappings":";AAAA,OAAOA,SAAP;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAyB;AAClD,SAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,GADD,GACOD,QAAQ,GAAGE,IAAX,CAAgBD,GADvB;AAAA;AAAA,6CAEkBE,KAAK,CACvBV,SAAS,CAACW,YADa,eACSH,GADT,sBAE1B;AACEI,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFX;AAKEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,OAAO,EAAEd,IADU;AAEnBe,gBAAAA,OAAO,EAAEd,IAFU;AAGnBe,gBAAAA,UAAU,EAAEd;AAHO,eAAf;AALR,aAF0B,CAFvB;;AAAA;AAECe,YAAAA,QAFD;AAAA;AAAA,6CAgBiBA,QAAQ,CAACC,IAAT,EAhBjB;;AAAA;AAgBCC,YAAAA,OAhBD;AAiBLhB,YAAAA,QAAQ,CAAC;AACPH,cAAAA,IAAI,EAAEF,aADC;AAEPgB,cAAAA,OAAO,EAAEd,IAFF;AAGPC,cAAAA,IAAI,EAAEA,IAHC;AAIPC,cAAAA,OAAO,EAAEA;AAJF,aAAD,CAAR;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAwBD,CAzBM;AA2BP,OAAO,IAAMkB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,kBAAOjB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,GADD,GACOD,QAAQ,GAAGE,IAAX,CAAgBD,GADvB;AAAA;AAAA,6CAEkBE,KAAK,CACvBV,SAAS,CAACW,YADa,eACSH,GADT,qBAFvB;;AAAA;AAECY,YAAAA,QAFD;AAAA;AAAA;AAAA,6CAMmBA,QAAQ,CAACC,IAAT,EANnB;;AAAA;AAMGC,YAAAA,OANH;;AAQH,iBAAKE,GAAL,IAAYF,OAAZ;AAAoB;AAApB;;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACE,GAAD,CAAnB;AACAlB,YAAAA,QAAQ,CAAC;AACPH,cAAAA,IAAI,EAAEF,aADC;AAEPgB,cAAAA,OAAO,EAAEK,OAAO,CAACE,GAAD,CAAP,CAAaP,OAFf;AAGPb,cAAAA,IAAI,EAAEkB,OAAO,CAACE,GAAD,CAAP,CAAaN,OAHZ;AAIPb,cAAAA,OAAO,EAAEiB,OAAO,CAACE,GAAD,CAAP,CAAaL;AAJf,aAAD,CAAR;AAVG;AAAA;;AAAA;AAAA;AAAA;AAiBHM,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAoBD,CArBM","sourcesContent":["import api_utils from \"../../../assets/api\";\n\nexport const ADD_OWNED_CAR = \"ADD_OWNED_CAR\";\n\nexport const addOwnedCar = (type, name, mileage) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/ownedCar.json?`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          carType: type,\n          carName: name,\n          carMileage: mileage,\n        }),\n      }\n    );\n    const resData = await response.json();\n    dispatch({\n      type: ADD_OWNED_CAR,\n      carType: type,\n      name: name,\n      mileage: mileage,\n    });\n  };\n};\n\nexport const fetchOwnedCar = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}/users/${uid}/ownedCar.json?`\n    );\n    try {\n      const resData = await response.json();\n      var key;\n      for (key in resData);\n      console.log(resData[key]);\n      dispatch({\n        type: ADD_OWNED_CAR,\n        carType: resData[key].carType,\n        name: resData[key].carName,\n        mileage: resData[key].carMileage,\n      });\n    } catch (err) {\n      console.log(\"Add Car\")\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}