{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { ColorPropType } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"../../../assets/Color\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport SelectOptionUtil from \"../../Component/Utils/VehicleSelectUtils/SelectOptionUtil\";\nimport VehicleDetail from \"../../Component/Utils/VehicleSelectUtils/VehicleDetail\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOwnedCar } from \"../../Store/action/ownedCar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar VehicleSelectScreen = function VehicleSelectScreen(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedVehicle = _useState2[0],\n      setSelectedVehicle = _useState2[1];\n\n  var car = useSelector(function (state) {\n    return state.ownedCar;\n  });\n\n  var Submitted = function Submitted(name, mileage) {\n    dispatch(addOwnedCar(selectedVehicle, name, mileage));\n    props.navigation.navigate(\"Home\");\n  };\n\n  var Select = function Select(type) {\n    setSelectedVehicle(type);\n  };\n\n  return selectedVehicle ? _jsx(VehicleDetail, {\n    selected: selectedVehicle,\n    submit: Submitted\n  }) : _jsx(SelectOptionUtil, {\n    select: Select\n  });\n};\n\nexport default VehicleSelectScreen;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Screen/VehicleSelect/VehicleSelectScreen.js"],"names":["React","useEffect","useState","ColorPropType","Color","AnimatedLottieView","SelectOptionUtil","VehicleDetail","useDispatch","useSelector","addOwnedCar","VehicleSelectScreen","props","dispatch","selectedVehicle","setSelectedVehicle","car","state","ownedCar","Submitted","name","mileage","navigation","navigate","Select","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;SACSC,a;;;;AACT,OAAOC,KAAP;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT;;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,kBAA8CN,QAAQ,EAAtD;AAAA;AAAA,MAAOY,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,GAAG,GAAGP,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GAAD,CAAvB;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAEnCR,IAAAA,QAAQ,CAACH,WAAW,CAACI,eAAD,EAAkBM,IAAlB,EAAwBC,OAAxB,CAAZ,CAAR;AACAT,IAAAA,KAAK,CAACU,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B;AACD,GAJD;;AAMA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AACvBV,IAAAA,kBAAkB,CAACU,IAAD,CAAlB;AACD,GAFD;;AAGA,SAAOX,eAAe,GACpB,KAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA,eAAzB;AAA0C,IAAA,MAAM,EAAEK;AAAlD,IADoB,GAGpB,KAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEK;AAA1B,IAHF;AAKD,CAtBD;;AAwBA,eAAeb,mBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ColorPropType, SafeAreaView, Text, View } from \"react-native\";\nimport Color from \"../../../assets/Color\";\nimport AnimatedLottieView from \"lottie-react-native\";\nimport SelectOptionUtil from \"../../Component/Utils/VehicleSelectUtils/SelectOptionUtil\";\nimport VehicleDetail from \"../../Component/Utils/VehicleSelectUtils/VehicleDetail\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOwnedCar } from \"../../Store/action/ownedCar\";\nconst VehicleSelectScreen = (props) => {\n  const dispatch = useDispatch();\n  const [selectedVehicle, setSelectedVehicle] = useState();\n  const car = useSelector((state) => state.ownedCar);\n  //   useEffect(() => {\n  //     console.log(\"CARR=>\", car);\n  //   }, [car]);\n\n  const Submitted = (name, mileage) => {\n    //console.log(name, mileage, selectedVehicle);\n    dispatch(addOwnedCar(selectedVehicle, name, mileage));\n    props.navigation.navigate(\"Home\");\n  };\n\n  const Select = (type) => {\n    setSelectedVehicle(type);\n  };\n  return selectedVehicle ? (\n    <VehicleDetail selected={selectedVehicle} submit={Submitted} />\n  ) : (\n    <SelectOptionUtil select={Select} />\n  );\n};\n\nexport default VehicleSelectScreen;\n"]},"metadata":{},"sourceType":"module"}