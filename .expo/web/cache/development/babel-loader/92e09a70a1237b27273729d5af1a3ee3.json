{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api_utils from \"../../../assets/api\";\nimport endPoints from \"../../../assets/endpoints\";\nimport CarModel from \"../../../model/carModel\";\nexport var FETCH_CAR = \"FETCH_CAR\";\nexport var fetchCarModel = function fetchCarModel() {\n  return function _callee(dispatch, getState) {\n    var response, resData, vehicleList, carList, scootyList, key;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"\" + api_utils.baseURL_Demo + endPoints.vehicle_details + \".json?\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            resData = _context.sent;\n            vehicleList = [];\n            carList = [];\n            scootyList = [];\n\n            for (key in resData) {\n              vehicleList.push(new CarModel(key, resData[key].catId, resData[key].name, resData[key].photo, resData[key].time, resData[key].range, resData[key].speed, resData[key].horse, resData[key].torque, resData[key].startingP, resData[key].youtube, resData[key].Description, resData[key].brand, resData[key].type, resData[key].IsIndian, resData[key].TestDrive, resData[key].sideview));\n\n              if (resData[key].type === \"car\") {\n                carList.push(new CarModel(key, resData[key].catId, resData[key].name, resData[key].photo, resData[key].time, resData[key].range, resData[key].speed, resData[key].horse, resData[key].torque, resData[key].startingP, resData[key].youtube, resData[key].Description, resData[key].brand, resData[key].type, resData[key].IsIndian, resData[key].TestDrive, resData[key].sideview));\n              } else if (resData[key].type === \"twoWheeler\") {\n                scootyList.push(new CarModel(key, resData[key].catId, resData[key].name, resData[key].photo, resData[key].time, resData[key].range, resData[key].speed, resData[key].horse, resData[key].torque, resData[key].startingP, resData[key].youtube, resData[key].Description, resData[key].brand, resData[key].type, resData[key].IsIndian, resData[key].TestDrive, resData[key].sideview));\n              }\n            }\n\n            dispatch({\n              type: FETCH_CAR,\n              carList: carList,\n              vehicleList: vehicleList,\n              scootyList: scootyList\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Store/action/car.js"],"names":["api_utils","endPoints","CarModel","FETCH_CAR","fetchCarModel","dispatch","getState","fetch","baseURL_Demo","vehicle_details","response","json","resData","vehicleList","carList","scootyList","key","push","catId","name","photo","time","range","speed","horse","torque","startingP","youtube","Description","brand","type","IsIndian","TestDrive","sideview"],"mappings":"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","sourcesContent":["import api_utils from \"../../../assets/api\";\nimport endPoints from \"../../../assets/endpoints\";\nimport CarModel from \"../../../model/carModel\";\n\nexport const FETCH_CAR = \"FETCH_CAR\";\n\nexport const fetchCarModel = () => {\n  return async (dispatch, getState) => {\n    const response = await fetch(\n      `${api_utils.baseURL_Demo}${endPoints.vehicle_details}.json?`\n    );\n    const resData = await response.json();\n    const vehicleList = [];\n    const carList = [];\n    const scootyList = [];\n    for (const key in resData) {\n      vehicleList.push(\n        new CarModel(\n          key,\n          resData[key].catId,\n          resData[key].name,\n          resData[key].photo,\n          resData[key].time,\n          resData[key].range,\n          resData[key].speed,\n          resData[key].horse,\n          resData[key].torque,\n          resData[key].startingP,\n          resData[key].youtube,\n          resData[key].Description,\n          resData[key].brand,\n          resData[key].type,\n          resData[key].IsIndian,\n          resData[key].TestDrive,\n          resData[key].sideview\n        )\n      );\n      if (resData[key].type === \"car\") {\n        carList.push(\n          new CarModel(\n            key,\n            resData[key].catId,\n            resData[key].name,\n            resData[key].photo,\n            resData[key].time,\n            resData[key].range,\n            resData[key].speed,\n            resData[key].horse,\n            resData[key].torque,\n            resData[key].startingP,\n            resData[key].youtube,\n            resData[key].Description,\n            resData[key].brand,\n            resData[key].type,\n            resData[key].IsIndian,\n            resData[key].TestDrive,\n            resData[key].sideview\n          )\n        );\n      } else if (resData[key].type === \"twoWheeler\") {\n        scootyList.push(\n          new CarModel(\n            key,\n            resData[key].catId,\n            resData[key].name,\n            resData[key].photo,\n            resData[key].time,\n            resData[key].range,\n            resData[key].speed,\n            resData[key].horse,\n            resData[key].torque,\n            resData[key].startingP,\n            resData[key].youtube,\n            resData[key].Description,\n            resData[key].brand,\n            resData[key].type,\n            resData[key].IsIndian,\n            resData[key].TestDrive,\n            resData[key].sideview\n          )\n        );\n      }\n    }\n    dispatch({\n      type: FETCH_CAR,\n      carList: carList,\n      vehicleList: vehicleList,\n      scootyList: scootyList,\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}