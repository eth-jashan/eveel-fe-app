{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar BigSlide = function BigSlide(_ref) {\n  var topRef = _ref.topRef,\n      gallery = _ref.gallery,\n      scrollToActiveIndex = _ref.scrollToActiveIndex;\n  var navigation = useNavigation();\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      ref: topRef,\n      horizontal: true,\n      keyExtractor: function keyExtractor(_, i) {\n        return i.toString();\n      },\n      data: gallery,\n      snapToAlignment: \"center\",\n      snapToInterval: Dimensions.get(\"window\").width,\n      decelerationRate: \"fast\",\n      showsHorizontalScrollIndicator: false,\n      onMomentumScrollEnd: function onMomentumScrollEnd(ev) {\n        scrollToActiveIndex(Math.floor(ev.nativeEvent.contentOffset.x / width));\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _jsx(View, {\n          style: {\n            width: width,\n            height: 250\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate(\"SlideScreen\", {\n                gallery: gallery,\n                index: index\n              });\n            },\n            children: _jsx(Image, {\n              style: {\n                width: \"100%\",\n                height: \"100%\"\n              },\n              source: {\n                uri: item.image\n              }\n            })\n          })\n        });\n      }\n    })\n  });\n};\n\nexport default BigSlide;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Component/Utils/CarProfileScreenUtils/BigSlidePhotoUtil.js"],"names":["React","useNavigation","Dimensions","get","width","height","BigSlide","topRef","gallery","scrollToActiveIndex","navigation","_","i","toString","ev","Math","floor","nativeEvent","contentOffset","x","item","index","navigate","uri","image"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,aAAT,QAA8B,0BAA9B;;;AACA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8C;AAAA,MAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,mBAA0B,QAA1BA,mBAA0B;AAC7D,MAAMC,UAAU,GAAGT,aAAa,EAAhC;AACA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,QAAD;AACE,MAAA,GAAG,EAAEM,MADP;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,YAAY,EAAE,sBAACI,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,CAACC,QAAF,EAAV;AAAA,OAHhB;AAIE,MAAA,IAAI,EAAEL,OAJR;AAKE,MAAA,eAAe,EAAE,QALnB;AAME,MAAA,cAAc,EAAEN,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAN3C;AAOE,MAAA,gBAAgB,EAAC,MAPnB;AAQE,MAAA,8BAA8B,EAAE,KARlC;AASE,MAAA,mBAAmB,EAAE,6BAACU,EAAD,EAAQ;AAC3BL,QAAAA,mBAAmB,CACjBM,IAAI,CAACC,KAAL,CAAWF,EAAE,CAACG,WAAH,CAAeC,aAAf,CAA6BC,CAA7B,GAAiCf,KAA5C,CADiB,CAAnB;AAGD,OAbH;AAcE,MAAA,UAAU,EAAE,2BAAqB;AAAA,YAAlBgB,IAAkB,SAAlBA,IAAkB;AAAA,YAAZC,KAAY,SAAZA,KAAY;AAC/B,eACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEjB,YAAAA,KAAK,EAAEA,KAAT;AAAgBC,YAAAA,MAAM,EAAE;AAAxB,WAAb;AAAA,oBACE,KAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbK,cAAAA,UAAU,CAACY,QAAX,CAAoB,aAApB,EAAmC;AACjCd,gBAAAA,OAAO,EAAPA,OADiC;AAEjCa,gBAAAA,KAAK,EAALA;AAFiC,eAAnC;AAID,aANH;AAAA,sBAQE,KAAC,KAAD;AACE,cAAA,KAAK,EAAE;AAAEjB,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eADT;AAEE,cAAA,MAAM,EAAE;AAAEkB,gBAAAA,GAAG,EAAEH,IAAI,CAACI;AAAZ;AAFV;AARF;AADF,UADF;AAiBD;AAhCH;AADF,IADF;AAsCD,CAxCD;;AAyCA,eAAelB,QAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  FlatList,\n  Dimensions,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nconst { width, height } = Dimensions.get(\"window\");\nconst BigSlide = ({ topRef, gallery, scrollToActiveIndex }) => {\n  const navigation = useNavigation();\n  return (\n    <View>\n      <FlatList\n        ref={topRef}\n        horizontal\n        keyExtractor={(_, i) => i.toString()}\n        data={gallery}\n        snapToAlignment={\"center\"}\n        snapToInterval={Dimensions.get(\"window\").width}\n        decelerationRate=\"fast\"\n        showsHorizontalScrollIndicator={false}\n        onMomentumScrollEnd={(ev) => {\n          scrollToActiveIndex(\n            Math.floor(ev.nativeEvent.contentOffset.x / width)\n          );\n        }}\n        renderItem={({ item, index }) => {\n          return (\n            <View style={{ width: width, height: 250 }}>\n              <TouchableOpacity\n                onPress={() => {\n                  navigation.navigate(\"SlideScreen\", {\n                    gallery,\n                    index,\n                  });\n                }}\n              >\n                <Image\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  source={{ uri: item.image }}\n                />\n              </TouchableOpacity>\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\nexport default BigSlide;\n"]},"metadata":{},"sourceType":"module"}