{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Directions, FlingGestureHandler, State, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { Transition, Transitioning } from \"react-native-reanimated\";\nimport StaggeringView from \"../../Component/Common/StaggeringView\";\nimport TakeaTour from \"../../Component/Utils/CarListScreenUtils/TakeaTourUtil\";\nimport TitleInfo from \"../../Component/Utils/CarListScreenUtils/TitleUtil\";\nimport DetailView from \"../../Component/Utils/CarListScreenUtils/DetailUtil\";\nimport { data } from \"../../../model/Data/cardata\";\nimport { useSelector } from \"react-redux\";\nimport Color from \"../../../assets/Color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var TITLE_SIZE = 50;\nexport var PRICE_SIZE = 40;\nexport var DURATION = 700;\n\nvar transition = _jsxs(Transition.Together, {\n  children: [_jsx(Transition.Out, {\n    type: \"slide-bottom\",\n    interpolation: \"easeIn\",\n    durationMs: DURATION\n  }), _jsx(Transition.Change, {}), _jsx(Transition.In, {\n    type: \"slide-bottom\",\n    interpolation: \"easeOut\",\n    durationMs: DURATION\n  })]\n});\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CarListScreen = function CarListScreen(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var List = route.params.list ? route.params.list : useSelector(function (x) {\n    return x.car.vehicleList;\n  });\n  var catid = (_route$params = route.params) == null ? void 0 : _route$params.id;\n  var featureList = [\"battery\", \"speed\", \"horsepower\", \"singleCharge\"];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var activeIndex = useRef(new Animated.Value(0)).current;\n  var animation = useRef(new Animated.Value(0)).current;\n  var ref = useRef();\n  var carList = List;\n\n  if (catid !== undefined) {\n    carList = List == null ? void 0 : List.filter(function (item) {\n      return item.companyId == catid;\n    });\n  }\n\n  useEffect(function () {\n    Animated.timing(animation, {\n      toValue: activeIndex,\n      duration: DURATION * 0.7,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  var setActiveIndex = useCallback(function (newIndex) {\n    activeIndex.setValue(newIndex);\n    ref.current.animateNextTransition();\n    setIndex(newIndex);\n  });\n  var transformY = animation.interpolate({\n    inputRange: [-1, 0, 1],\n    outputRange: [height, 0, -height]\n  });\n  return _jsx(FlingGestureHandler, {\n    direction: Directions.UP,\n    onHandlerStateChange: function onHandlerStateChange(ev) {\n      if (index === carList.length - 1) {\n        return;\n      }\n\n      if (ev.nativeEvent.state === State.END) {\n        setActiveIndex(index + 1);\n      }\n    },\n    children: _jsx(FlingGestureHandler, {\n      direction: Directions.DOWN,\n      onHandlerStateChange: function onHandlerStateChange(ev) {\n        if (index === 0) {\n          return;\n        }\n\n        if (ev.nativeEvent.state === State.END) {\n          setActiveIndex(index - 1);\n        }\n      },\n      children: _jsxs(SafeAreaView, {\n        style: {\n          height: height,\n          width: width,\n          backgroundColor: \"red\"\n        },\n        children: [_jsx(Animated.View, {\n          style: [StyleSheet.absoluteFillObject, {\n            height: height * carList.length,\n            transform: [{\n              translateY: transformY\n            }]\n          }],\n          children: carList.map(function (item, i) {\n            return _jsx(View, {\n              style: {\n                height: height,\n                backgroundColor: i % 2 === 0 ? \"black\" : \"white\",\n                width: width\n              }\n            }, i);\n          })\n        }), _jsxs(Transitioning.View, {\n          ref: ref,\n          transition: transition,\n          style: {\n            width: width\n          },\n          children: [_jsx(TitleInfo, {\n            title_size: TITLE_SIZE,\n            index: index,\n            color: index % 2 === 0 ? \"white\" : \"black\",\n            text: carList[index].name\n          }), _jsx(DetailView, {\n            data: carList,\n            index: index,\n            color: index % 2 === 0 ? \"white\" : \"black\"\n          }), _jsx(StaggeringView, {\n            delay: 1000,\n            style: {\n              width: 315,\n              height: 150,\n              alignSelf: \"center\",\n              top: 75\n            },\n            children: _jsx(Image, {\n              style: {\n                width: \"100%\",\n                height: \"100%\"\n              },\n              source: {\n                uri: carList[index].sideView\n              },\n              resizeMode: \"contain\"\n            })\n          }, index)]\n        }), _jsx(Pressable, {\n          style: {\n            backgroundColor: Color.lightgreen,\n            width: \"90%\",\n            borderRadius: 12,\n            alignSelf: \"center\",\n            position: \"absolute\",\n            bottom: 50\n          },\n          onPress: function onPress() {\n            navigation.navigate(\"CarProfile\", {\n              item: carList[index]\n            });\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 18,\n              color: Color.darkgreen,\n              padding: 8,\n              alignSelf: \"center\",\n              fontFamily: \"semibold\"\n            },\n            children: \"Take a Tour\"\n          })\n        })]\n      })\n    }, \"down\")\n  }, \"up\");\n};\n\nvar styles = StyleSheet.create({});\nexport default CarListScreen;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Screen/Home/carListScreen.js"],"names":["React","useRef","useEffect","useCallback","useState","Directions","FlingGestureHandler","State","TouchableOpacity","SafeAreaView","Transition","Transitioning","StaggeringView","TakeaTour","TitleInfo","DetailView","data","useSelector","Color","TITLE_SIZE","PRICE_SIZE","DURATION","transition","Dimensions","get","width","height","CarListScreen","navigation","route","List","params","list","x","car","vehicleList","catid","id","featureList","index","setIndex","activeIndex","Animated","Value","current","animation","ref","carList","undefined","filter","item","companyId","timing","toValue","duration","useNativeDriver","start","setActiveIndex","newIndex","setValue","animateNextTransition","transformY","interpolate","inputRange","outputRange","UP","ev","length","nativeEvent","state","END","DOWN","backgroundColor","StyleSheet","absoluteFillObject","transform","translateY","map","i","name","alignSelf","top","uri","sideView","lightgreen","borderRadius","position","bottom","navigate","fontSize","color","darkgreen","padding","fontFamily","styles","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { useState } from \"react\";\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Dimensions,\n  Image,\n  Pressable,\n  Text,\n} from \"react-native\";\nimport {\n  Directions,\n  FlingGestureHandler,\n  State,\n  TouchableOpacity,\n} from \"react-native-gesture-handler\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { Transition, Transitioning } from \"react-native-reanimated\";\n\nimport StaggeringView from \"../../Component/Common/StaggeringView\";\n\nimport TakeaTour from \"../../Component/Utils/CarListScreenUtils/TakeaTourUtil\";\nimport TitleInfo from \"../../Component/Utils/CarListScreenUtils/TitleUtil\";\nimport DetailView from \"../../Component/Utils/CarListScreenUtils/DetailUtil\";\nimport { data } from \"../../../model/Data/cardata\";\nimport { useSelector } from \"react-redux\";\nimport Color from \"../../../assets/Color\";\n\nexport const TITLE_SIZE = 50;\nexport const PRICE_SIZE = 40;\nexport const DURATION = 700;\n\nconst transition = (\n  <Transition.Together>\n    <Transition.Out\n      type=\"slide-bottom\"\n      interpolation=\"easeIn\"\n      durationMs={DURATION}\n    />\n    <Transition.Change />\n    <Transition.In\n      type=\"slide-bottom\"\n      interpolation=\"easeOut\"\n      durationMs={DURATION}\n    />\n  </Transition.Together>\n);\n\nconst { width, height } = Dimensions.get(\"screen\");\n\nconst CarListScreen = ({ navigation, route }) => {\n  const List = route.params.list\n    ? route.params.list\n    : useSelector((x) => x.car.vehicleList);\n  //console.log(List);\n  const catid = route.params?.id;\n  const featureList = [\"battery\", \"speed\", \"horsepower\", \"singleCharge\"];\n  const [index, setIndex] = useState(0);\n  const activeIndex = useRef(new Animated.Value(0)).current;\n  const animation = useRef(new Animated.Value(0)).current;\n  const ref = useRef();\n  //console.log(\"LISTT===>\", List);\n  let carList = List;\n  //console.log(catid);\n  //console.log(carList[0]);\n  if (catid !== undefined) {\n    carList = List?.filter((item) => item.companyId == catid);\n  }\n\n  useEffect(() => {\n    Animated.timing(animation, {\n      toValue: activeIndex,\n      duration: DURATION * 0.7,\n      useNativeDriver: true,\n    }).start();\n  }, []);\n\n  const setActiveIndex = useCallback((newIndex) => {\n    activeIndex.setValue(newIndex);\n    ref.current.animateNextTransition();\n    setIndex(newIndex);\n  });\n\n  const transformY = animation.interpolate({\n    inputRange: [-1, 0, 1],\n    outputRange: [height, 0, -height],\n  });\n\n  //(\"carlist\", carList);\n\n  return (\n    <FlingGestureHandler\n      key=\"up\"\n      direction={Directions.UP}\n      onHandlerStateChange={(ev) => {\n        if (index === carList.length - 1) {\n          return;\n        }\n        if (ev.nativeEvent.state === State.END) {\n          setActiveIndex(index + 1);\n        }\n      }}\n    >\n      <FlingGestureHandler\n        key=\"down\"\n        direction={Directions.DOWN}\n        onHandlerStateChange={(ev) => {\n          if (index === 0) {\n            return;\n          }\n          if (ev.nativeEvent.state === State.END) {\n            setActiveIndex(index - 1);\n          }\n        }}\n      >\n        <SafeAreaView\n          style={{ height: height, width: width, backgroundColor: \"red\" }}\n        >\n          <Animated.View\n            style={[\n              StyleSheet.absoluteFillObject,\n              {\n                height: height * carList.length,\n                transform: [{ translateY: transformY }],\n              },\n            ]}\n          >\n            {carList.map((item, i) => {\n              return (\n                <View\n                  key={i}\n                  style={{\n                    height: height,\n                    backgroundColor: i % 2 === 0 ? \"black\" : \"white\",\n                    width: width,\n                  }}\n                ></View>\n              );\n            })}\n          </Animated.View>\n          <Transitioning.View\n            ref={ref}\n            transition={transition}\n            style={{ width: width }}\n          >\n            <TitleInfo\n              title_size={TITLE_SIZE}\n              index={index}\n              color={index % 2 === 0 ? \"white\" : \"black\"}\n              text={carList[index].name}\n            />\n            <DetailView\n              data={carList}\n              index={index}\n              color={index % 2 === 0 ? \"white\" : \"black\"}\n            />\n\n            <StaggeringView\n              delay={1000}\n              key={index}\n              style={{ width: 315, height: 150, alignSelf: \"center\", top: 75 }}\n            >\n              <Image\n                style={{ width: \"100%\", height: \"100%\" }}\n                source={{\n                  uri: carList[index].sideView,\n                }}\n                resizeMode=\"contain\"\n              />\n            </StaggeringView>\n          </Transitioning.View>\n          <Pressable\n            //key={`priceInfo-${index}`}\n            style={{\n              backgroundColor: Color.lightgreen,\n              width: \"90%\",\n              borderRadius: 12,\n              alignSelf: \"center\",\n              position: \"absolute\",\n              bottom: 50,\n            }}\n            onPress={() => {\n              //console.log('heyyyy', carList[index])\n              navigation.navigate(\"CarProfile\", { item: carList[index] });\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 18,\n                color: Color.darkgreen,\n                padding: 8,\n                alignSelf: \"center\",\n                fontFamily: \"semibold\",\n              }}\n            >\n              Take a Tour\n            </Text>\n          </Pressable>\n        </SafeAreaView>\n      </FlingGestureHandler>\n    </FlingGestureHandler>\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default CarListScreen;\n"]},"metadata":{},"sourceType":"module"}