{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport styles from \"./styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar LABEL_TYPES = {\n  NONE: 'none',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\nvar SWIPE_MULTIPLY_FACTOR = 4.5;\n\nvar calculateCardIndexes = function calculateCardIndexes(firstCardIndex, cards) {\n  firstCardIndex = firstCardIndex || 0;\n  var previousCardIndex = firstCardIndex === 0 ? cards.length - 1 : firstCardIndex - 1;\n  var secondCardIndex = firstCardIndex === cards.length - 1 ? 0 : firstCardIndex + 1;\n  return {\n    firstCardIndex: firstCardIndex,\n    secondCardIndex: secondCardIndex,\n    previousCardIndex: previousCardIndex\n  };\n};\n\nvar rebuildStackAnimatedValues = function rebuildStackAnimatedValues(props) {\n  var stackPositionsAndScales = {};\n  var stackSize = props.stackSize,\n      stackSeparation = props.stackSeparation,\n      stackScale = props.stackScale;\n\n  for (var position = 0; position < stackSize; position++) {\n    stackPositionsAndScales[\"stackPosition\" + position] = new Animated.Value(stackSeparation * position);\n    stackPositionsAndScales[\"stackScale\" + position] = new Animated.Value((100 - stackScale * position) * 0.01);\n  }\n\n  return stackPositionsAndScales;\n};\n\nvar Swiper = function (_Component) {\n  _inherits(Swiper, _Component);\n\n  var _super = _createSuper(Swiper);\n\n  function Swiper(_props) {\n    var _this;\n\n    _classCallCheck(this, Swiper);\n\n    _this = _super.call(this, _props);\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          state = _assertThisInitialize.state;\n\n      var propsChanged = !isEqual(props.cards, nextProps.cards) || props.cardIndex !== nextProps.cardIndex;\n      var stateChanged = nextState.firstCardIndex !== state.firstCardIndex || nextState.secondCardIndex !== state.secondCardIndex || nextState.previousCardIndex !== state.previousCardIndex || nextState.labelType !== state.labelType || nextState.swipedAllCards !== state.swipedAllCards;\n      return propsChanged || stateChanged;\n    };\n\n    _this.componentWillUnmount = function () {\n      _this._mounted = false;\n\n      _this.state.pan.x.removeAllListeners();\n\n      _this.state.pan.y.removeAllListeners();\n\n      Dimensions.removeEventListener('change', _this.onDimensionsChange);\n    };\n\n    _this.getCardStyle = function () {\n      var _Dimensions$get2 = Dimensions.get('window'),\n          height = _Dimensions$get2.height,\n          width = _Dimensions$get2.width;\n\n      var _this$props = _this.props,\n          cardVerticalMargin = _this$props.cardVerticalMargin,\n          cardHorizontalMargin = _this$props.cardHorizontalMargin,\n          marginTop = _this$props.marginTop,\n          marginBottom = _this$props.marginBottom;\n      var cardWidth = width - cardHorizontalMargin * 2;\n      var cardHeight = height - cardVerticalMargin * 2 - marginTop - marginBottom;\n      return {\n        top: cardVerticalMargin,\n        left: cardHorizontalMargin,\n        width: cardWidth,\n        height: cardHeight\n      };\n    };\n\n    _this.initializeCardStyle = function () {\n      Dimensions.addEventListener('change', _this.onDimensionsChange);\n    };\n\n    _this.initializePanResponder = function () {\n      _this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gestureState) {\n          return false;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n\n          if (!_this.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onPanResponderGrant: _this.onPanResponderGrant,\n        onPanResponderMove: _this.onPanResponderMove,\n        onPanResponderRelease: _this.onPanResponderRelease,\n        onPanResponderTerminate: _this.onPanResponderRelease\n      });\n    };\n\n    _this.createAnimatedEvent = function () {\n      var _this$props2 = _this.props,\n          horizontalSwipe = _this$props2.horizontalSwipe,\n          verticalSwipe = _this$props2.verticalSwipe;\n      var _this$state$pan = _this.state.pan,\n          x = _this$state$pan.x,\n          y = _this$state$pan.y;\n      var dx = horizontalSwipe ? x : new Animated.Value(0);\n      var dy = verticalSwipe ? y : new Animated.Value(0);\n      return {\n        dx: dx,\n        dy: dy\n      };\n    };\n\n    _this.onDimensionsChange = function () {\n      _this.forceUpdate();\n    };\n\n    _this.onPanResponderMove = function (event, gestureState) {\n      _this.props.onSwiping(_this._animatedValueX, _this._animatedValueY);\n\n      var _this$props3 = _this.props,\n          overlayOpacityHorizontalThreshold = _this$props3.overlayOpacityHorizontalThreshold,\n          overlayOpacityVerticalThreshold = _this$props3.overlayOpacityVerticalThreshold;\n\n      if (!overlayOpacityHorizontalThreshold) {\n        overlayOpacityHorizontalThreshold = _this.props.horizontalThreshold;\n      }\n\n      if (!overlayOpacityVerticalThreshold) {\n        overlayOpacityVerticalThreshold = _this.props.verticalThreshold;\n      }\n\n      var isSwipingLeft, isSwipingRight, isSwipingTop, isSwipingBottom;\n\n      if (Math.abs(_this._animatedValueX) > Math.abs(_this._animatedValueY) && Math.abs(_this._animatedValueX) > overlayOpacityHorizontalThreshold) {\n        if (_this._animatedValueX > 0) isSwipingRight = true;else isSwipingLeft = true;\n      } else if (Math.abs(_this._animatedValueY) > Math.abs(_this._animatedValueX) && Math.abs(_this._animatedValueY) > overlayOpacityVerticalThreshold) {\n        if (_this._animatedValueY > 0) isSwipingBottom = true;else isSwipingTop = true;\n      }\n\n      if (isSwipingRight) {\n        _this.setState({\n          labelType: LABEL_TYPES.RIGHT\n        });\n      } else if (isSwipingLeft) {\n        _this.setState({\n          labelType: LABEL_TYPES.LEFT\n        });\n      } else if (isSwipingTop) {\n        _this.setState({\n          labelType: LABEL_TYPES.TOP\n        });\n      } else if (isSwipingBottom) {\n        _this.setState({\n          labelType: LABEL_TYPES.BOTTOM\n        });\n      } else {\n        _this.setState({\n          labelType: LABEL_TYPES.NONE\n        });\n      }\n\n      var onTapCardDeadZone = _this.props.onTapCardDeadZone;\n\n      if (_this._animatedValueX < -onTapCardDeadZone || _this._animatedValueX > onTapCardDeadZone || _this._animatedValueY < -onTapCardDeadZone || _this._animatedValueY > onTapCardDeadZone) {\n        _this.setState({\n          slideGesture: true\n        });\n      }\n\n      return Animated.event([null, _this.createAnimatedEvent()], {\n        useNativeDriver: false\n      })(event, gestureState);\n    };\n\n    _this.onPanResponderGrant = function (event, gestureState) {\n      _this.props.dragStart && _this.props.dragStart();\n\n      if (!_this.state.panResponderLocked) {\n        _this.state.pan.setOffset({\n          x: _this._animatedValueX,\n          y: _this._animatedValueY\n        });\n      }\n\n      _this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n    };\n\n    _this.validPanResponderRelease = function () {\n      var _this$props4 = _this.props,\n          disableBottomSwipe = _this$props4.disableBottomSwipe,\n          disableLeftSwipe = _this$props4.disableLeftSwipe,\n          disableRightSwipe = _this$props4.disableRightSwipe,\n          disableTopSwipe = _this$props4.disableTopSwipe;\n\n      var _this$getSwipeDirecti = _this.getSwipeDirection(_this._animatedValueX, _this._animatedValueY),\n          isSwipingLeft = _this$getSwipeDirecti.isSwipingLeft,\n          isSwipingRight = _this$getSwipeDirecti.isSwipingRight,\n          isSwipingTop = _this$getSwipeDirecti.isSwipingTop,\n          isSwipingBottom = _this$getSwipeDirecti.isSwipingBottom;\n\n      return isSwipingLeft && !disableLeftSwipe || isSwipingRight && !disableRightSwipe || isSwipingTop && !disableTopSwipe || isSwipingBottom && !disableBottomSwipe;\n    };\n\n    _this.onPanResponderRelease = function (e, gestureState) {\n      _this.props.dragEnd && _this.props.dragEnd();\n\n      if (_this.state.panResponderLocked) {\n        _this.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n\n        _this.state.pan.setOffset({\n          x: 0,\n          y: 0\n        });\n\n        return;\n      }\n\n      var _this$props5 = _this.props,\n          horizontalThreshold = _this$props5.horizontalThreshold,\n          verticalThreshold = _this$props5.verticalThreshold;\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var isSwiping = animatedValueX > horizontalThreshold || animatedValueY > verticalThreshold;\n\n      if (isSwiping && _this.validPanResponderRelease()) {\n        var onSwipeDirectionCallback = _this.getOnSwipeDirectionCallback(_this._animatedValueX, _this._animatedValueY);\n\n        _this.swipeCard(onSwipeDirectionCallback);\n      } else {\n        _this.resetTopCard();\n      }\n\n      if (!_this.state.slideGesture) {\n        _this.props.onTapCard(_this.state.firstCardIndex);\n      }\n\n      _this.setState({\n        labelType: LABEL_TYPES.NONE,\n        slideGesture: false\n      });\n    };\n\n    _this.getOnSwipeDirectionCallback = function (animatedValueX, animatedValueY) {\n      var _this$props6 = _this.props,\n          onSwipedLeft = _this$props6.onSwipedLeft,\n          onSwipedRight = _this$props6.onSwipedRight,\n          onSwipedTop = _this$props6.onSwipedTop,\n          onSwipedBottom = _this$props6.onSwipedBottom;\n\n      var _this$getSwipeDirecti2 = _this.getSwipeDirection(animatedValueX, animatedValueY),\n          isSwipingLeft = _this$getSwipeDirecti2.isSwipingLeft,\n          isSwipingRight = _this$getSwipeDirecti2.isSwipingRight,\n          isSwipingTop = _this$getSwipeDirecti2.isSwipingTop,\n          isSwipingBottom = _this$getSwipeDirecti2.isSwipingBottom;\n\n      if (isSwipingRight) {\n        return onSwipedRight;\n      }\n\n      if (isSwipingLeft) {\n        return onSwipedLeft;\n      }\n\n      if (isSwipingTop) {\n        return onSwipedTop;\n      }\n\n      if (isSwipingBottom) {\n        return onSwipedBottom;\n      }\n    };\n\n    _this.mustDecrementCardIndex = function (animatedValueX, animatedValueY) {\n      var _this$getSwipeDirecti3 = _this.getSwipeDirection(animatedValueX, animatedValueY),\n          isSwipingLeft = _this$getSwipeDirecti3.isSwipingLeft,\n          isSwipingRight = _this$getSwipeDirecti3.isSwipingRight,\n          isSwipingTop = _this$getSwipeDirecti3.isSwipingTop,\n          isSwipingBottom = _this$getSwipeDirecti3.isSwipingBottom;\n\n      return isSwipingLeft && _this.props.goBackToPreviousCardOnSwipeLeft || isSwipingRight && _this.props.goBackToPreviousCardOnSwipeRight || isSwipingTop && _this.props.goBackToPreviousCardOnSwipeTop || isSwipingBottom && _this.props.goBackToPreviousCardOnSwipeBottom;\n    };\n\n    _this.getSwipeDirection = function (animatedValueX, animatedValueY) {\n      var isSwipingLeft = animatedValueX < -_this.props.horizontalThreshold;\n      var isSwipingRight = animatedValueX > _this.props.horizontalThreshold;\n      var isSwipingTop = animatedValueY < -_this.props.verticalThreshold;\n      var isSwipingBottom = animatedValueY > _this.props.verticalThreshold;\n      return {\n        isSwipingLeft: isSwipingLeft,\n        isSwipingRight: isSwipingRight,\n        isSwipingTop: isSwipingTop,\n        isSwipingBottom: isSwipingBottom\n      };\n    };\n\n    _this.resetTopCard = function (cb) {\n      Animated.spring(_this.state.pan, {\n        toValue: 0,\n        friction: _this.props.topCardResetAnimationFriction,\n        tension: _this.props.topCardResetAnimationTension,\n        useNativeDriver: true\n      }).start(cb);\n\n      _this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      });\n\n      _this.props.onSwipedAborted();\n    };\n\n    _this.swipeBack = function (cb) {\n      var _this$state = _this.state,\n          swipeBackXYPositions = _this$state.swipeBackXYPositions,\n          isSwipingBack = _this$state.isSwipingBack;\n      var infinite = _this.props.infinite;\n      var canSwipeBack = !isSwipingBack && (swipeBackXYPositions.length > 0 || infinite);\n\n      if (!canSwipeBack) {\n        return;\n      }\n\n      _this.setState({\n        isSwipingBack: !isSwipingBack,\n        swipeBackXYPositions: swipeBackXYPositions\n      }, function () {\n        _this.animatePreviousCard(_this.calculateNextPreviousCardPosition(), cb);\n      });\n    };\n\n    _this.swipeLeft = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _this.swipeCard(_this.props.onSwipedLeft, -_this.props.horizontalThreshold, 0, mustDecrementCardIndex);\n    };\n\n    _this.swipeRight = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _this.swipeCard(_this.props.onSwipedRight, _this.props.horizontalThreshold, 0, mustDecrementCardIndex);\n    };\n\n    _this.swipeTop = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _this.swipeCard(_this.props.onSwipedTop, 0, -_this.props.verticalThreshold, mustDecrementCardIndex);\n    };\n\n    _this.swipeBottom = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _this.swipeCard(_this.props.onSwipedBottom, 0, _this.props.verticalThreshold, mustDecrementCardIndex);\n    };\n\n    _this.swipeCard = function (onSwiped) {\n      var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this._animatedValueX;\n      var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this._animatedValueY;\n      var mustDecrementCardIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      _this.setState({\n        panResponderLocked: true\n      });\n\n      _this.animateStack();\n\n      Animated.timing(_this.state.pan, {\n        toValue: {\n          x: x * SWIPE_MULTIPLY_FACTOR,\n          y: y * SWIPE_MULTIPLY_FACTOR\n        },\n        duration: _this.props.swipeAnimationDuration,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setSwipeBackCardXY(x, y, function () {\n          mustDecrementCardIndex = mustDecrementCardIndex ? true : _this.mustDecrementCardIndex(_this._animatedValueX, _this._animatedValueY);\n\n          if (mustDecrementCardIndex) {\n            _this.decrementCardIndex(onSwiped);\n          } else {\n            _this.incrementCardIndex(onSwiped);\n          }\n        });\n      });\n    };\n\n    _this.setSwipeBackCardXY = function () {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -width;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n\n      _this.setState({\n        swipeBackXYPositions: [].concat(_toConsumableArray(_this.state.swipeBackXYPositions), [{\n          x: x,\n          y: y\n        }])\n      }, cb);\n    };\n\n    _this.animatePreviousCard = function (_ref, cb) {\n      var x = _ref.x,\n          y = _ref.y;\n      var _this$state2 = _this.state,\n          previousCardX = _this$state2.previousCardX,\n          previousCardY = _this$state2.previousCardY;\n      previousCardX.setValue(x * SWIPE_MULTIPLY_FACTOR);\n      previousCardY.setValue(y * SWIPE_MULTIPLY_FACTOR);\n      Animated.parallel([Animated.spring(_this.state.previousCardX, {\n        toValue: 0,\n        friction: _this.props.stackAnimationFriction,\n        tension: _this.props.stackAnimationTension,\n        useNativeDriver: true\n      }), Animated.spring(_this.state.previousCardY, {\n        toValue: 0,\n        friction: _this.props.stackAnimationFriction,\n        tension: _this.props.stackAnimationTension,\n        useNativeDriver: true\n      })]).start(function () {\n        _this.setState({\n          isSwipingBack: false\n        });\n\n        _this.decrementCardIndex(cb);\n      });\n    };\n\n    _this.animateStack = function () {\n      var _this$state3 = _this.state,\n          cards = _this$state3.cards,\n          secondCardIndex = _this$state3.secondCardIndex,\n          swipedAllCards = _this$state3.swipedAllCards;\n      var _this$props7 = _this.props,\n          stackSize = _this$props7.stackSize,\n          infinite = _this$props7.infinite,\n          showSecondCard = _this$props7.showSecondCard;\n      var index = secondCardIndex;\n\n      while (stackSize-- > 1 && showSecondCard && !swipedAllCards) {\n        if (_this.state[\"stackPosition\" + stackSize] && _this.state[\"stackScale\" + stackSize]) {\n          var newSeparation = _this.props.stackSeparation * (stackSize - 1);\n          var newScale = (100 - _this.props.stackScale * (stackSize - 1)) * 0.01;\n          Animated.parallel([Animated.spring(_this.state[\"stackPosition\" + stackSize], {\n            toValue: newSeparation,\n            friction: _this.props.stackAnimationFriction,\n            tension: _this.props.stackAnimationTension,\n            useNativeDriver: true\n          }), Animated.spring(_this.state[\"stackScale\" + stackSize], {\n            toValue: newScale,\n            friction: _this.props.stackAnimationFriction,\n            tension: _this.props.stackAnimationTension,\n            useNativeDriver: true\n          })]).start();\n        }\n\n        if (index === cards.length - 1) {\n          if (!infinite) break;\n          index = 0;\n        } else {\n          index++;\n        }\n      }\n    };\n\n    _this.incrementCardIndex = function (onSwiped) {\n      var firstCardIndex = _this.state.firstCardIndex;\n      var infinite = _this.props.infinite;\n      var newCardIndex = firstCardIndex + 1;\n      var swipedAllCards = false;\n\n      _this.onSwipedCallbacks(onSwiped);\n\n      var allSwipedCheck = function allSwipedCheck() {\n        return newCardIndex === _this.state.cards.length;\n      };\n\n      if (allSwipedCheck()) {\n        if (!infinite) {\n          _this.props.onSwipedAll();\n\n          if (allSwipedCheck()) {\n            swipedAllCards = true;\n          }\n        } else {\n          newCardIndex = 0;\n        }\n      }\n\n      _this.setCardIndex(newCardIndex, swipedAllCards);\n    };\n\n    _this.decrementCardIndex = function (cb) {\n      var firstCardIndex = _this.state.firstCardIndex;\n      var lastCardIndex = _this.state.cards.length - 1;\n      var previousCardIndex = firstCardIndex - 1;\n      var newCardIndex = firstCardIndex === 0 ? lastCardIndex : previousCardIndex;\n\n      _this.onSwipedCallbacks(cb);\n\n      _this.setCardIndex(newCardIndex, false);\n    };\n\n    _this.jumpToCardIndex = function (newCardIndex) {\n      if (_this.state.cards[newCardIndex]) {\n        _this.setCardIndex(newCardIndex, false);\n      }\n    };\n\n    _this.onSwipedCallbacks = function (swipeDirectionCallback) {\n      var previousCardIndex = _this.state.firstCardIndex;\n\n      _this.props.onSwiped(previousCardIndex, _this.state.cards[previousCardIndex]);\n\n      if (swipeDirectionCallback) {\n        swipeDirectionCallback(previousCardIndex, _this.state.cards[previousCardIndex]);\n      }\n    };\n\n    _this.setCardIndex = function (newCardIndex, swipedAllCards) {\n      if (_this._mounted) {\n        _this.setState(_objectSpread(_objectSpread({}, calculateCardIndexes(newCardIndex, _this.state.cards)), {}, {\n          swipedAllCards: swipedAllCards,\n          panResponderLocked: false\n        }), _this.resetPanAndScale);\n      }\n    };\n\n    _this.resetPanAndScale = function () {\n      var _this$props8 = _this.props,\n          previousCardDefaultPositionX = _this$props8.previousCardDefaultPositionX,\n          previousCardDefaultPositionY = _this$props8.previousCardDefaultPositionY;\n\n      _this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n\n      _this.state.previousCardX.setValue(previousCardDefaultPositionX);\n\n      _this.state.previousCardY.setValue(previousCardDefaultPositionY);\n    };\n\n    _this.calculateNextPreviousCardPosition = function () {\n      var swipeBackXYPositions = _this.state.swipeBackXYPositions;\n      var _this$props9 = _this.props,\n          x = _this$props9.previousCardDefaultPositionX,\n          y = _this$props9.previousCardDefaultPositionY;\n      var swipeBackPosition = swipeBackXYPositions.splice(-1, 1);\n\n      if (swipeBackPosition[0]) {\n        x = swipeBackPosition[0].x;\n        y = swipeBackPosition[0].y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    };\n\n    _this.calculateOverlayLabelStyle = function () {\n      var dynamicStyle = _this.props.overlayLabels[_this.state.labelType].style;\n      var overlayLabelStyle = dynamicStyle ? dynamicStyle.label : {};\n\n      if (_this.state.labelType === LABEL_TYPES.NONE) {\n        overlayLabelStyle = styles.hideOverlayLabel;\n      }\n\n      return [_this.props.overlayLabelStyle, overlayLabelStyle];\n    };\n\n    _this.calculateOverlayLabelWrapperStyle = function () {\n      var dynamicStyle = _this.props.overlayLabels[_this.state.labelType].style;\n      var dynamicWrapperStyle = dynamicStyle ? dynamicStyle.wrapper : {};\n      var opacity = _this.props.animateOverlayLabelsOpacity ? _this.interpolateOverlayLabelsOpacity() : 1;\n      return [_this.props.overlayLabelWrapperStyle, dynamicWrapperStyle, {\n        opacity: opacity\n      }];\n    };\n\n    _this.calculateSwipableCardStyle = function () {\n      var opacity = _this.props.animateCardOpacity ? _this.interpolateCardOpacity() : 1;\n\n      var rotation = _this.interpolateRotation();\n\n      return [styles.card, _this.getCardStyle(), {\n        zIndex: 1,\n        opacity: opacity,\n        transform: [{\n          translateX: _this.state.pan.x\n        }, {\n          translateY: _this.state.pan.y\n        }, {\n          rotate: rotation\n        }]\n      }, _this.props.cardStyle];\n    };\n\n    _this.calculateStackCardZoomStyle = function (position) {\n      return [styles.card, _this.getCardStyle(), {\n        zIndex: position * -1,\n        transform: [{\n          scale: _this.state[\"stackScale\" + position]\n        }, {\n          translateY: _this.state[\"stackPosition\" + position]\n        }]\n      }, _this.props.cardStyle];\n    };\n\n    _this.calculateSwipeBackCardStyle = function () {\n      return [styles.card, _this.getCardStyle(), {\n        zIndex: 4,\n        transform: [{\n          translateX: _this.state.previousCardX\n        }, {\n          translateY: _this.state.previousCardY\n        }]\n      }, _this.props.cardStyle];\n    };\n\n    _this.interpolateCardOpacity = function () {\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var opacity;\n\n      if (animatedValueX > animatedValueY) {\n        opacity = _this.state.pan.x.interpolate({\n          inputRange: _this.props.inputCardOpacityRangeX,\n          outputRange: _this.props.outputCardOpacityRangeX\n        });\n      } else {\n        opacity = _this.state.pan.y.interpolate({\n          inputRange: _this.props.inputCardOpacityRangeY,\n          outputRange: _this.props.outputCardOpacityRangeY\n        });\n      }\n\n      return opacity;\n    };\n\n    _this.interpolateOverlayLabelsOpacity = function () {\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var opacity;\n\n      if (animatedValueX > animatedValueY) {\n        opacity = _this.state.pan.x.interpolate({\n          inputRange: _this.props.inputOverlayLabelsOpacityRangeX,\n          outputRange: _this.props.outputOverlayLabelsOpacityRangeX\n        });\n      } else {\n        opacity = _this.state.pan.y.interpolate({\n          inputRange: _this.props.inputOverlayLabelsOpacityRangeY,\n          outputRange: _this.props.outputOverlayLabelsOpacityRangeY\n        });\n      }\n\n      return opacity;\n    };\n\n    _this.interpolateRotation = function () {\n      return _this.state.pan.x.interpolate({\n        inputRange: _this.props.inputRotationRange,\n        outputRange: _this.props.outputRotationRange\n      });\n    };\n\n    _this.render = function () {\n      var _this$props10 = _this.props,\n          pointerEvents = _this$props10.pointerEvents,\n          backgroundColor = _this$props10.backgroundColor,\n          marginTop = _this$props10.marginTop,\n          marginBottom = _this$props10.marginBottom,\n          containerStyle = _this$props10.containerStyle,\n          swipeBackCard = _this$props10.swipeBackCard;\n      return _jsxs(View, {\n        pointerEvents: pointerEvents,\n        style: [styles.container, {\n          backgroundColor: backgroundColor,\n          marginTop: marginTop,\n          marginBottom: marginBottom\n        }, containerStyle],\n        children: [_this.renderChildren(), swipeBackCard ? _this.renderSwipeBackCard() : null, _this.renderStack()]\n      });\n    };\n\n    _this.renderChildren = function () {\n      var _this$props11 = _this.props,\n          childrenOnTop = _this$props11.childrenOnTop,\n          children = _this$props11.children,\n          stackSize = _this$props11.stackSize,\n          showSecondCard = _this$props11.showSecondCard;\n      var zIndex = stackSize && showSecondCard ? stackSize * -1 : 1;\n\n      if (childrenOnTop) {\n        zIndex = 5;\n      }\n\n      return _jsx(View, {\n        pointerEvents: \"box-none\",\n        style: [styles.childrenViewStyle, {\n          zIndex: zIndex\n        }],\n        children: children\n      });\n    };\n\n    _this.getCardKey = function (cardContent, cardIndex) {\n      var keyExtractor = _this.props.keyExtractor;\n\n      if (keyExtractor) {\n        return keyExtractor(cardContent);\n      }\n\n      return cardIndex;\n    };\n\n    _this.pushCardToStack = function (renderedCards, index, position, key, firstCard) {\n      var cards = _this.props.cards;\n\n      var stackCardZoomStyle = _this.calculateStackCardZoomStyle(position);\n\n      var stackCard = _this.props.renderCard(cards[index], index);\n\n      var swipableCardStyle = _this.calculateSwipableCardStyle();\n\n      var renderOverlayLabel = _this.renderOverlayLabel();\n\n      renderedCards.push(_jsxs(Animated.View, _objectSpread(_objectSpread({\n        style: firstCard ? swipableCardStyle : stackCardZoomStyle\n      }, _this._panResponder.panHandlers), {}, {\n        children: [firstCard ? renderOverlayLabel : null, stackCard]\n      }), key));\n    };\n\n    _this.renderStack = function () {\n      var _this$state4 = _this.state,\n          cards = _this$state4.cards,\n          firstCardIndex = _this$state4.firstCardIndex,\n          swipedAllCards = _this$state4.swipedAllCards;\n      var renderedCards = [];\n      var _this$props12 = _this.props,\n          stackSize = _this$props12.stackSize,\n          infinite = _this$props12.infinite,\n          showSecondCard = _this$props12.showSecondCard;\n      var index = firstCardIndex;\n      var firstCard = true;\n      var cardPosition = 0;\n\n      while (stackSize-- > 0 && (firstCard || showSecondCard) && !swipedAllCards) {\n        var key = _this.getCardKey(cards[index], index);\n\n        _this.pushCardToStack(renderedCards, index, cardPosition, key, firstCard);\n\n        firstCard = false;\n\n        if (index === cards.length - 1) {\n          if (!infinite) break;\n          index = 0;\n        } else {\n          index++;\n        }\n\n        cardPosition++;\n      }\n\n      return renderedCards;\n    };\n\n    _this.renderSwipeBackCard = function () {\n      var previousCardIndex = _this.state.previousCardIndex;\n      var cards = _this.props.cards;\n\n      var previousCardStyle = _this.calculateSwipeBackCardStyle();\n\n      var previousCard = _this.props.renderCard(cards[previousCardIndex], previousCardIndex);\n\n      var key = _this.getCardKey(cards[previousCardIndex], previousCardIndex);\n\n      return _jsx(Animated.View, {\n        style: previousCardStyle,\n        children: previousCard\n      }, key);\n    };\n\n    _this.renderOverlayLabel = function () {\n      var _this$props13 = _this.props,\n          disableBottomSwipe = _this$props13.disableBottomSwipe,\n          disableLeftSwipe = _this$props13.disableLeftSwipe,\n          disableRightSwipe = _this$props13.disableRightSwipe,\n          disableTopSwipe = _this$props13.disableTopSwipe,\n          overlayLabels = _this$props13.overlayLabels;\n      var labelType = _this.state.labelType;\n      var labelTypeNone = labelType === LABEL_TYPES.NONE;\n      var directionSwipeLabelDisabled = labelType === LABEL_TYPES.BOTTOM && disableBottomSwipe || labelType === LABEL_TYPES.LEFT && disableLeftSwipe || labelType === LABEL_TYPES.RIGHT && disableRightSwipe || labelType === LABEL_TYPES.TOP && disableTopSwipe;\n\n      if (!overlayLabels || !overlayLabels[labelType] || labelTypeNone || directionSwipeLabelDisabled) {\n        return null;\n      }\n\n      return _jsxs(Animated.View, {\n        style: _this.calculateOverlayLabelWrapperStyle(),\n        children: [!overlayLabels[labelType].element && _jsx(Text, {\n          style: _this.calculateOverlayLabelStyle(),\n          children: overlayLabels[labelType].title\n        }), overlayLabels[labelType].element && overlayLabels[labelType].element]\n      });\n    };\n\n    _this.state = _objectSpread(_objectSpread({}, calculateCardIndexes(_props.cardIndex, _props.cards)), {}, {\n      pan: new Animated.ValueXY(),\n      cards: _props.cards,\n      previousCardX: new Animated.Value(_props.previousCardDefaultPositionX),\n      previousCardY: new Animated.Value(_props.previousCardDefaultPositionY),\n      swipedAllCards: false,\n      panResponderLocked: false,\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false,\n      swipeBackXYPositions: [],\n      isSwipingBack: false\n    }, rebuildStackAnimatedValues(_props));\n    _this._mounted = true;\n    _this._animatedValueX = 0;\n    _this._animatedValueY = 0;\n\n    _this.state.pan.x.addListener(function (value) {\n      return _this._animatedValueX = value.value;\n    });\n\n    _this.state.pan.y.addListener(function (value) {\n      return _this._animatedValueY = value.value;\n    });\n\n    _this.initializeCardStyle();\n\n    _this.initializePanResponder();\n\n    return _this;\n  }\n\n  return Swiper;\n}(Component);\n\nSwiper.propTypes = {\n  animateCardOpacity: PropTypes.bool,\n  animateOverlayLabelsOpacity: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  cardHorizontalMargin: PropTypes.number,\n  cardIndex: PropTypes.number,\n  cardStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  cardVerticalMargin: PropTypes.number,\n  cards: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  containerStyle: PropTypes.object,\n  children: PropTypes.any,\n  childrenOnTop: PropTypes.bool,\n  dragEnd: PropTypes.func,\n  dragStart: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  goBackToPreviousCardOnSwipeBottom: PropTypes.bool,\n  goBackToPreviousCardOnSwipeLeft: PropTypes.bool,\n  goBackToPreviousCardOnSwipeRight: PropTypes.bool,\n  goBackToPreviousCardOnSwipeTop: PropTypes.bool,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  infinite: PropTypes.bool,\n  inputCardOpacityRangeX: PropTypes.array,\n  inputCardOpacityRangeY: PropTypes.array,\n  inputOverlayLabelsOpacityRangeX: PropTypes.array,\n  inputOverlayLabelsOpacityRangeY: PropTypes.array,\n  inputCardOpacityRange: PropTypes.array,\n  inputRotationRange: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  marginBottom: PropTypes.number,\n  marginTop: PropTypes.number,\n  onSwiped: PropTypes.func,\n  onSwipedAborted: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onTapCard: PropTypes.func,\n  onTapCardDeadZone: PropTypes.number,\n  outputCardOpacityRangeX: PropTypes.array,\n  outputCardOpacityRangeY: PropTypes.array,\n  outputOverlayLabelsOpacityRangeX: PropTypes.array,\n  outputOverlayLabelsOpacityRangeY: PropTypes.array,\n  outputRotationRange: PropTypes.array,\n  outputCardOpacityRange: PropTypes.array,\n  overlayLabels: PropTypes.object,\n  overlayLabelStyle: PropTypes.object,\n  overlayLabelWrapperStyle: PropTypes.object,\n  overlayOpacityHorizontalThreshold: PropTypes.number,\n  overlayOpacityVerticalThreshold: PropTypes.number,\n  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),\n  previousCardDefaultPositionX: PropTypes.number,\n  previousCardDefaultPositionY: PropTypes.number,\n  renderCard: PropTypes.func.isRequired,\n  secondCardZoom: PropTypes.number,\n  showSecondCard: PropTypes.bool,\n  stackAnimationFriction: PropTypes.number,\n  stackAnimationTension: PropTypes.number,\n  stackScale: PropTypes.number,\n  stackSeparation: PropTypes.number,\n  stackSize: PropTypes.number,\n  swipeAnimationDuration: PropTypes.number,\n  swipeBackCard: PropTypes.bool,\n  topCardResetAnimationFriction: PropTypes.number,\n  topCardResetAnimationTension: PropTypes.number,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  zoomAnimationDuration: PropTypes.number,\n  zoomFriction: PropTypes.number\n};\nSwiper.defaultProps = {\n  animateCardOpacity: false,\n  animateOverlayLabelsOpacity: false,\n  backgroundColor: '#4FD0E9',\n  cardHorizontalMargin: 20,\n  cardIndex: 0,\n  cardStyle: {},\n  cardVerticalMargin: 60,\n  childrenOnTop: false,\n  containerStyle: {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 4,\n  goBackToPreviousCardOnSwipeBottom: false,\n  goBackToPreviousCardOnSwipeLeft: false,\n  goBackToPreviousCardOnSwipeRight: false,\n  goBackToPreviousCardOnSwipeTop: false,\n  infinite: false,\n  inputCardOpacityRangeX: [-width / 2, -width / 3, 0, width / 3, width / 2],\n  inputCardOpacityRangeY: [-height / 2, -height / 3, 0, height / 3, height / 2],\n  inputOverlayLabelsOpacityRangeX: [-width / 3, -width / 4, 0, width / 4, width / 3],\n  inputOverlayLabelsOpacityRangeY: [-height / 4, -height / 5, 0, height / 5, height / 4],\n  inputRotationRange: [-width / 2, 0, width / 2],\n  keyExtractor: null,\n  marginBottom: 0,\n  marginTop: 0,\n  onSwiped: function onSwiped(cardIndex) {},\n  onSwipedAborted: function onSwipedAborted() {},\n  onSwipedAll: function onSwipedAll() {},\n  onSwipedBottom: function onSwipedBottom(cardIndex) {},\n  onSwipedLeft: function onSwipedLeft(cardIndex) {},\n  onSwipedRight: function onSwipedRight(cardIndex) {},\n  onSwipedTop: function onSwipedTop(cardIndex) {},\n  onSwiping: function onSwiping() {},\n  onTapCard: function onTapCard(cardIndex) {},\n  onTapCardDeadZone: 5,\n  outputCardOpacityRangeX: [0.8, 1, 1, 1, 0.8],\n  outputCardOpacityRangeY: [0.8, 1, 1, 1, 0.8],\n  outputOverlayLabelsOpacityRangeX: [1, 0, 0, 0, 1],\n  outputOverlayLabelsOpacityRangeY: [1, 0, 0, 0, 1],\n  outputRotationRange: ['-10deg', '0deg', '10deg'],\n  overlayLabels: null,\n  overlayLabelStyle: {\n    fontSize: 45,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    padding: 10,\n    overflow: 'hidden'\n  },\n  overlayLabelWrapperStyle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 2,\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlayOpacityHorizontalThreshold: width / 4,\n  overlayOpacityVerticalThreshold: height / 5,\n  pointerEvents: 'auto',\n  previousCardDefaultPositionX: -width,\n  previousCardDefaultPositionY: -height,\n  secondCardZoom: 0.97,\n  showSecondCard: true,\n  stackAnimationFriction: 7,\n  stackAnimationTension: 40,\n  stackScale: 3,\n  stackSeparation: 10,\n  stackSize: 1,\n  swipeAnimationDuration: 350,\n  swipeBackCard: false,\n  topCardResetAnimationFriction: 7,\n  topCardResetAnimationTension: 40,\n  verticalSwipe: true,\n  verticalThreshold: height / 5,\n  zoomAnimationDuration: 100,\n  zoomFriction: 7\n};\nexport default Swiper;","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/node_modules/react-native-deck-swiper/Swiper.js"],"names":["React","Component","PropTypes","isEqual","styles","Dimensions","get","height","width","LABEL_TYPES","NONE","LEFT","RIGHT","TOP","BOTTOM","SWIPE_MULTIPLY_FACTOR","calculateCardIndexes","firstCardIndex","cards","previousCardIndex","length","secondCardIndex","rebuildStackAnimatedValues","props","stackPositionsAndScales","stackSize","stackSeparation","stackScale","position","Animated","Value","Swiper","shouldComponentUpdate","nextProps","nextState","state","propsChanged","cardIndex","stateChanged","labelType","swipedAllCards","componentWillUnmount","_mounted","pan","x","removeAllListeners","y","removeEventListener","onDimensionsChange","getCardStyle","cardVerticalMargin","cardHorizontalMargin","marginTop","marginBottom","cardWidth","cardHeight","top","left","initializeCardStyle","addEventListener","initializePanResponder","_panResponder","PanResponder","create","onStartShouldSetPanResponder","event","gestureState","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","evt","isVerticalSwipe","Math","sqrt","pow","dx","dy","verticalSwipe","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","createAnimatedEvent","horizontalSwipe","forceUpdate","onSwiping","_animatedValueX","_animatedValueY","overlayOpacityHorizontalThreshold","overlayOpacityVerticalThreshold","horizontalThreshold","verticalThreshold","isSwipingLeft","isSwipingRight","isSwipingTop","isSwipingBottom","abs","setState","onTapCardDeadZone","slideGesture","useNativeDriver","dragStart","panResponderLocked","setOffset","setValue","validPanResponderRelease","disableBottomSwipe","disableLeftSwipe","disableRightSwipe","disableTopSwipe","getSwipeDirection","e","dragEnd","animatedValueX","animatedValueY","isSwiping","onSwipeDirectionCallback","getOnSwipeDirectionCallback","swipeCard","resetTopCard","onTapCard","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","mustDecrementCardIndex","goBackToPreviousCardOnSwipeLeft","goBackToPreviousCardOnSwipeRight","goBackToPreviousCardOnSwipeTop","goBackToPreviousCardOnSwipeBottom","cb","spring","toValue","friction","topCardResetAnimationFriction","tension","topCardResetAnimationTension","start","onSwipedAborted","swipeBack","swipeBackXYPositions","isSwipingBack","infinite","canSwipeBack","animatePreviousCard","calculateNextPreviousCardPosition","swipeLeft","swipeRight","swipeTop","swipeBottom","onSwiped","animateStack","timing","duration","swipeAnimationDuration","setSwipeBackCardXY","decrementCardIndex","incrementCardIndex","previousCardX","previousCardY","parallel","stackAnimationFriction","stackAnimationTension","showSecondCard","index","newSeparation","newScale","newCardIndex","onSwipedCallbacks","allSwipedCheck","onSwipedAll","setCardIndex","lastCardIndex","jumpToCardIndex","swipeDirectionCallback","resetPanAndScale","previousCardDefaultPositionX","previousCardDefaultPositionY","swipeBackPosition","splice","calculateOverlayLabelStyle","dynamicStyle","overlayLabels","style","overlayLabelStyle","label","hideOverlayLabel","calculateOverlayLabelWrapperStyle","dynamicWrapperStyle","wrapper","opacity","animateOverlayLabelsOpacity","interpolateOverlayLabelsOpacity","overlayLabelWrapperStyle","calculateSwipableCardStyle","animateCardOpacity","interpolateCardOpacity","rotation","interpolateRotation","card","zIndex","transform","translateX","translateY","rotate","cardStyle","calculateStackCardZoomStyle","scale","calculateSwipeBackCardStyle","interpolate","inputRange","inputCardOpacityRangeX","outputRange","outputCardOpacityRangeX","inputCardOpacityRangeY","outputCardOpacityRangeY","inputOverlayLabelsOpacityRangeX","outputOverlayLabelsOpacityRangeX","inputOverlayLabelsOpacityRangeY","outputOverlayLabelsOpacityRangeY","inputRotationRange","outputRotationRange","render","pointerEvents","backgroundColor","containerStyle","swipeBackCard","container","renderChildren","renderSwipeBackCard","renderStack","childrenOnTop","children","childrenViewStyle","getCardKey","cardContent","keyExtractor","pushCardToStack","renderedCards","key","firstCard","stackCardZoomStyle","stackCard","renderCard","swipableCardStyle","renderOverlayLabel","push","panHandlers","cardPosition","previousCardStyle","previousCard","labelTypeNone","directionSwipeLabelDisabled","element","title","ValueXY","addListener","value","propTypes","bool","string","number","oneOfType","object","array","isRequired","any","func","inputCardOpacityRange","outputCardOpacityRange","oneOf","secondCardZoom","zoomAnimationDuration","zoomFriction","defaultProps","fontSize","fontWeight","borderRadius","padding","overflow","flex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { PanResponder, Text, View, Dimensions, Animated } from 'react-native'\nimport PropTypes from 'prop-types'\nimport isEqual from 'lodash/isEqual'\n\nimport styles from './styles'\n\nconst { height, width } = Dimensions.get('window')\nconst LABEL_TYPES = {\n  NONE: 'none',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n}\nconst SWIPE_MULTIPLY_FACTOR = 4.5\n\nconst calculateCardIndexes = (firstCardIndex, cards) => {\n  firstCardIndex = firstCardIndex || 0\n  const previousCardIndex = firstCardIndex === 0 ? cards.length - 1 : firstCardIndex - 1\n  const secondCardIndex = firstCardIndex === cards.length - 1 ? 0 : firstCardIndex + 1\n  return { firstCardIndex, secondCardIndex, previousCardIndex }\n}\n\nconst rebuildStackAnimatedValues = (props) => {\n  const stackPositionsAndScales = {}\n  const { stackSize, stackSeparation, stackScale } = props\n\n  for (let position = 0; position < stackSize; position++) {\n    stackPositionsAndScales[`stackPosition${position}`] = new Animated.Value(stackSeparation * position)\n    stackPositionsAndScales[`stackScale${position}`] = new Animated.Value((100 - stackScale * position) * 0.01)\n  }\n\n  return stackPositionsAndScales\n}\n\nclass Swiper extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ...calculateCardIndexes(props.cardIndex, props.cards),\n      pan: new Animated.ValueXY(),\n      cards: props.cards,\n      previousCardX: new Animated.Value(props.previousCardDefaultPositionX),\n      previousCardY: new Animated.Value(props.previousCardDefaultPositionY),\n      swipedAllCards: false,\n      panResponderLocked: false,\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false,\n      swipeBackXYPositions: [],\n      isSwipingBack: false,\n      ...rebuildStackAnimatedValues(props)\n    }\n\n    this._mounted = true\n    this._animatedValueX = 0\n    this._animatedValueY = 0\n\n    this.state.pan.x.addListener(value => (this._animatedValueX = value.value))\n    this.state.pan.y.addListener(value => (this._animatedValueY = value.value))\n\n    this.initializeCardStyle()\n    this.initializePanResponder()\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    const { props, state } = this\n    const propsChanged = (\n      !isEqual(props.cards, nextProps.cards) ||\n      props.cardIndex !== nextProps.cardIndex\n    )\n    const stateChanged = (\n      nextState.firstCardIndex !== state.firstCardIndex ||\n      nextState.secondCardIndex !== state.secondCardIndex ||\n      nextState.previousCardIndex !== state.previousCardIndex ||\n      nextState.labelType !== state.labelType ||\n      nextState.swipedAllCards !== state.swipedAllCards\n    )\n    return propsChanged || stateChanged\n  }\n\n  componentWillUnmount = () => {\n    this._mounted = false\n    this.state.pan.x.removeAllListeners()\n    this.state.pan.y.removeAllListeners()\n    Dimensions.removeEventListener('change', this.onDimensionsChange)\n  }\n\n  getCardStyle = () => {\n    const { height, width } = Dimensions.get('window')\n    const {\n      cardVerticalMargin,\n      cardHorizontalMargin,\n      marginTop,\n      marginBottom\n    } = this.props\n\n    const cardWidth = width - cardHorizontalMargin * 2\n    const cardHeight =\n      height - cardVerticalMargin * 2 - marginTop - marginBottom\n\n    return {\n      top: cardVerticalMargin,\n      left: cardHorizontalMargin,\n      width: cardWidth,\n      height: cardHeight\n    }\n  }\n\n  initializeCardStyle = () => {\n    // this.forceUpdate()\n    Dimensions.addEventListener('change', this.onDimensionsChange)\n  }\n\n  initializePanResponder = () => {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (event, gestureState) => true,\n      onMoveShouldSetPanResponder: (event, gestureState) => false,\n\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onPanResponderGrant: this.onPanResponderGrant,\n      onPanResponderMove: this.onPanResponderMove,\n      onPanResponderRelease: this.onPanResponderRelease,\n      onPanResponderTerminate: this.onPanResponderRelease\n    })\n  }\n\n  createAnimatedEvent = () => {\n    const { horizontalSwipe, verticalSwipe } = this.props\n    const { x, y } = this.state.pan\n    const dx = horizontalSwipe ? x : new Animated.Value(0)\n    const dy = verticalSwipe ? y : new Animated.Value(0)\n    return { dx, dy }\n  }\n\n  onDimensionsChange = () => {\n    this.forceUpdate()\n  }\n\n  onPanResponderMove = (event, gestureState) => {\n    this.props.onSwiping(this._animatedValueX, this._animatedValueY)\n\n    let { overlayOpacityHorizontalThreshold, overlayOpacityVerticalThreshold } = this.props\n    if (!overlayOpacityHorizontalThreshold) {\n      overlayOpacityHorizontalThreshold = this.props.horizontalThreshold\n    }\n    if (!overlayOpacityVerticalThreshold) {\n      overlayOpacityVerticalThreshold = this.props.verticalThreshold\n    }\n\n    let isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n\n    if (Math.abs(this._animatedValueX) > Math.abs(this._animatedValueY) && Math.abs(this._animatedValueX) > overlayOpacityHorizontalThreshold) {\n      if (this._animatedValueX > 0) isSwipingRight = true\n      else isSwipingLeft = true\n    } else if (Math.abs(this._animatedValueY) > Math.abs(this._animatedValueX) && Math.abs(this._animatedValueY) > overlayOpacityVerticalThreshold) {\n      if (this._animatedValueY > 0) isSwipingBottom = true\n      else isSwipingTop = true\n    }\n\n    if (isSwipingRight) {\n      this.setState({ labelType: LABEL_TYPES.RIGHT })\n    } else if (isSwipingLeft) {\n      this.setState({ labelType: LABEL_TYPES.LEFT })\n    } else if (isSwipingTop) {\n      this.setState({ labelType: LABEL_TYPES.TOP })\n    } else if (isSwipingBottom) {\n      this.setState({ labelType: LABEL_TYPES.BOTTOM })\n    } else {\n      this.setState({ labelType: LABEL_TYPES.NONE })\n    }\n\n    const { onTapCardDeadZone } = this.props\n    if (\n      this._animatedValueX < -onTapCardDeadZone ||\n      this._animatedValueX > onTapCardDeadZone ||\n      this._animatedValueY < -onTapCardDeadZone ||\n      this._animatedValueY > onTapCardDeadZone\n    ) {\n      this.setState({\n        slideGesture: true\n      })\n    }\n\n    return Animated.event([null, this.createAnimatedEvent()], { useNativeDriver: false })(\n      event,\n      gestureState\n    )\n  }\n\n  onPanResponderGrant = (event, gestureState) => {\n    this.props.dragStart && this.props.dragStart()\n    if (!this.state.panResponderLocked) {\n      this.state.pan.setOffset({\n        x: this._animatedValueX,\n        y: this._animatedValueY\n      })\n    }\n\n    this.state.pan.setValue({\n      x: 0,\n      y: 0\n    })\n  }\n\n  validPanResponderRelease = () => {\n    const {\n      disableBottomSwipe,\n      disableLeftSwipe,\n      disableRightSwipe,\n      disableTopSwipe\n    } = this.props\n\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(this._animatedValueX, this._animatedValueY)\n\n    return (\n      (isSwipingLeft && !disableLeftSwipe) ||\n      (isSwipingRight && !disableRightSwipe) ||\n      (isSwipingTop && !disableTopSwipe) ||\n      (isSwipingBottom && !disableBottomSwipe)\n    )\n  }\n\n  onPanResponderRelease = (e, gestureState) => {\n    this.props.dragEnd && this.props.dragEnd()\n    if (this.state.panResponderLocked) {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      })\n      this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      })\n\n      return\n    }\n\n    const { horizontalThreshold, verticalThreshold } = this.props\n\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n\n    const isSwiping =\n      animatedValueX > horizontalThreshold || animatedValueY > verticalThreshold\n\n    if (isSwiping && this.validPanResponderRelease()) {\n      const onSwipeDirectionCallback = this.getOnSwipeDirectionCallback(\n        this._animatedValueX,\n        this._animatedValueY\n      )\n\n      this.swipeCard(onSwipeDirectionCallback)\n    } else {\n      this.resetTopCard()\n    }\n\n    if (!this.state.slideGesture) {\n      this.props.onTapCard(this.state.firstCardIndex)\n    }\n\n    this.setState({\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false\n    })\n  }\n\n  getOnSwipeDirectionCallback = (animatedValueX, animatedValueY) => {\n    const {\n      onSwipedLeft,\n      onSwipedRight,\n      onSwipedTop,\n      onSwipedBottom\n    } = this.props\n\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(animatedValueX, animatedValueY)\n\n    if (isSwipingRight) {\n      return onSwipedRight\n    }\n\n    if (isSwipingLeft) {\n      return onSwipedLeft\n    }\n\n    if (isSwipingTop) {\n      return onSwipedTop\n    }\n\n    if (isSwipingBottom) {\n      return onSwipedBottom\n    }\n  }\n\n  mustDecrementCardIndex = (animatedValueX, animatedValueY) => {\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(animatedValueX, animatedValueY)\n\n    return (\n      (isSwipingLeft && this.props.goBackToPreviousCardOnSwipeLeft) ||\n      (isSwipingRight && this.props.goBackToPreviousCardOnSwipeRight) ||\n      (isSwipingTop && this.props.goBackToPreviousCardOnSwipeTop) ||\n      (isSwipingBottom && this.props.goBackToPreviousCardOnSwipeBottom)\n    )\n  }\n\n  getSwipeDirection = (animatedValueX, animatedValueY) => {\n    const isSwipingLeft = animatedValueX < -this.props.horizontalThreshold\n    const isSwipingRight = animatedValueX > this.props.horizontalThreshold\n    const isSwipingTop = animatedValueY < -this.props.verticalThreshold\n    const isSwipingBottom = animatedValueY > this.props.verticalThreshold\n\n    return { isSwipingLeft, isSwipingRight, isSwipingTop, isSwipingBottom }\n  }\n\n  resetTopCard = cb => {\n    Animated.spring(this.state.pan, {\n      toValue: 0,\n      friction: this.props.topCardResetAnimationFriction,\n      tension: this.props.topCardResetAnimationTension,\n      useNativeDriver: true\n    }).start(cb)\n\n    this.state.pan.setOffset({\n      x: 0,\n      y: 0\n    })\n\n    this.props.onSwipedAborted()\n  }\n\n  swipeBack = cb => {\n    const { swipeBackXYPositions, isSwipingBack } = this.state\n    const { infinite } = this.props\n    const canSwipeBack = !isSwipingBack && (swipeBackXYPositions.length > 0 || infinite)\n    if (!canSwipeBack) {\n      return\n    }\n    this.setState({isSwipingBack: !isSwipingBack, swipeBackXYPositions}, () => {\n      this.animatePreviousCard(this.calculateNextPreviousCardPosition(), cb)\n    })\n  }\n\n  swipeLeft = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedLeft,\n      -this.props.horizontalThreshold,\n      0,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeRight = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedRight,\n      this.props.horizontalThreshold,\n      0,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeTop = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedTop,\n      0,\n      -this.props.verticalThreshold,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeBottom = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedBottom,\n      0,\n      this.props.verticalThreshold,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeCard = (\n    onSwiped,\n    x = this._animatedValueX,\n    y = this._animatedValueY,\n    mustDecrementCardIndex = false\n  ) => {\n    this.setState({ panResponderLocked: true })\n    this.animateStack()\n    Animated.timing(this.state.pan, {\n      toValue: {\n        x: x * SWIPE_MULTIPLY_FACTOR,\n        y: y * SWIPE_MULTIPLY_FACTOR\n      },\n      duration: this.props.swipeAnimationDuration,\n      useNativeDriver: true\n    }).start(() => {\n      this.setSwipeBackCardXY(x, y, () => {\n        mustDecrementCardIndex = mustDecrementCardIndex\n          ? true\n          : this.mustDecrementCardIndex(\n            this._animatedValueX,\n            this._animatedValueY\n          )\n\n        if (mustDecrementCardIndex) {\n          this.decrementCardIndex(onSwiped)\n        } else {\n          this.incrementCardIndex(onSwiped)\n        }\n      })\n    })\n  }\n\n  setSwipeBackCardXY = (x = -width, y = 0, cb) => {\n    this.setState({swipeBackXYPositions: [...this.state.swipeBackXYPositions, {x, y}]}, cb)\n  }\n\n  animatePreviousCard = ({x, y}, cb) => {\n    const { previousCardX, previousCardY } = this.state\n    previousCardX.setValue(x * SWIPE_MULTIPLY_FACTOR)\n    previousCardY.setValue(y * SWIPE_MULTIPLY_FACTOR)\n    Animated.parallel([\n      Animated.spring(this.state.previousCardX, {\n        toValue: 0,\n        friction: this.props.stackAnimationFriction,\n        tension: this.props.stackAnimationTension,\n        useNativeDriver: true\n      }),\n      Animated.spring(this.state.previousCardY, {\n        toValue: 0,\n        friction: this.props.stackAnimationFriction,\n        tension: this.props.stackAnimationTension,\n        useNativeDriver: true\n      })\n    ]).start(() => {\n      this.setState({isSwipingBack: false})\n      this.decrementCardIndex(cb)\n    })\n  }\n\n  animateStack = () => {\n    const { cards, secondCardIndex, swipedAllCards } = this.state\n    let { stackSize, infinite, showSecondCard } = this.props\n    let index = secondCardIndex\n\n    while (stackSize-- > 1 && showSecondCard && !swipedAllCards) {\n      if (this.state[`stackPosition${stackSize}`] && this.state[`stackScale${stackSize}`]) {\n        const newSeparation = this.props.stackSeparation * (stackSize - 1)\n        const newScale = (100 - this.props.stackScale * (stackSize - 1)) * 0.01\n        Animated.parallel([\n          Animated.spring(this.state[`stackPosition${stackSize}`], {\n            toValue: newSeparation,\n            friction: this.props.stackAnimationFriction,\n            tension: this.props.stackAnimationTension,\n            useNativeDriver: true\n          }),\n          Animated.spring(this.state[`stackScale${stackSize}`], {\n            toValue: newScale,\n            friction: this.props.stackAnimationFriction,\n            tension: this.props.stackAnimationTension,\n            useNativeDriver: true\n          })\n        ]).start()\n      }\n\n      if (index === cards.length - 1) {\n        if (!infinite) break\n        index = 0\n      } else {\n        index++\n      }\n    }\n  }\n\n  incrementCardIndex = onSwiped => {\n    const { firstCardIndex } = this.state\n    const { infinite } = this.props\n    let newCardIndex = firstCardIndex + 1\n    let swipedAllCards = false\n\n    this.onSwipedCallbacks(onSwiped)\n\n    const allSwipedCheck = () => newCardIndex === this.state.cards.length\n\n    if (allSwipedCheck()) {\n      if (!infinite) {\n        this.props.onSwipedAll()\n        // onSwipeAll may have added cards\n        if (allSwipedCheck()) {\n          swipedAllCards = true\n        }\n      } else {\n        newCardIndex = 0;\n      }\n    }\n\n    this.setCardIndex(newCardIndex, swipedAllCards)\n  }\n\n  decrementCardIndex = cb => {\n    const { firstCardIndex } = this.state\n    const lastCardIndex = this.state.cards.length - 1\n    const previousCardIndex = firstCardIndex - 1\n\n    const newCardIndex =\n      firstCardIndex === 0 ? lastCardIndex : previousCardIndex\n\n    this.onSwipedCallbacks(cb)\n    this.setCardIndex(newCardIndex, false)\n  }\n\n  jumpToCardIndex = newCardIndex => {\n    if (this.state.cards[newCardIndex]) {\n      this.setCardIndex(newCardIndex, false)\n    }\n  }\n\n  onSwipedCallbacks = (swipeDirectionCallback) => {\n    const previousCardIndex = this.state.firstCardIndex\n    this.props.onSwiped(previousCardIndex, this.state.cards[previousCardIndex])\n\n    if (swipeDirectionCallback) {\n      swipeDirectionCallback(previousCardIndex, this.state.cards[previousCardIndex])\n    }\n  }\n\n  setCardIndex = (newCardIndex, swipedAllCards) => {\n    if (this._mounted) {\n      this.setState(\n        {\n          ...calculateCardIndexes(newCardIndex, this.state.cards),\n          swipedAllCards: swipedAllCards,\n          panResponderLocked: false\n        },\n        this.resetPanAndScale\n      )\n    }\n  }\n\n  resetPanAndScale = () => {\n    const {previousCardDefaultPositionX, previousCardDefaultPositionY} = this.props\n    this.state.pan.setValue({ x: 0, y: 0 })\n    this.state.previousCardX.setValue(previousCardDefaultPositionX)\n    this.state.previousCardY.setValue(previousCardDefaultPositionY)\n  }\n\n  calculateNextPreviousCardPosition = () => {\n    const { swipeBackXYPositions } = this.state\n    let { previousCardDefaultPositionX: x, previousCardDefaultPositionY: y } = this.props\n    const swipeBackPosition = swipeBackXYPositions.splice(-1, 1)\n    if (swipeBackPosition[0]) {\n      x = swipeBackPosition[0].x\n      y = swipeBackPosition[0].y\n    }\n    return { x, y }\n  }\n\n  calculateOverlayLabelStyle = () => {\n    const dynamicStyle = this.props.overlayLabels[this.state.labelType].style\n    let overlayLabelStyle = dynamicStyle ? dynamicStyle.label : {}\n\n    if (this.state.labelType === LABEL_TYPES.NONE) {\n      overlayLabelStyle = styles.hideOverlayLabel\n    }\n\n    return [this.props.overlayLabelStyle, overlayLabelStyle]\n  }\n\n  calculateOverlayLabelWrapperStyle = () => {\n    const dynamicStyle = this.props.overlayLabels[this.state.labelType].style\n    const dynamicWrapperStyle = dynamicStyle ? dynamicStyle.wrapper : {}\n\n    const opacity = this.props.animateOverlayLabelsOpacity\n      ? this.interpolateOverlayLabelsOpacity()\n      : 1\n    return [this.props.overlayLabelWrapperStyle, dynamicWrapperStyle, { opacity }]\n  }\n\n  calculateSwipableCardStyle = () => {\n    const opacity = this.props.animateCardOpacity\n      ? this.interpolateCardOpacity()\n      : 1\n    const rotation = this.interpolateRotation()\n\n    return [\n      styles.card,\n      this.getCardStyle(),\n      {\n        zIndex: 1,\n        opacity: opacity,\n        transform: [\n          { translateX: this.state.pan.x },\n          { translateY: this.state.pan.y },\n          { rotate: rotation }\n        ]\n      },\n      this.props.cardStyle\n    ]\n  }\n\n  calculateStackCardZoomStyle = (position) => [\n    styles.card,\n    this.getCardStyle(),\n    {\n      zIndex: position * -1,\n      transform: [{ scale: this.state[`stackScale${position}`] }, { translateY: this.state[`stackPosition${position}`] }]\n    },\n    this.props.cardStyle\n  ]\n\n  calculateSwipeBackCardStyle = () => [\n    styles.card,\n    this.getCardStyle(),\n    {\n      zIndex: 4,\n      transform: [\n        { translateX: this.state.previousCardX },\n        { translateY: this.state.previousCardY }\n      ]\n    },\n    this.props.cardStyle\n  ]\n\n  interpolateCardOpacity = () => {\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n    let opacity\n\n    if (animatedValueX > animatedValueY) {\n      opacity = this.state.pan.x.interpolate({\n        inputRange: this.props.inputCardOpacityRangeX,\n        outputRange: this.props.outputCardOpacityRangeX\n      })\n    } else {\n      opacity = this.state.pan.y.interpolate({\n        inputRange: this.props.inputCardOpacityRangeY,\n        outputRange: this.props.outputCardOpacityRangeY\n      })\n    }\n\n    return opacity\n  }\n\n  interpolateOverlayLabelsOpacity = () => {\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n    let opacity\n\n    if (animatedValueX > animatedValueY) {\n      opacity = this.state.pan.x.interpolate({\n        inputRange: this.props.inputOverlayLabelsOpacityRangeX,\n        outputRange: this.props.outputOverlayLabelsOpacityRangeX\n      })\n    } else {\n      opacity = this.state.pan.y.interpolate({\n        inputRange: this.props.inputOverlayLabelsOpacityRangeY,\n        outputRange: this.props.outputOverlayLabelsOpacityRangeY\n      })\n    }\n\n    return opacity\n  }\n\n  interpolateRotation = () =>\n    this.state.pan.x.interpolate({\n      inputRange: this.props.inputRotationRange,\n      outputRange: this.props.outputRotationRange\n    })\n\n  render = () => {\n    const { pointerEvents, backgroundColor, marginTop, marginBottom, containerStyle, swipeBackCard } = this.props\n    return (\n      <View\n        pointerEvents={pointerEvents}\n        style={[\n          styles.container,\n          {\n            backgroundColor: backgroundColor,\n            marginTop: marginTop,\n            marginBottom: marginBottom\n          },\n          containerStyle\n        ]}\n      >\n        {this.renderChildren()}\n        {swipeBackCard ? this.renderSwipeBackCard() : null}\n        {this.renderStack()}\n      </View>\n    )\n  }\n\n  renderChildren = () => {\n    const { childrenOnTop, children, stackSize, showSecondCard } = this.props\n\n    let zIndex = (stackSize && showSecondCard)\n      ? stackSize * -1\n      : 1\n\n    if (childrenOnTop) {\n      zIndex = 5\n    }\n\n    return (\n      <View pointerEvents='box-none' style={[styles.childrenViewStyle, { zIndex: zIndex }]}>\n        {children}\n      </View>\n    )\n  }\n\n  getCardKey = (cardContent, cardIndex) => {\n    const { keyExtractor } = this.props\n\n    if (keyExtractor) {\n      return keyExtractor(cardContent)\n    }\n\n    return cardIndex\n  }\n\n  pushCardToStack = (renderedCards, index, position, key, firstCard) => {\n    const { cards } = this.props\n    const stackCardZoomStyle = this.calculateStackCardZoomStyle(position)\n    const stackCard = this.props.renderCard(cards[index], index)\n    const swipableCardStyle = this.calculateSwipableCardStyle()\n    const renderOverlayLabel = this.renderOverlayLabel()\n    renderedCards.push(\n      <Animated.View\n        key={key}\n        style={firstCard ? swipableCardStyle : stackCardZoomStyle}\n        {...this._panResponder.panHandlers}\n      >\n        {firstCard ? renderOverlayLabel : null}\n        {stackCard}\n      </Animated.View>\n    )\n  }\n\n  renderStack = () => {\n    const { cards, firstCardIndex, swipedAllCards } = this.state\n    const renderedCards = []\n    let { stackSize, infinite, showSecondCard } = this.props\n    let index = firstCardIndex\n    let firstCard = true\n    let cardPosition = 0\n\n    while (stackSize-- > 0 && (firstCard || showSecondCard) && !swipedAllCards) {\n      const key = this.getCardKey(cards[index], index)\n      this.pushCardToStack(renderedCards, index, cardPosition, key, firstCard)\n\n      firstCard = false\n\n      if (index === cards.length - 1) {\n        if (!infinite) break\n        index = 0\n      } else {\n        index++\n      }\n      cardPosition++\n    }\n    return renderedCards\n  }\n\n  renderSwipeBackCard = () => {\n    const { previousCardIndex } = this.state\n    const { cards } = this.props\n    const previousCardStyle = this.calculateSwipeBackCardStyle()\n    const previousCard = this.props.renderCard(cards[previousCardIndex], previousCardIndex)\n    const key = this.getCardKey(cards[previousCardIndex], previousCardIndex)\n\n    return (\n      <Animated.View key={key} style={previousCardStyle}>\n        {previousCard}\n      </Animated.View>\n    )\n  }\n\n  renderOverlayLabel = () => {\n    const {\n      disableBottomSwipe,\n      disableLeftSwipe,\n      disableRightSwipe,\n      disableTopSwipe,\n      overlayLabels\n    } = this.props\n\n    const { labelType } = this.state\n\n    const labelTypeNone = labelType === LABEL_TYPES.NONE\n    const directionSwipeLabelDisabled =\n      (labelType === LABEL_TYPES.BOTTOM && disableBottomSwipe) ||\n      (labelType === LABEL_TYPES.LEFT && disableLeftSwipe) ||\n      (labelType === LABEL_TYPES.RIGHT && disableRightSwipe) ||\n      (labelType === LABEL_TYPES.TOP && disableTopSwipe)\n\n    if (\n      !overlayLabels ||\n      !overlayLabels[labelType] ||\n      labelTypeNone ||\n      directionSwipeLabelDisabled\n    ) {\n      return null\n    }\n\n    return (\n      <Animated.View style={this.calculateOverlayLabelWrapperStyle()}>\n        {!overlayLabels[labelType].element &&\n          <Text style={this.calculateOverlayLabelStyle()}>\n            {overlayLabels[labelType].title}\n          </Text>\n        }\n\n        {overlayLabels[labelType].element &&\n          overlayLabels[labelType].element\n        }\n      </Animated.View>\n    )\n  }\n}\n\nSwiper.propTypes = {\n  animateCardOpacity: PropTypes.bool,\n  animateOverlayLabelsOpacity: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  cardHorizontalMargin: PropTypes.number,\n  cardIndex: PropTypes.number,\n  cardStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  cardVerticalMargin: PropTypes.number,\n  cards: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  containerStyle: PropTypes.object,\n  children: PropTypes.any,\n  childrenOnTop: PropTypes.bool,\n  dragEnd: PropTypes.func,\n  dragStart: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  goBackToPreviousCardOnSwipeBottom: PropTypes.bool,\n  goBackToPreviousCardOnSwipeLeft: PropTypes.bool,\n  goBackToPreviousCardOnSwipeRight: PropTypes.bool,\n  goBackToPreviousCardOnSwipeTop: PropTypes.bool,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  infinite: PropTypes.bool,\n  inputCardOpacityRangeX: PropTypes.array,\n  inputCardOpacityRangeY: PropTypes.array,\n  inputOverlayLabelsOpacityRangeX: PropTypes.array,\n  inputOverlayLabelsOpacityRangeY: PropTypes.array,\n  inputCardOpacityRange: PropTypes.array,\n  inputRotationRange: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  marginBottom: PropTypes.number,\n  marginTop: PropTypes.number,\n  onSwiped: PropTypes.func,\n  onSwipedAborted: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onTapCard: PropTypes.func,\n  onTapCardDeadZone: PropTypes.number,\n  outputCardOpacityRangeX: PropTypes.array,\n  outputCardOpacityRangeY: PropTypes.array,\n  outputOverlayLabelsOpacityRangeX: PropTypes.array,\n  outputOverlayLabelsOpacityRangeY: PropTypes.array,\n  outputRotationRange: PropTypes.array,\n  outputCardOpacityRange: PropTypes.array,\n  overlayLabels: PropTypes.object,\n  overlayLabelStyle: PropTypes.object,\n  overlayLabelWrapperStyle: PropTypes.object,\n  overlayOpacityHorizontalThreshold: PropTypes.number,\n  overlayOpacityVerticalThreshold: PropTypes.number,\n  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),\n  previousCardDefaultPositionX: PropTypes.number,\n  previousCardDefaultPositionY: PropTypes.number,\n  renderCard: PropTypes.func.isRequired,\n  secondCardZoom: PropTypes.number,\n  showSecondCard: PropTypes.bool,\n  stackAnimationFriction: PropTypes.number,\n  stackAnimationTension: PropTypes.number,\n  stackScale: PropTypes.number,\n  stackSeparation: PropTypes.number,\n  stackSize: PropTypes.number,\n  swipeAnimationDuration: PropTypes.number,\n  swipeBackCard: PropTypes.bool,\n  topCardResetAnimationFriction: PropTypes.number,\n  topCardResetAnimationTension: PropTypes.number,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  zoomAnimationDuration: PropTypes.number,\n  zoomFriction: PropTypes.number\n}\n\nSwiper.defaultProps = {\n  animateCardOpacity: false,\n  animateOverlayLabelsOpacity: false,\n  backgroundColor: '#4FD0E9',\n  cardHorizontalMargin: 20,\n  cardIndex: 0,\n  cardStyle: {},\n  cardVerticalMargin: 60,\n  childrenOnTop: false,\n  containerStyle: {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 4,\n  goBackToPreviousCardOnSwipeBottom: false,\n  goBackToPreviousCardOnSwipeLeft: false,\n  goBackToPreviousCardOnSwipeRight: false,\n  goBackToPreviousCardOnSwipeTop: false,\n  infinite: false,\n  inputCardOpacityRangeX: [-width / 2, -width / 3, 0, width / 3, width / 2],\n  inputCardOpacityRangeY: [-height / 2, -height / 3, 0, height / 3, height / 2],\n  inputOverlayLabelsOpacityRangeX: [\n    -width / 3,\n    -width / 4,\n    0,\n    width / 4,\n    width / 3\n  ],\n  inputOverlayLabelsOpacityRangeY: [\n    -height / 4,\n    -height / 5,\n    0,\n    height / 5,\n    height / 4\n  ],\n  inputRotationRange: [-width / 2, 0, width / 2],\n  keyExtractor: null,\n  marginBottom: 0,\n  marginTop: 0,\n  onSwiped: cardIndex => { },\n  onSwipedAborted: () => { },\n  onSwipedAll: () => { },\n  onSwipedBottom: cardIndex => { },\n  onSwipedLeft: cardIndex => { },\n  onSwipedRight: cardIndex => { },\n  onSwipedTop: cardIndex => { },\n  onSwiping: () => { },\n  onTapCard: (cardIndex) => { },\n  onTapCardDeadZone: 5,\n  outputCardOpacityRangeX: [0.8, 1, 1, 1, 0.8],\n  outputCardOpacityRangeY: [0.8, 1, 1, 1, 0.8],\n  outputOverlayLabelsOpacityRangeX: [1, 0, 0, 0, 1],\n  outputOverlayLabelsOpacityRangeY: [1, 0, 0, 0, 1],\n  outputRotationRange: ['-10deg', '0deg', '10deg'],\n  overlayLabels: null,\n  overlayLabelStyle: {\n    fontSize: 45,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    padding: 10,\n    overflow: 'hidden'\n  },\n  overlayLabelWrapperStyle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 2,\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlayOpacityHorizontalThreshold: width / 4,\n  overlayOpacityVerticalThreshold: height / 5,\n  pointerEvents: 'auto',\n  previousCardDefaultPositionX: -width,\n  previousCardDefaultPositionY: -height,\n  secondCardZoom: 0.97,\n  showSecondCard: true,\n  stackAnimationFriction: 7,\n  stackAnimationTension: 40,\n  stackScale: 3,\n  stackSeparation: 10,\n  stackSize: 1,\n  swipeAnimationDuration: 350,\n  swipeBackCard: false,\n  topCardResetAnimationFriction: 7,\n  topCardResetAnimationTension: 40,\n  verticalSwipe: true,\n  verticalThreshold: height / 5,\n  zoomAnimationDuration: 100,\n  zoomFriction: 7\n}\n\nexport default Swiper\n"]},"metadata":{},"sourceType":"module"}