{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var LOGIN = \"LOGIN\";\nexport var PHONE = \"PHONE\";\nexport var login = function login(first_name, last_name, email_id, uid, token) {\n  return function _callee(dispatch) {\n    var check, checkData, response, resData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/profile.json?\"));\n\n          case 2:\n            check = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(check.json());\n\n          case 5:\n            checkData = _context.sent;\n\n            if (checkData) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(fetch(\"https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/profile.json?\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                first_name: first_name,\n                last_name: last_name,\n                email_id: email_id,\n                token: token\n              })\n            }));\n\n          case 9:\n            response = _context.sent;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 12:\n            resData = _context.sent;\n\n          case 13:\n            dispatch({\n              type: LOGIN,\n              token: token,\n              uid: uid,\n              email_id: email_id,\n              first_name: first_name,\n              last_name: last_name\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var AddPhoneNumber = function AddPhoneNumber(number, uid, token) {\n  return function _callee2(dispatch) {\n    var check, checkData, response, resData;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/profile.json?\"));\n\n          case 2:\n            check = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(check.json());\n\n          case 5:\n            checkData = _context2.sent;\n\n            if (checkData) {\n              _context2.next = 13;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(fetch(\"https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/profile.json?\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                number: number,\n                token: token\n              })\n            }));\n\n          case 9:\n            response = _context2.sent;\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 12:\n            resData = _context2.sent;\n\n          case 13:\n            dispatch({\n              type: \"PHONE\",\n              uid: uid,\n              number: number,\n              token: token\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var LoggedInUser = function LoggedInUser(uid) {\n  return function _callee3(dispatch) {\n    var response, resData, keys;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/profile.json?\"));\n\n          case 2:\n            response = _context3.sent;\n            _context3.prev = 3;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            resData = _context3.sent;\n            keys = \"\";\n\n            for (keys in resData) {}\n\n            if (resData[keys].number !== undefined) {\n              dispatch({\n                type: PHONE,\n                number: resData[keys].number,\n                token: resData[keys].token,\n                uid: uid\n              });\n            } else {\n              dispatch({\n                type: LOGIN,\n                token: resData[keys].token,\n                email_id: resData[keys].email_id,\n                first_name: resData[keys].first_name,\n                last_name: resData[keys].last_name,\n                uid: uid\n              });\n            }\n\n            _context3.next = 15;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](3);\n\n            (function () {\n              console.log(\"hii\");\n            });\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[3, 12]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/saahithshetty/ReactNative/Eveels-2/source/Store/action/auth.js"],"names":["LOGIN","PHONE","login","first_name","last_name","email_id","uid","token","dispatch","fetch","check","json","checkData","method","headers","body","JSON","stringify","response","resData","type","AddPhoneNumber","number","LoggedInUser","keys","undefined","console","log"],"mappings":";AAAA,OAAO,IAAMA,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,UAAD,EAAaC,SAAb,EAAwBC,QAAxB,EAAkCC,GAAlC,EAAuCC,KAAvC,EAAiD;AACpE,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACeC,KAAK,mFACyDH,GADzD,oBADpB;;AAAA;AACCI,YAAAA,KADD;AAAA;AAAA,6CAImBA,KAAK,CAACC,IAAN,EAJnB;;AAAA;AAICC,YAAAA,SAJD;;AAAA,gBAKAA,SALA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAMoBH,KAAK,mFACsDH,GADtD,qBAE1B;AACEO,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAFX;AAGEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBd,gBAAAA,UAAU,EAAVA,UADmB;AAEnBC,gBAAAA,SAAS,EAATA,SAFmB;AAGnBC,gBAAAA,QAAQ,EAARA,QAHmB;AAInBE,gBAAAA,KAAK,EAALA;AAJmB,eAAf;AAHR,aAF0B,CANzB;;AAAA;AAMGW,YAAAA,QANH;AAAA;AAAA,6CAmBmBA,QAAQ,CAACP,IAAT,EAnBnB;;AAAA;AAmBGQ,YAAAA,OAnBH;;AAAA;AAqBLX,YAAAA,QAAQ,CAAC;AACPY,cAAAA,IAAI,EAAEpB,KADC;AAEPO,cAAAA,KAAK,EAAEA,KAFA;AAGPD,cAAAA,GAAG,EAAEA,GAHE;AAIPD,cAAAA,QAAQ,EAAEA,QAJH;AAKPF,cAAAA,UAAU,EAAEA,UALL;AAMPC,cAAAA,SAAS,EAAEA;AANJ,aAAD,CAAR;;AArBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAgCD,CAjCM;AAmCP,OAAO,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAShB,GAAT,EAAcC,KAAd,EAAwB;AACpD,SAAO,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEeC,KAAK,mFACyDH,GADzD,oBAFpB;;AAAA;AAECI,YAAAA,KAFD;AAAA;AAAA,6CAKmBA,KAAK,CAACC,IAAN,EALnB;;AAAA;AAKCC,YAAAA,SALD;;AAAA,gBAMAA,SANA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAOoBH,KAAK,mFACsDH,GADtD,qBAE1B;AACEO,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAFX;AAGEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBK,gBAAAA,MAAM,EAANA,MADmB;AAEnBf,gBAAAA,KAAK,EAALA;AAFmB,eAAf;AAHR,aAF0B,CAPzB;;AAAA;AAOGW,YAAAA,QAPH;AAAA;AAAA,6CAkBmBA,QAAQ,CAACP,IAAT,EAlBnB;;AAAA;AAkBGQ,YAAAA,OAlBH;;AAAA;AAoBLX,YAAAA,QAAQ,CAAC;AACPY,cAAAA,IAAI,EAAE,OADC;AAEPd,cAAAA,GAAG,EAAEA,GAFE;AAGPgB,cAAAA,MAAM,EAAEA,MAHD;AAIPf,cAAAA,KAAK,EAAEA;AAJA,aAAD,CAAR;;AApBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA2BD,CA5BM;AA8BP,OAAO,IAAMgB,YAAY,GAAG,SAAfA,YAAe,CAACjB,GAAD,EAAS;AACnC,SAAO,kBAAOE,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEkBC,KAAK,mFACsDH,GADtD,oBAFvB;;AAAA;AAECY,YAAAA,QAFD;AAAA;AAAA;AAAA,6CAMmBA,QAAQ,CAACP,IAAT,EANnB;;AAAA;AAMGQ,YAAAA,OANH;AAOCK,YAAAA,IAPD,GAOQ,EAPR;;AAQH,iBAAKA,IAAL,IAAaL,OAAb,EAAsB,CACrB;;AAED,gBAAIA,OAAO,CAACK,IAAD,CAAP,CAAcF,MAAd,KAAyBG,SAA7B,EAAwC;AACtCjB,cAAAA,QAAQ,CAAC;AACPY,gBAAAA,IAAI,EAAEnB,KADC;AAEPqB,gBAAAA,MAAM,EAAEH,OAAO,CAACK,IAAD,CAAP,CAAcF,MAFf;AAGPf,gBAAAA,KAAK,EAAEY,OAAO,CAACK,IAAD,CAAP,CAAcjB,KAHd;AAIPD,gBAAAA,GAAG,EAAEA;AAJE,eAAD,CAAR;AAMD,aAPD,MAOO;AACLE,cAAAA,QAAQ,CAAC;AACPY,gBAAAA,IAAI,EAAEpB,KADC;AAEPO,gBAAAA,KAAK,EAAEY,OAAO,CAACK,IAAD,CAAP,CAAcjB,KAFd;AAGPF,gBAAAA,QAAQ,EAAEc,OAAO,CAACK,IAAD,CAAP,CAAcnB,QAHjB;AAIPF,gBAAAA,UAAU,EAAEgB,OAAO,CAACK,IAAD,CAAP,CAAcrB,UAJnB;AAKPC,gBAAAA,SAAS,EAAEe,OAAO,CAACK,IAAD,CAAP,CAAcpB,SALlB;AAMPE,gBAAAA,GAAG,EAAEA;AANE,eAAD,CAAR;AAQD;;AA3BE;AAAA;;AAAA;AAAA;AAAA;;AA6BH,yBAAM;AACJoB,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,aAFD;;AA7BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAkCD,CAnCM","sourcesContent":["export const LOGIN = \"LOGIN\";\nexport const PHONE = \"PHONE\";\nexport const login = (first_name, last_name, email_id, uid, token) => {\n  return async (dispatch) => {\n    const check = await fetch(\n      `https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/${uid}/profile.json?`\n    );\n    const checkData = await check.json();\n    if (!checkData) {\n      const response = await fetch(\n        `https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/${uid}/profile.json?`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            first_name,\n            last_name,\n            email_id,\n            token,\n          }),\n        }\n      );\n      const resData = await response.json();\n    }\n    dispatch({\n      type: LOGIN,\n      token: token,\n      uid: uid,\n      email_id: email_id,\n      first_name: first_name,\n      last_name: last_name,\n    });\n    //console.log(resData.name);\n    //console.log(first_name, last_name, number, email_id, uid, token);\n  };\n};\n\nexport const AddPhoneNumber = (number, uid, token) => {\n  return async (dispatch) => {\n    //console.log(number, token, uid);\n    const check = await fetch(\n      `https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/${uid}/profile.json?`\n    );\n    const checkData = await check.json();\n    if (!checkData) {\n      const response = await fetch(\n        `https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/${uid}/profile.json?`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            number,\n            token,\n          }),\n        }\n      );\n      const resData = await response.json();\n    }\n    dispatch({\n      type: \"PHONE\",\n      uid: uid,\n      number: number,\n      token: token,\n    });\n  };\n};\n\nexport const LoggedInUser = (uid) => {\n  return async (dispatch) => {\n    //console.log(uid);\n    const response = await fetch(\n      `https://eveels-c43bb-default-rtdb.asia-southeast1.firebasedatabase.app/users/${uid}/profile.json?`\n    );\n    try {\n      const resData = await response.json();\n      let keys = \"\";\n      for (keys in resData) {\n      }\n      //console.log(keys);\n      if (resData[keys].number !== undefined) {\n        dispatch({\n          type: PHONE,\n          number: resData[keys].number,\n          token: resData[keys].token,\n          uid: uid,\n        });\n      } else {\n        dispatch({\n          type: LOGIN,\n          token: resData[keys].token,\n          email_id: resData[keys].email_id,\n          first_name: resData[keys].first_name,\n          last_name: resData[keys].last_name,\n          uid: uid,\n        });\n      }\n    } catch {\n      () => {\n        console.log(\"hii\");\n      };\n    }\n  };\n};\n\n// export const googleLogin = () => {\n//   return async (dispatch) => {\n//     try {\n//       const result = await Google.logInAsync({\n//         //androidClientId: YOUR_CLIENT_ID_HERE,\n//         behavior: \"web\",\n//         iosClientId:\n//           \"402100750779-e9vd0ca9j7b7pavj3slsor3lg54u3idp.apps.googleusercontent.com\",\n//         scopes: [\"profile\", \"email\"],\n//       });\n//       if (result.type === \"success\") {\n//         console.log(\"here\");\n//         GoogleSignIn(result);\n//       } else {\n//         return { cancelled: true };\n//       }\n//     } catch (e) {\n//       return { error: true };\n//     }\n//   };\n// };\n\n// const checkLoginState = (response) => {\n//   console.log(response);\n//   if (response.authResponse) {\n//     // User is signed-in Facebook.\n//     var unsubscribe = firebase.auth().onAuthStateChanged((firebaseUser) => {\n//       unsubscribe();\n//       // Check if we are already signed-in Firebase with the correct user.\n//       if (!isUserEqual(response.authResponse, firebaseUser)) {\n//         // Build Firebase credential with the Facebook auth token.\n//         var credential = firebase.auth.FacebookAuthProvider.credential(\n//           response.authResponse.accessToken\n//         );\n\n//         // Sign in with the credential from the Facebook user.\n//         firebase\n//           .auth()\n//           .signInWithCredential(credential)\n//           .catch((error) => {\n//             // Handle Errors here.\n//             var errorCode = error.code;\n//             var errorMessage = error.message;\n//             // The email of the user's account used.\n//             var email = error.email;\n//             // The firebase.auth.AuthCredential type that was used.\n//             var credential = error.credential;\n//             // ...\n//           });\n//       } else {\n//         // User is already signed-in Firebase with the correct user.\n//       }\n//     });\n//   } else {\n//     //\n//     console.log(\" User is signed-out of Facebook.\");\n//     //firebase.auth().signOut();\n//   }\n// };\n\n// export const facebookLogin = () => {\n//   const appId = \"597710977980656\";\n//   return async (dispatch) => {\n//     try {\n//       await Facebook.initializeAsync({\n//         appId: appId,\n//       });\n//       const {\n//         type,\n//         token,\n//         appId,\n//         expirationDate,\n//         permissions,\n//         declinedPermissions,\n//       } = await Facebook.logInWithReadPermissionsAsync({\n//         permissions: [\"public_profile\"],\n//       });\n//       console.log(appId, permissions);\n//       if (type === \"success\") {\n//         // Get the user's name using Facebook's Graph API\n//         // const response = await fetch(\n//         //   `https://graph.facebook.com/me?access_token=${token}`\n//         // );\n//         const response = await fetch(\n//           `https://graph.facebook.com/me?access_token=${token}`\n//         );\n//         // checkLoginState(await response.json());\n//         console.log(await response.json());\n//         const credential = firebase.auth.FacebookAuthProvider.credential(token);\n//         firebase\n//           .auth()\n//           .signInWithCredential(credential)\n//           .catch((err) => {\n//             console.log(err);\n//           });\n//         //Alert.alert(\"Logged in!\", `Hi ${(await response.json()).name}!`);\n//       } else {\n//         // type === 'cancel'\n//       }\n//     } catch ({ message }) {\n//       alert(`Facebook Login Error: ${message}`);\n//     }\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}