package expo.modules.updates.loader;

import java.lang.System;

/**
 * Subclass of [Loader] which handles downloading updates from a remote server.
 *
 * Unlike [EmbeddedLoader], it needs to manage file downloading. Currently, it does not skip
 * any assets, meaning all assets must be downloaded in order for the update to be considered
 * ready to launch.
 */
@kotlin.Metadata(mv = {1, 4, 1}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000R\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0002\u0018\u0000 \u001b2\u00020\u0001:\u0001\u001bB1\b\u0016\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\b\u001a\u00020\t\u0012\b\u0010\n\u001a\u0004\u0018\u00010\u000b\u00a2\u0006\u0002\u0010\fB9\b\u0000\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u0012\u0006\u0010\r\u001a\u00020\t\u0012\b\u0010\n\u001a\u0004\u0018\u00010\u000b\u0012\u0006\u0010\u000e\u001a\u00020\u000f\u00a2\u0006\u0002\u0010\u0010J*\u0010\u0011\u001a\u00020\u00122\u0006\u0010\u0013\u001a\u00020\u00142\b\u0010\n\u001a\u0004\u0018\u00010\u000b2\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0015\u001a\u00020\u0016H\u0014J(\u0010\u0017\u001a\u00020\u00122\u0006\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0006\u001a\u00020\u00072\u0006\u0010\u0004\u001a\u00020\u00052\u0006\u0010\u0015\u001a\u00020\u0018H\u0014J\u0010\u0010\u0019\u001a\u00020\u001a2\u0006\u0010\u0013\u001a\u00020\u0014H\u0014R\u000e\u0010\r\u001a\u00020\tX\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u001c"}, d2 = {"Lexpo/modules/updates/loader/RemoteLoader;", "Lexpo/modules/updates/loader/Loader;", "context", "Landroid/content/Context;", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "database", "Lexpo/modules/updates/db/UpdatesDatabase;", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "updatesDirectory", "Ljava/io/File;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Lexpo/modules/updates/db/UpdatesDatabase;Lexpo/modules/updates/loader/FileDownloader;Ljava/io/File;)V", "mFileDownloader", "loaderFiles", "Lexpo/modules/updates/loader/LoaderFiles;", "(Landroid/content/Context;Lexpo/modules/updates/UpdatesConfiguration;Lexpo/modules/updates/db/UpdatesDatabase;Lexpo/modules/updates/loader/FileDownloader;Ljava/io/File;Lexpo/modules/updates/loader/LoaderFiles;)V", "loadAsset", "", "assetEntity", "Lexpo/modules/updates/db/entity/AssetEntity;", "callback", "Lexpo/modules/updates/loader/FileDownloader$AssetDownloadCallback;", "loadManifest", "Lexpo/modules/updates/loader/FileDownloader$ManifestDownloadCallback;", "shouldSkipAsset", "", "Companion", "expo-updates_debug"})
public final class RemoteLoader extends expo.modules.updates.loader.Loader {
    private final expo.modules.updates.loader.FileDownloader mFileDownloader = null;
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.loader.RemoteLoader.Companion Companion = null;
    
    @java.lang.Override()
    protected void loadManifest(@org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.loader.FileDownloader.ManifestDownloadCallback callback) {
    }
    
    @java.lang.Override()
    protected void loadAsset(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.entity.AssetEntity assetEntity, @org.jetbrains.annotations.Nullable()
    java.io.File updatesDirectory, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.loader.FileDownloader.AssetDownloadCallback callback) {
    }
    
    @java.lang.Override()
    protected boolean shouldSkipAsset(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.entity.AssetEntity assetEntity) {
        return false;
    }
    
    public RemoteLoader(@org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.loader.FileDownloader mFileDownloader, @org.jetbrains.annotations.Nullable()
    java.io.File updatesDirectory, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.loader.LoaderFiles loaderFiles) {
        super(null, null, null, null, null);
    }
    
    public RemoteLoader(@org.jetbrains.annotations.NotNull()
    android.content.Context context, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.UpdatesConfiguration configuration, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.UpdatesDatabase database, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.loader.FileDownloader fileDownloader, @org.jetbrains.annotations.Nullable()
    java.io.File updatesDirectory) {
        super(null, null, null, null, null);
    }
    
    @kotlin.Metadata(mv = {1, 4, 1}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0006"}, d2 = {"Lexpo/modules/updates/loader/RemoteLoader$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "expo-updates_debug"})
    public static final class Companion {
        
        private Companion() {
            super();
        }
    }
}