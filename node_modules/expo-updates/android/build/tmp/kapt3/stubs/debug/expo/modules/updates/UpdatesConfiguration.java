package expo.modules.updates;

import java.lang.System;

@kotlin.Metadata(mv = {1, 4, 1}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000J\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0002\b\t\n\u0002\u0010\b\n\u0002\b\u0003\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0010$\n\u0002\b\t\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0007\u0018\u0000 42\u00020\u0001:\u000234B\u0005\u00a2\u0006\u0002\u0010\u0002J\u001a\u0010(\u001a\u00020\u00002\u0012\u0010)\u001a\u000e\u0012\u0004\u0012\u00020\u0016\u0012\u0004\u0012\u00020\u00010\u001aJ\u000e\u0010*\u001a\u00020\u00002\u0006\u0010+\u001a\u00020,J\b\u0010-\u001a\u00020.H\u0002J4\u0010/\u001a\u0004\u0018\u0001H0\"\n\b\u0000\u00100\u0018\u0001*\u00020\u0001*\u000e\u0012\u0004\u0012\u00020\u0016\u0012\u0004\u0012\u00020\u00010\u001a2\u0006\u00101\u001a\u00020\u0016H\u0082\b\u00a2\u0006\u0002\u00102R\u001e\u0010\u0005\u001a\u00020\u00042\u0006\u0010\u0003\u001a\u00020\u0004@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0006\u0010\u0007R\u001e\u0010\t\u001a\u00020\b2\u0006\u0010\u0003\u001a\u00020\b@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\n\u0010\u000bR\u001a\u0010\f\u001a\u00020\bX\u0086\u000e\u00a2\u0006\u000e\n\u0000\u001a\u0004\b\r\u0010\u000b\"\u0004\b\u000e\u0010\u000fR\u001e\u0010\u0010\u001a\u00020\b2\u0006\u0010\u0003\u001a\u00020\b@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0010\u0010\u000bR\u0011\u0010\u0011\u001a\u00020\b8F\u00a2\u0006\u0006\u001a\u0004\b\u0011\u0010\u000bR\u001e\u0010\u0013\u001a\u00020\u00122\u0006\u0010\u0003\u001a\u00020\u0012@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0014\u0010\u0015R\u001e\u0010\u0017\u001a\u00020\u00162\u0006\u0010\u0003\u001a\u00020\u0016@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u0018\u0010\u0019R6\u0010\u001b\u001a\u000e\u0012\u0004\u0012\u00020\u0016\u0012\u0004\u0012\u00020\u00160\u001a2\u0012\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00020\u0016\u0012\u0004\u0012\u00020\u00160\u001a@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001c\u0010\u001dR\"\u0010\u001e\u001a\u0004\u0018\u00010\u00162\b\u0010\u0003\u001a\u0004\u0018\u00010\u0016@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b\u001f\u0010\u0019R\"\u0010 \u001a\u0004\u0018\u00010\u00162\b\u0010\u0003\u001a\u0004\u0018\u00010\u0016@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b!\u0010\u0019R\"\u0010\"\u001a\u0004\u0018\u00010\u00162\b\u0010\u0003\u001a\u0004\u0018\u00010\u0016@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b#\u0010\u0019R\"\u0010%\u001a\u0004\u0018\u00010$2\b\u0010\u0003\u001a\u0004\u0018\u00010$@BX\u0086\u000e\u00a2\u0006\b\n\u0000\u001a\u0004\b&\u0010\'\u00a8\u00065"}, d2 = {"Lexpo/modules/updates/UpdatesConfiguration;", "", "()V", "<set-?>", "Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "checkOnLaunch", "getCheckOnLaunch", "()Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "", "expectsSignedManifest", "getExpectsSignedManifest", "()Z", "hasEmbeddedUpdate", "getHasEmbeddedUpdate", "setHasEmbeddedUpdate", "(Z)V", "isEnabled", "isMissingRuntimeVersion", "", "launchWaitMs", "getLaunchWaitMs", "()I", "", "releaseChannel", "getReleaseChannel", "()Ljava/lang/String;", "", "requestHeaders", "getRequestHeaders", "()Ljava/util/Map;", "runtimeVersion", "getRuntimeVersion", "scopeKey", "getScopeKey", "sdkVersion", "getSdkVersion", "Landroid/net/Uri;", "updateUrl", "getUpdateUrl", "()Landroid/net/Uri;", "loadValuesFromMap", "map", "loadValuesFromMetadata", "context", "Landroid/content/Context;", "maybeSetDefaultScopeKey", "", "readValueCheckingType", "T", "key", "(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;", "CheckAutomaticallyConfiguration", "Companion", "expo-updates_debug"})
public final class UpdatesConfiguration {
    private boolean isEnabled = false;
    private boolean expectsSignedManifest = false;
    @org.jetbrains.annotations.Nullable()
    private java.lang.String scopeKey;
    @org.jetbrains.annotations.Nullable()
    private android.net.Uri updateUrl;
    @org.jetbrains.annotations.Nullable()
    private java.lang.String sdkVersion;
    @org.jetbrains.annotations.Nullable()
    private java.lang.String runtimeVersion;
    @org.jetbrains.annotations.NotNull()
    private java.lang.String releaseChannel = "default";
    private int launchWaitMs = 0;
    @org.jetbrains.annotations.NotNull()
    private expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration checkOnLaunch = expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration.ALWAYS;
    private boolean hasEmbeddedUpdate = true;
    @org.jetbrains.annotations.NotNull()
    private java.util.Map<java.lang.String, java.lang.String> requestHeaders;
    private static final java.lang.String TAG = null;
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_ENABLED_KEY = "enabled";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_SCOPE_KEY_KEY = "scopeKey";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_UPDATE_URL_KEY = "updateUrl";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY = "requestHeaders";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_RELEASE_CHANNEL_KEY = "releaseChannel";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_SDK_VERSION_KEY = "sdkVersion";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_RUNTIME_VERSION_KEY = "runtimeVersion";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_CHECK_ON_LAUNCH_KEY = "checkOnLaunch";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_KEY = "launchWaitMs";
    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String UPDATES_CONFIGURATION_HAS_EMBEDDED_UPDATE_KEY = "hasEmbeddedUpdate";
    private static final java.lang.String UPDATES_CONFIGURATION_RELEASE_CHANNEL_DEFAULT_VALUE = "default";
    private static final int UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_DEFAULT_VALUE = 0;
    @org.jetbrains.annotations.NotNull()
    public static final expo.modules.updates.UpdatesConfiguration.Companion Companion = null;
    
    public final boolean isEnabled() {
        return false;
    }
    
    public final boolean getExpectsSignedManifest() {
        return false;
    }
    
    @org.jetbrains.annotations.Nullable()
    public final java.lang.String getScopeKey() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable()
    public final android.net.Uri getUpdateUrl() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable()
    public final java.lang.String getSdkVersion() {
        return null;
    }
    
    @org.jetbrains.annotations.Nullable()
    public final java.lang.String getRuntimeVersion() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getReleaseChannel() {
        return null;
    }
    
    public final int getLaunchWaitMs() {
        return 0;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final expo.modules.updates.UpdatesConfiguration.CheckAutomaticallyConfiguration getCheckOnLaunch() {
        return null;
    }
    
    public final boolean getHasEmbeddedUpdate() {
        return false;
    }
    
    public final void setHasEmbeddedUpdate(boolean p0) {
    }
    
    @org.jetbrains.annotations.NotNull()
    public final java.util.Map<java.lang.String, java.lang.String> getRequestHeaders() {
        return null;
    }
    
    public final boolean isMissingRuntimeVersion() {
        return false;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final expo.modules.updates.UpdatesConfiguration loadValuesFromMetadata(@org.jetbrains.annotations.NotNull()
    android.content.Context context) {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final expo.modules.updates.UpdatesConfiguration loadValuesFromMap(@org.jetbrains.annotations.NotNull()
    java.util.Map<java.lang.String, ? extends java.lang.Object> map) {
        return null;
    }
    
    private final void maybeSetDefaultScopeKey() {
    }
    
    public UpdatesConfiguration() {
        super();
    }
    
    @kotlin.Metadata(mv = {1, 4, 1}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0006\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002j\u0002\b\u0003j\u0002\b\u0004j\u0002\b\u0005j\u0002\b\u0006\u00a8\u0006\u0007"}, d2 = {"Lexpo/modules/updates/UpdatesConfiguration$CheckAutomaticallyConfiguration;", "", "(Ljava/lang/String;I)V", "NEVER", "ERROR_RECOVERY_ONLY", "WIFI_ONLY", "ALWAYS", "expo-updates_debug"})
    public static enum CheckAutomaticallyConfiguration {
        /*public static final*/ NEVER /* = new NEVER() */,
        /*public static final*/ ERROR_RECOVERY_ONLY /* = new ERROR_RECOVERY_ONLY() */,
        /*public static final*/ WIFI_ONLY /* = new WIFI_ONLY() */,
        /*public static final*/ ALWAYS /* = new ALWAYS() */;
        
        CheckAutomaticallyConfiguration() {
        }
    }
    
    @kotlin.Metadata(mv = {1, 4, 1}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000$\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0005\n\u0002\u0010\b\n\u0002\b\f\n\u0002\u0018\u0002\n\u0002\b\u0002\b\u0086\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002\u00a2\u0006\u0002\u0010\u0002J\u0012\u0010\u0013\u001a\u00020\n2\b\u0010\u0014\u001a\u0004\u0018\u00010\u0004H\u0002J\u0015\u0010\u0015\u001a\u00020\u00042\u0006\u0010\u0016\u001a\u00020\u0017H\u0000\u00a2\u0006\u0002\b\u0018R\u0016\u0010\u0003\u001a\n \u0005*\u0004\u0018\u00010\u00040\u0004X\u0082\u0004\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0006\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\t\u001a\u00020\nX\u0082T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000b\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\f\u001a\u00020\u0004X\u0082T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\r\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000e\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u000f\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0010\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0011\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000R\u000e\u0010\u0012\u001a\u00020\u0004X\u0086T\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u0019"}, d2 = {"Lexpo/modules/updates/UpdatesConfiguration$Companion;", "", "()V", "TAG", "", "kotlin.jvm.PlatformType", "UPDATES_CONFIGURATION_CHECK_ON_LAUNCH_KEY", "UPDATES_CONFIGURATION_ENABLED_KEY", "UPDATES_CONFIGURATION_HAS_EMBEDDED_UPDATE_KEY", "UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_DEFAULT_VALUE", "", "UPDATES_CONFIGURATION_LAUNCH_WAIT_MS_KEY", "UPDATES_CONFIGURATION_RELEASE_CHANNEL_DEFAULT_VALUE", "UPDATES_CONFIGURATION_RELEASE_CHANNEL_KEY", "UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY", "UPDATES_CONFIGURATION_RUNTIME_VERSION_KEY", "UPDATES_CONFIGURATION_SCOPE_KEY_KEY", "UPDATES_CONFIGURATION_SDK_VERSION_KEY", "UPDATES_CONFIGURATION_UPDATE_URL_KEY", "getDefaultPortForScheme", "scheme", "getNormalizedUrlOrigin", "url", "Landroid/net/Uri;", "getNormalizedUrlOrigin$expo_updates_debug", "expo-updates_debug"})
    public static final class Companion {
        
        @org.jetbrains.annotations.NotNull()
        public final java.lang.String getNormalizedUrlOrigin$expo_updates_debug(@org.jetbrains.annotations.NotNull()
        android.net.Uri url) {
            return null;
        }
        
        private final int getDefaultPortForScheme(java.lang.String scheme) {
            return 0;
        }
        
        private Companion() {
            super();
        }
    }
}