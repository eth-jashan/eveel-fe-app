package expo.modules.updates.selectionpolicy;

import java.lang.System;

@kotlin.Metadata(mv = {1, 4, 1}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000:\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010 \n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0002\b\u0002\u0018\u00002\u00020\u0001B\u001d\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u0012\u0006\u0010\u0004\u001a\u00020\u0005\u0012\u0006\u0010\u0006\u001a\u00020\u0007\u00a2\u0006\u0002\u0010\bJ \u0010\u000f\u001a\u0004\u0018\u00010\u00102\f\u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00100\u00122\b\u0010\u0013\u001a\u0004\u0018\u00010\u0014J,\u0010\u0015\u001a\b\u0012\u0004\u0012\u00020\u00100\u00122\f\u0010\u0011\u001a\b\u0012\u0004\u0012\u00020\u00100\u00122\u0006\u0010\u0016\u001a\u00020\u00102\b\u0010\u0013\u001a\u0004\u0018\u00010\u0014J$\u0010\u0017\u001a\u00020\u00182\b\u0010\u0019\u001a\u0004\u0018\u00010\u00102\b\u0010\u0016\u001a\u0004\u0018\u00010\u00102\b\u0010\u0013\u001a\u0004\u0018\u00010\u0014R\u0011\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\b\n\u0000\u001a\u0004\b\t\u0010\nR\u0011\u0010\u0004\u001a\u00020\u0005\u00a2\u0006\b\n\u0000\u001a\u0004\b\u000b\u0010\fR\u0011\u0010\u0006\u001a\u00020\u0007\u00a2\u0006\b\n\u0000\u001a\u0004\b\r\u0010\u000e\u00a8\u0006\u001a"}, d2 = {"Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "", "launcherSelectionPolicy", "Lexpo/modules/updates/selectionpolicy/LauncherSelectionPolicy;", "loaderSelectionPolicy", "Lexpo/modules/updates/selectionpolicy/LoaderSelectionPolicy;", "reaperSelectionPolicy", "Lexpo/modules/updates/selectionpolicy/ReaperSelectionPolicy;", "(Lexpo/modules/updates/selectionpolicy/LauncherSelectionPolicy;Lexpo/modules/updates/selectionpolicy/LoaderSelectionPolicy;Lexpo/modules/updates/selectionpolicy/ReaperSelectionPolicy;)V", "getLauncherSelectionPolicy", "()Lexpo/modules/updates/selectionpolicy/LauncherSelectionPolicy;", "getLoaderSelectionPolicy", "()Lexpo/modules/updates/selectionpolicy/LoaderSelectionPolicy;", "getReaperSelectionPolicy", "()Lexpo/modules/updates/selectionpolicy/ReaperSelectionPolicy;", "selectUpdateToLaunch", "Lexpo/modules/updates/db/entity/UpdateEntity;", "updates", "", "filters", "Lorg/json/JSONObject;", "selectUpdatesToDelete", "launchedUpdate", "shouldLoadNewUpdate", "", "newUpdate", "expo-updates_debug"})
public final class SelectionPolicy {
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.selectionpolicy.LauncherSelectionPolicy launcherSelectionPolicy = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.selectionpolicy.LoaderSelectionPolicy loaderSelectionPolicy = null;
    @org.jetbrains.annotations.NotNull()
    private final expo.modules.updates.selectionpolicy.ReaperSelectionPolicy reaperSelectionPolicy = null;
    
    @org.jetbrains.annotations.Nullable()
    public final expo.modules.updates.db.entity.UpdateEntity selectUpdateToLaunch(@org.jetbrains.annotations.NotNull()
    java.util.List<expo.modules.updates.db.entity.UpdateEntity> updates, @org.jetbrains.annotations.Nullable()
    org.json.JSONObject filters) {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final java.util.List<expo.modules.updates.db.entity.UpdateEntity> selectUpdatesToDelete(@org.jetbrains.annotations.NotNull()
    java.util.List<expo.modules.updates.db.entity.UpdateEntity> updates, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.Nullable()
    org.json.JSONObject filters) {
        return null;
    }
    
    public final boolean shouldLoadNewUpdate(@org.jetbrains.annotations.Nullable()
    expo.modules.updates.db.entity.UpdateEntity newUpdate, @org.jetbrains.annotations.Nullable()
    expo.modules.updates.db.entity.UpdateEntity launchedUpdate, @org.jetbrains.annotations.Nullable()
    org.json.JSONObject filters) {
        return false;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final expo.modules.updates.selectionpolicy.LauncherSelectionPolicy getLauncherSelectionPolicy() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final expo.modules.updates.selectionpolicy.LoaderSelectionPolicy getLoaderSelectionPolicy() {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public final expo.modules.updates.selectionpolicy.ReaperSelectionPolicy getReaperSelectionPolicy() {
        return null;
    }
    
    public SelectionPolicy(@org.jetbrains.annotations.NotNull()
    expo.modules.updates.selectionpolicy.LauncherSelectionPolicy launcherSelectionPolicy, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.selectionpolicy.LoaderSelectionPolicy loaderSelectionPolicy, @org.jetbrains.annotations.NotNull()
    expo.modules.updates.selectionpolicy.ReaperSelectionPolicy reaperSelectionPolicy) {
        super();
    }
}